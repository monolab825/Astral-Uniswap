{"prototypes":{"8ba260f1-ec04-4711-86f5-0b1c88cb4f85":{"attributes":{"root":true},"description":"Project root","interface":{"inputs":{},"outputs":{}},"implementations":{"cranq":{"nodes":{"8253ddd3-0709-42eb-b91e-309f5d3acf43":{"coordinates":[-437,187],"description":"","params":{},"prototype":"d227e22b-e827-4c9d-99db-f96da179bd52","name":"start"},"73f605b7-b4fd-4a04-b4d3-fec7378957cf":{"coordinates":[-292,303.3359375],"name":"config","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f","params":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"{\r\n  \"privateKey\": \"d5ac23b0d69735edcf8f05f74a8132134ce995142e2124a677df606928748379\",\r\n  \"accountAddress\": \"0x9b170d94424F4bded78941A579f8D66Ab5c45c51\",\r\n  \"providerUrl\": \"https://eth-goerli.g.alchemy.com/v2/Yl976DhWaXedO-TARSdh9PD0KmR9rQ7f\",\r\n  \"network\": \"goerli\"\r\n}"}},"35e9024c-a209-4315-bde3-b5af6d092398":{"coordinates":[42,-147.6640625],"name":"multiplexed event logger","prototype":"6537b272-6360-4b41-9967-d307cab9648e","disabled":true},"9e768ea8-995c-4569-9f56-c1e2d6ed3ad0":{"coordinates":[98,-45.6640625],"name":"logger (with message)","prototype":"fafa45e5-b1dd-4348-bcd8-ac6fb25b3d07","params":{"5773699e-0819-4c74-8282-fb2a9a77b0cf":"\"Factory compilation error\""}},"cfe07181-2ece-4be0-8fb9-634df3066a4e":{"coordinates":[233.5,186.8359375],"name":"compile and deploy Router","prototype":"9e555332-d313-4eb9-8f1a-b7fed15a6c16"},"f9200cc1-dc57-4b85-ad6a-5ac014d714af":{"coordinates":[-132,172.8359375],"name":"compile and deploy Factory","prototype":"688cd841-e7b1-4e13-a40b-1bb1dec413f6"},"a238193b-090a-495e-9e3a-3af6c5803989":{"coordinates":[281,-124.6640625],"name":"multiplexed event logger copy","prototype":"6537b272-6360-4b41-9967-d307cab9648e","disabled":true},"e87ec83d-fbb9-404c-9df0-7bf955b8d7b7":{"coordinates":[384,-42.6640625],"name":"logger (with message) copy","prototype":"fafa45e5-b1dd-4348-bcd8-ac6fb25b3d07","params":{"5773699e-0819-4c74-8282-fb2a9a77b0cf":"\"Router compilation or deployment error\""}},"47519456-9068-479a-b619-47064373c588":{"coordinates":[653,188.3359375],"name":"logger","prototype":"1d2a6438-e4bd-4105-b491-cebbb4cae348"},"ecf24b65-8403-4d9b-9366-f8fc4a546588":{"coordinates":[652,368.3359375],"name":"add liquidities","prototype":"7bbbdf92-502d-470b-84ec-5efbd61d44fd"},"887798fa-1225-4a56-ad47-a0a1437076d8":{"coordinates":[430,384.3359375],"name":"syncer","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"address\", \"abi\"]"}},"882b5420-002a-4999-8ff6-908121f2f742":{"coordinates":[-290,382.3359375],"name":"liquidities","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f","params":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"[\r\n\t[\r\n\t\t{ \r\n\t\t\t\"address\": \"0xFbb59922e8E8760C9085987209E52A9150AC2C76\",\r\n\t\t\t  \"desiredAmount\": 1000\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"address\": \"ETH\",\r\n\t\t\t\"desiredAmount\": 0.001\r\n\t\t}\r\n\t],\r\n\t[\r\n\t\t{ \r\n\t\t\t\"address\": \"0xFbb59922e8E8760C9085987209E52A9150AC2C76\",\r\n\t\t\t  \"desiredAmount\": 100\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"address\": \"0x2a12764948464A5D3c4D111D0662E1Fb0653cb3a\",\r\n\t\t\t  \"desiredAmount\": 1000\r\n\t\t}\r\n\t]\r\n]"}},"884667fe-5c74-4432-bf55-f1f2732271f4":{"coordinates":[877,229.3359375],"name":"logger (with message) copy copy","prototype":"fafa45e5-b1dd-4348-bcd8-ac6fb25b3d07","params":{"5773699e-0819-4c74-8282-fb2a9a77b0cf":"\"Add liquidities error\""}},"53b25c7f-4c36-4289-beff-ad040a4f0b97":{"coordinates":[883,482.3359375],"name":"logger copy","prototype":"1d2a6438-e4bd-4105-b491-cebbb4cae348"}},"connections":{"8253ddd3-0709-42eb-b91e-309f5d3acf43":{"fb159194-7413-4b61-9b9a-f6bbfd3d7977":{"73f605b7-b4fd-4a04-b4d3-fec7378957cf":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}},"f9200cc1-dc57-4b85-ad6a-5ac014d714af":{"b4a42586-39a2-4221-8fd8-673b6177a389":{}},"882b5420-002a-4999-8ff6-908121f2f742":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}}}},"73f605b7-b4fd-4a04-b4d3-fec7378957cf":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{"f9200cc1-dc57-4b85-ad6a-5ac014d714af":{"fc7c8edc-22f7-4f9d-b5ee-72e155409e8d":{}},"cfe07181-2ece-4be0-8fb9-634df3066a4e":{"0c2e1194-9ff2-44aa-bffb-d14986a4d00c":{}},"ecf24b65-8403-4d9b-9366-f8fc4a546588":{"3a8d9830-3642-42ae-af03-055c099aeb0a":{}}}},"f9200cc1-dc57-4b85-ad6a-5ac014d714af":{"daa4f3d3-2740-484d-8a07-0f0072306f2c":{"9e768ea8-995c-4569-9f56-c1e2d6ed3ad0":{"b937ea64-339e-46d3-9eff-16cdcaaf7ec4":{}}},"aa325adc-6920-45e6-9b96-13cd43d6c551":{"35e9024c-a209-4315-bde3-b5af6d092398":{"36268fed-37a0-40c5-bd24-79fab399251e":{}}},"6b8d3b0d-4d59-4b9d-87b6-5682692cdb0d":{"cfe07181-2ece-4be0-8fb9-634df3066a4e":{"f957fe01-72ca-4235-9ced-fc28f3c952f9":{}}},"a0a5ca88-b262-4dc6-82e8-5e7bfe825bf4":{"cfe07181-2ece-4be0-8fb9-634df3066a4e":{"f1e4cad6-05bf-4573-8927-f538e984cac4":{}}}},"cfe07181-2ece-4be0-8fb9-634df3066a4e":{"b7167fe7-44be-41b8-a74d-cddd0bc8e01a":{"a238193b-090a-495e-9e3a-3af6c5803989":{"36268fed-37a0-40c5-bd24-79fab399251e":{}}},"e4958385-c9cb-415c-9cf3-498fe5938c77":{"e87ec83d-fbb9-404c-9df0-7bf955b8d7b7":{"b937ea64-339e-46d3-9eff-16cdcaaf7ec4":{}}},"a9cf45e0-37b9-4439-8e04-9e86b2f7b285":{"47519456-9068-479a-b619-47064373c588":{"73758fba-7b0c-4ea6-8fec-0b56982d5451":{}},"887798fa-1225-4a56-ad47-a0a1437076d8":{"address":{}}},"80dee00a-4159-4d37-8f3b-45f552035cfe":{"887798fa-1225-4a56-ad47-a0a1437076d8":{"abi":{}}}},"887798fa-1225-4a56-ad47-a0a1437076d8":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"ecf24b65-8403-4d9b-9366-f8fc4a546588":{"cdbbece1-c5db-4481-83c0-b2101e03fe45":{}}}},"882b5420-002a-4999-8ff6-908121f2f742":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{"ecf24b65-8403-4d9b-9366-f8fc4a546588":{"6f7ec5a1-7049-45d6-867c-14d8b522ffaf":{}}}},"ecf24b65-8403-4d9b-9366-f8fc4a546588":{"f49d6af9-9ab4-4546-8faa-c597546de3a7":{"884667fe-5c74-4432-bf55-f1f2732271f4":{"b937ea64-339e-46d3-9eff-16cdcaaf7ec4":{}}},"320e50f1-a96f-4f21-b3d5-6ac93f7b31d7":{"53b25c7f-4c36-4289-beff-ad040a4f0b97":{"73758fba-7b0c-4ea6-8fec-0b56982d5451":{}}}}},"forwards":{"inputs":{},"outputs":{}}}},"name":"#workspace/Uniswap v2 clone 2"},"d227e22b-e827-4c9d-99db-f96da179bd52":{"description":"Sends the signal null@\"start\" asynchronously right after the node was created at runtime.\n\nMostly used to kick-start the entire program.","interface":{"inputs":{},"outputs":{"fb159194-7413-4b61-9b9a-f6bbfd3d7977":{"description":"Sends null@\"start\" right after the node's creation at runtime.","type":"null","name":"start"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"setTimeout(()=>outputs.start(null, \"start\"), 0);","inputFunctions":{}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"setTimeout(()=>outputs.start(null, \"start\"), 0);","inputFunctions":{}}},"name":"flow/Starter","keywords":{"trigger":null,"initial signal":null},"iconId":"d6c7d254-d4ea-4185-a98a-29b8942d39cc","attributes":{"locked":true}},"485b6519-9402-4e78-8599-47ad52c92b2f":{"description":"Stores data and sends it via `data` when read. When the store is empty, any attempt to read the contents will result in a signal sent out via `not found`.\n\nExample:\n1. `data` set to \"hello\"\n2. null@1 received via `read`\n3. \"hello\"@1 sent via `data` (output)","interface":{"inputs":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":{"type":"any","name":"data","description":"Receives contents of the store. San be set as parameter, or received as signal."},"0b28df10-b056-4666-ae14-2357d747f7b9":{"type":"any","name":"read","description":"Receives a signal that triggers the contents being sent via `data` (output), or `not found` when has no content."}},"outputs":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{"type":"typeof `data`","name":"data","description":"Sends store contents."},"92b91df5-41d7-4e23-aeec-3f459099e659":{"type":"null","name":"written","description":"Sends signal when contents were set in flow."},"e3876be5-e8c8-4983-b770-81fc8cdf5ff5":{"type":"null","name":"not found","description":"Sends signal on read attempt while store has no content."}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"state.data = data;\noutputs.written(null, tag);","0b28df10-b056-4666-ae14-2357d747f7b9":"const value = state.data || params.data;\nif (value !== undefined)\n  outputs.data(value, tag);\nelse\n  outputs[\"not found\"](null, tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"state.data = data;\noutputs.written(null, tag);","0b28df10-b056-4666-ae14-2357d747f7b9":"const value = state.data !== undefined \n  ? state.data\n  : params.data;\nif (value !== undefined)\n  outputs.data(value, tag);\nelse\n  outputs[\"not found\"](null, tag);"}}},"name":"data/Store","keywords":{"variable":null,"container":null,"buffer":null,"data":null},"iconId":"11e997ab-33d0-473a-aa56-1e2fe4d30d5c","attributes":{"locked":true}},"6537b272-6360-4b41-9967-d307cab9648e":{"name":"debug/Multiplexed event logger","interface":{"inputs":{"36268fed-37a0-40c5-bd24-79fab399251e":{"type":"{\n\"field\": string,\n\"data\": any\n}","name":"multiplexed event","description":"[Inherited from port `unsplit` of `splitter`] \nReceives records or tuples to be split into individual items.\n\nExamples:\n* {\"a\": 5, \"b\": 2}\n* [5, 2]"}},"outputs":{}},"implementations":{"cranq":{"nodes":{"cf33122c-5e22-4a95-8bec-5da349dc1bf7":{"coordinates":[-61.5,-3],"name":"splitter","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"field\", \"data\"]"}},"c9e7b74a-271e-45c9-a297-6bcb1a666de8":{"coordinates":[61.5,3],"name":"logger (with message)","prototype":"fafa45e5-b1dd-4348-bcd8-ac6fb25b3d07"}},"connections":{"cf33122c-5e22-4a95-8bec-5da349dc1bf7":{"field":{"c9e7b74a-271e-45c9-a297-6bcb1a666de8":{"5773699e-0819-4c74-8282-fb2a9a77b0cf":{}}},"data":{"c9e7b74a-271e-45c9-a297-6bcb1a666de8":{"b937ea64-339e-46d3-9eff-16cdcaaf7ec4":{}}}}},"forwards":{"inputs":{"36268fed-37a0-40c5-bd24-79fab399251e":{"cf33122c-5e22-4a95-8bec-5da349dc1bf7":{"6ad86184-6890-4323-8021-3496a682c98e":{}}}},"outputs":{}}}},"iconId":"6e06ed83-301e-41ca-bae9-1257efb8e703","attributes":{"locked":true}},"73303290-6d1e-44cf-9414-66769cbb8e91":{"description":"Splits data received via `unsplit` by fields / indexes.\n\nDo not use splitters to access optional record fields. Opt for a `data/dictionary/Item getter` in those cases instead.\n\nExample A (record input):\n1.`fields` is set to [\"a\", \"b\"]\n2. Output ports `a` and `b` get created.\n3. {\"a\": \"foo\", \"b\": \"bar\"}@0 received by `unsplit`\n4. \"foo\"@0 is sent via `a`\n5. \"bar\"@0 is sent via `b`\n\nExample B (tuple input):\n1.`fields` is set to [0, 1]\n2. Output ports `0` and `1` get created.\n3. [\"foo\", \"bar\"]@0 received by `unsplit`\n4. \"foo\"@0 is sent via `0`\n5. \"bar\"@0 is sent via `1`\n\nMore: https://github.com/Cranq-io/cranq-tutorials/blob/main/reference/1_application_flow/1_3_synchronization/README.md#example---synchronizing-node-inputs.","interface":{"inputs":{"7b39d568-3d5a-46fe-8670-3355f60c2746":{"description":"Sets a list of output port names matching property names in the data received via `unsplit`.\n\nMust be parameter.\n\nExample:\n[\"a\", \"b\"]","type":"(string[] or number[])","name":"fields"},"6ad86184-6890-4323-8021-3496a682c98e":{"description":"Receives records or tuples to be split into individual items.\n\nExamples:\n* {\"a\": 5, \"b\": 2}\n* [5, 2]","type":"({string: any} or any[])","name":"unsplit"}},"outputs":{"12be78f3-a82c-4a9e-bb4e-46d61ee64ca3":{"description":"Sends input data split into individual fields.","paramId":"7b39d568-3d5a-46fe-8670-3355f60c2746","type":"(typeof `unsplit`[string] or typeof `unsplit`[number])","name":"split"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"6ad86184-6890-4323-8021-3496a682c98e":"const fields = params.fields;\nfor (const field of fields) {\n  const value = data[field];\n  if (value !== undefined)\n    outputs[field](value, tag);\n}\n"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"6ad86184-6890-4323-8021-3496a682c98e":"const fields = params.fields;\nfor (const field of fields) {\n  const value = data[field];\n  if (value !== undefined)\n    outputs[field](value, tag);\n}\n"}}},"name":"flow/Splitter","keywords":{"destructure record":null,"destructure tuple":null,"descructuring":null,"distribute":null,"synchronization":null,"syncing":null},"iconId":"802b6352-2279-4681-84b8-6558e185fd36","attributes":{"featured":true,"locked":true}},"fafa45e5-b1dd-4348-bcd8-ac6fb25b3d07":{"implementations":{"cranq":{"nodes":{"8e6081f4-d095-4eb5-9e25-145732eaa415":{"coordinates":[39,-72],"name":"log","prototype":"8992956b-cea7-4b73-8f30-d40f49893f9a","params":{}},"3857b11e-3de4-4da1-bdf3-66b1ccd53c56":{"coordinates":[-20.75,73.75],"name":"format output","prototype":"fcf45309-c43e-42ee-8335-1957ca9f427e"}},"forwards":{"inputs":{"b937ea64-339e-46d3-9eff-16cdcaaf7ec4":{"3857b11e-3de4-4da1-bdf3-66b1ccd53c56":{"212ca288-0b71-4a49-bc23-cfe9caf267b9":{}}},"5773699e-0819-4c74-8282-fb2a9a77b0cf":{"3857b11e-3de4-4da1-bdf3-66b1ccd53c56":{"ad22d739-2b4a-481e-8d8c-4fd38873dec3":{}}}},"outputs":{}},"connections":{"3857b11e-3de4-4da1-bdf3-66b1ccd53c56":{"cf8c6e28-3f51-4550-8ab4-a52f61b30f19":{"8e6081f4-d095-4eb5-9e25-145732eaa415":{"f6458629-a8b7-4338-b8c1-94eee78f7af5":{}}}}}}},"interface":{"inputs":{"b937ea64-339e-46d3-9eff-16cdcaaf7ec4":{"type":"any","name":"data"},"5773699e-0819-4c74-8282-fb2a9a77b0cf":{"type":"string","name":"message"}},"outputs":{}},"name":"debug/Logger (with message)","iconId":"6e06ed83-301e-41ca-bae9-1257efb8e703","attributes":{"featured":true,"locked":true}},"8992956b-cea7-4b73-8f30-d40f49893f9a":{"description":"Logs received data to the output, using default formatting options.\n\nNot recommended for complex data types.","interface":{"inputs":{"f6458629-a8b7-4338-b8c1-94eee78f7af5":{"type":"any","name":"data"}},"outputs":{}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"f6458629-a8b7-4338-b8c1-94eee78f7af5":"console.log(`${data} @${tag}`);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"f6458629-a8b7-4338-b8c1-94eee78f7af5":"console.log(`${data} @${tag}`);"}}},"name":"debug/Logger (unformatted)","attributes":{"locked":true}},"fcf45309-c43e-42ee-8335-1957ca9f427e":{"name":"debug/Output formatter","description":"Formats output based on received data and a custom message.","interface":{"inputs":{"212ca288-0b71-4a49-bc23-cfe9caf267b9":{"type":"any","name":"data"},"ad22d739-2b4a-481e-8d8c-4fd38873dec3":{"type":"string","name":"message"}},"outputs":{"cf8c6e28-3f51-4550-8ab4-a52f61b30f19":{"type":"string","name":"prepare output-filled"}}},"implementations":{"cranq":{"nodes":{"342e1b32-1ec8-4522-a4d8-89e3f7783956":{"coordinates":[-169.25,43.25],"name":"forwarder/double","prototype":"9067c53e-399e-4f28-a6ed-26e987ab2418","params":{}},"dc962b16-d558-4210-9b54-f706b8d6d3ba":{"coordinates":[-21.25,-76.75],"name":"serialize","prototype":"3820f096-6216-4049-b374-c98684387fea","params":{"deb0a917-b393-4326-b573-ec6a6f82ffec":"true"}},"f676106a-0950-4945-9d85-ced698472c5e":{"coordinates":[171.75,-75.75],"name":"prepare output","prototype":"d57766a1-8ced-4ed9-ba56-f6b3988d7d67","params":{"25aa567c-3316-4206-b42e-4cfe6a67b0c7":"\"{MESSAGE} {DATA}\""}},"e14995f6-e7c2-4b8c-859c-613093366a6c":{"coordinates":[18.75,109.25],"name":"prepare params","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"MESSAGE\", \"DATA\"]"}}},"connections":{"342e1b32-1ec8-4522-a4d8-89e3f7783956":{"069a212d-9cea-4987-be45-e0079a13d96f":{"dc962b16-d558-4210-9b54-f706b8d6d3ba":{"cc00cc18-d6ce-4661-8dd5-eb3140a3acae":{}}},"d1295197-1962-4680-a037-5890f2175bb9":{"e14995f6-e7c2-4b8c-859c-613093366a6c":{"MESSAGE":{}}}},"e14995f6-e7c2-4b8c-859c-613093366a6c":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"f676106a-0950-4945-9d85-ced698472c5e":{"d0eb3b1c-04b8-4b95-96ee-76b37fc067c6":{}}}},"dc962b16-d558-4210-9b54-f706b8d6d3ba":{"25650a4f-7e35-4754-bc8f-1a57f538166f":{"e14995f6-e7c2-4b8c-859c-613093366a6c":{"DATA":{}}}}},"forwards":{"inputs":{"212ca288-0b71-4a49-bc23-cfe9caf267b9":{"342e1b32-1ec8-4522-a4d8-89e3f7783956":{"e76062c0-e298-4443-a187-94cbd4b3bc74":{}}},"ad22d739-2b4a-481e-8d8c-4fd38873dec3":{"342e1b32-1ec8-4522-a4d8-89e3f7783956":{"7af76a3e-ed65-41b9-9f9d-1a4593c5bf69":{}}}},"outputs":{"cf8c6e28-3f51-4550-8ab4-a52f61b30f19":{"f676106a-0950-4945-9d85-ced698472c5e":{"d6272c3f-069b-4af8-8d4c-fe762a581c40":{}}}}}}},"attributes":{"locked":true}},"9067c53e-399e-4f28-a6ed-26e987ab2418":{"description":"Forwards both received signals in the order of the names of the ports.\n\nUsed for two purposes:\n* Ensuring that any of a node's inputs may receive signals or be set as parameter.\n* Ensuring the order in which signals are sent.\n\nExample a) param vs. signal:\n1. `2`(input) set to \"B\"\n2. \"A\"@0 received via `1` (input)\n3. \"A\"@0 sent via `1` (output)\n4. \"B\"@0 sent via `2` (output)\n\nExample b) signal order:\n1. \"B\"@0 received via `2` (input)\n2. \"A\"@0 received via `1` (input)\n3. \"A\"@0 sent via `1` (output)\n4. \"B\"@0 sent via `2` (output)","interface":{"inputs":{"e76062c0-e298-4443-a187-94cbd4b3bc74":{"type":"any","name":"1","description":"Receives signal or takes parameter to be sent out first."},"7af76a3e-ed65-41b9-9f9d-1a4593c5bf69":{"type":"any","name":"2","description":"Receives signal or takes parameter to be sent out second."}},"outputs":{"069a212d-9cea-4987-be45-e0079a13d96f":{"type":"typeof `1`","name":"1","description":"Forwards signal received via `1` (input)."},"d1295197-1962-4680-a037-5890f2175bb9":{"type":"typeof `2`","name":"2","description":"Forwards signal received via `2` (input). Does not send before `1` (output)."}}},"implementations":{"cranq":{"nodes":{"76b31d35-373f-415e-a0a4-9faa80e2ac4e":{"coordinates":[-7,54],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"1\",\"2\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync inputs"},"5089473d-add9-4be6-b13a-34e3b9444454":{"coordinates":[22,-54],"description":"","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"1\",\"2\"]"},"prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","name":"restore in order"}},"connections":{"76b31d35-373f-415e-a0a4-9faa80e2ac4e":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"5089473d-add9-4be6-b13a-34e3b9444454":{"6ad86184-6890-4323-8021-3496a682c98e":{"description":""}}}}},"forwards":{"inputs":{"e76062c0-e298-4443-a187-94cbd4b3bc74":{"76b31d35-373f-415e-a0a4-9faa80e2ac4e":{"1":{}}},"7af76a3e-ed65-41b9-9f9d-1a4593c5bf69":{"76b31d35-373f-415e-a0a4-9faa80e2ac4e":{"2":{}}}},"outputs":{"069a212d-9cea-4987-be45-e0079a13d96f":{"5089473d-add9-4be6-b13a-34e3b9444454":{"1":{}}},"d1295197-1962-4680-a037-5890f2175bb9":{"5089473d-add9-4be6-b13a-34e3b9444454":{"2":{}}}}}}},"name":"flow/Forwarder (double)","keywords":{"order":null,"signal order":null,"parameter to signal":null},"iconId":"7341443a-8a0a-4a83-b302-effdb497c0f3","attributes":{"locked":true}},"222a7543-3692-4c6d-b027-c422c99b23a1":{"description":"Bundles input signals that have the same tag. All inputs must receive exactly one signal for a given tag (or be a parameter) for the bundle (record or tuple, depending on the type of `fields`) to be sent.\n\nExample A (record):\n1. `fields` is set to [\"a\", \"b\"]\n2. Inputs ports `a` and `b` get created\n3. `a` receives \"Foo\"@0\n4. `b` receives \"Bar\"@0\n5. `synced` sends {\"a\": \"Foo\", \"b\": \"Bar\"}@0\n\nExample B (tuple):\n1. `fields` is set to [0, 1]\n2. Inputs ports `0` and `1` get created\n3. `0` receives \"Foo\"@0\n4. `1` receives \"Bar\"@0\n5. `synced` sends [\"Foo\", \"Bar\"]@0\n\nMore: https://github.com/Cranq-io/cranq-tutorials/blob/main/reference/1_application_flow/1_3_synchronization/README.md#example---synchronizing-node-inputs","interface":{"inputs":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":{"description":"Sets a list of inupt port names matching property names in the data sent via `synced`.\n\nMust be parameter.\n\nExample values:\n* [\"a\", \"b\"] will result in record output\n* [0, 1] will result in a tuple output","type":"(string[] or number[])","name":"fields"},"eaadc9a9-28f4-48f0-b7d3-0c811b515f4a":{"description":"Receives individual item for syncing.","paramId":"ef31c1e9-cfd5-458b-8d3a-951e3db9c232","type":"any","name":"unsynced"}},"outputs":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"description":"Sends synchronized inputs as a record or tuple indexed by the names of the ports they were received through.\n\nExample:\n{\"a\": \"Foo\", \"b\": \"Bar\"}","type":"({string: typeof `unsynced`} or typeof `unsynced`)[]","name":"synced"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"const fields = params.fields || []\nstate.dynamicFields = fields\n  .filter(field => params[field] === undefined);\nstate.staticBundle = fields\n  .filter(field => params[field] !== undefined)\n  .reduce(\n    (result, field) => {result[field] = params[field]; return result},\n    typeof fields[0] === \"number\" ? [] : {});\nstate.bundlesByTag = state.bundlesByTag || new Map();\nstate.portsByTag = state.portsByTag || new Map();\nstate.copy = (value) => value instanceof Array\n  ? [...value] : value instanceof Object\n    ? {...value} : value;","inputFunctions":{"eaadc9a9-28f4-48f0-b7d3-0c811b515f4a":"const {bundlesByTag, portsByTag} = state;\nlet bundle = bundlesByTag.get(tag);\nif (!bundle) {\n  bundle = state.copy(state.staticBundle);\n  bundlesByTag.set(tag, bundle);\n}\nlet ports = portsByTag.get(tag);\nif (!ports) {\n  ports = new Set(state.dynamicFields);\n  portsByTag.set(tag, ports);\n}\nbundle[input] = data;\nports.delete(input);\nif (ports.size === 0) {\n  bundlesByTag.delete(tag);\n  portsByTag.delete(tag);\n  outputs.synced(bundle, tag);\n}"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"const fields = params.fields || []\nstate.dynamicFields = fields\n  .filter(field => params[field] === undefined);\nstate.staticBundle = fields\n  .filter(field => params[field] !== undefined)\n  .reduce(\n    (result, field) => {result[field] = params[field]; return result},\n    typeof fields[0] === \"number\" ? [] : {});\nstate.bundlesByTag = state.bundlesByTag || new Map();\nstate.portsByTag = state.portsByTag || new Map();\nstate.copy = (value) => value instanceof Array\n  ? [...value] : value instanceof Object\n    ? {...value} : value;","inputFunctions":{"eaadc9a9-28f4-48f0-b7d3-0c811b515f4a":"const {bundlesByTag, portsByTag} = state;\nlet bundle = bundlesByTag.get(tag);\nif (!bundle) {\n  bundle = state.copy(state.staticBundle);\n  bundlesByTag.set(tag, bundle);\n}\nlet ports = portsByTag.get(tag);\nif (!ports) {\n  ports = new Set(state.dynamicFields);\n  portsByTag.set(tag, ports);\n}\nbundle[input] = data;\nports.delete(input);\nif (ports.size === 0) {\n  bundlesByTag.delete(tag);\n  portsByTag.delete(tag);\n  outputs.synced(bundle, tag);\n}"}}},"name":"flow/Syncer","keywords":{"merge":null,"build record":null,"build tuple":null},"iconId":"7341443a-8a0a-4a83-b302-effdb497c0f3","attributes":{"featured":true,"locked":true}},"3820f096-6216-4049-b374-c98684387fea":{"description":"","interface":{"inputs":{"cc00cc18-d6ce-4661-8dd5-eb3140a3acae":{"description":"","type":"any","name":"data"},"deb0a917-b393-4326-b573-ec6a6f82ffec":{"description":"","type":"any","name":"pretty"}},"outputs":{"25650a4f-7e35-4754-bc8f-1a57f538166f":{"description":"","type":"any","name":"json"}}},"implementations":{"cranq":{"nodes":{"d9b75e43-880e-42d8-ba9c-a79f03e3815c":{"coordinates":[-53,56],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"data\", \"pretty\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync data & pretty"},"186f22d0-90f7-4e41-a9ca-1c23036528f7":{"coordinates":[43,-47],"description":"","params":{},"prototype":"8bea41cd-6669-4b21-8242-75191ac6bd14","name":"serialize"}},"connections":{"d9b75e43-880e-42d8-ba9c-a79f03e3815c":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"186f22d0-90f7-4e41-a9ca-1c23036528f7":{"03b51ad2-3cd3-4a9a-bd5a-5fdee3a1b4d7":{"description":""}}}}},"forwards":{"inputs":{"cc00cc18-d6ce-4661-8dd5-eb3140a3acae":{"d9b75e43-880e-42d8-ba9c-a79f03e3815c":{"data":{}}},"deb0a917-b393-4326-b573-ec6a6f82ffec":{"d9b75e43-880e-42d8-ba9c-a79f03e3815c":{"pretty":{}}}},"outputs":{"25650a4f-7e35-4754-bc8f-1a57f538166f":{"186f22d0-90f7-4e41-a9ca-1c23036528f7":{"1c2473e9-843e-43f8-bcf4-53c157aa7b80":{}}}}}}},"name":"json/Serializer","attributes":{"locked":true}},"8bea41cd-6669-4b21-8242-75191ac6bd14":{"description":"","interface":{"inputs":{"03b51ad2-3cd3-4a9a-bd5a-5fdee3a1b4d7":{"description":"","type":"any","name":"data & pretty"}},"outputs":{"1c2473e9-843e-43f8-bcf4-53c157aa7b80":{"description":"","type":"any","name":"json"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"03b51ad2-3cd3-4a9a-bd5a-5fdee3a1b4d7":"outputs.json(JSON.stringify(data.data, null, data.pretty ? 2 : 0), tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"03b51ad2-3cd3-4a9a-bd5a-5fdee3a1b4d7":"outputs.json(JSON.stringify(data.data, null, data.pretty ? 2 : 0), tag);"}}},"name":"json/Serializer/Internal","attributes":{"internal":true,"locked":true}},"d57766a1-8ced-4ed9-ba56-f6b3988d7d67":{"description":"Substitutes parameters into a template.\n\nExample:\n\n1. \"Hello {subject}!\"@0 is received via `template`\n2. {\"subject\":\"world\"}@0 is received via params\n3. \"Hello world!\"@0 is sent via `filled`","interface":{"inputs":{"25aa567c-3316-4206-b42e-4cfe6a67b0c7":{"type":"string","name":"template","description":"The template to be filled"},"d0eb3b1c-04b8-4b95-96ee-76b37fc067c6":{"type":"{string:any}","name":"params","description":"The actual parameters used for filling the template"}},"outputs":{"d6272c3f-069b-4af8-8d4c-fe762a581c40":{"type":"string","name":"filled","description":"Sends the template filled with the given values from params."}}},"implementations":{"cranq":{"nodes":{"ef09b848-e73a-434c-b826-d66ede351b15":{"coordinates":[-21,55],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"template\",\"params\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync template & params"},"be775bad-12dd-4560-bc84-95af8180521b":{"coordinates":[11,-48],"description":"","params":{},"prototype":"750a3b0e-1468-469d-870b-7c3b47a49ca0","name":"fill template"}},"connections":{"ef09b848-e73a-434c-b826-d66ede351b15":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"be775bad-12dd-4560-bc84-95af8180521b":{"df7b6135-bb57-4e2e-b1ad-3867c3d7a354":{"description":""}}}}},"forwards":{"inputs":{"25aa567c-3316-4206-b42e-4cfe6a67b0c7":{"ef09b848-e73a-434c-b826-d66ede351b15":{"template":{}}},"d0eb3b1c-04b8-4b95-96ee-76b37fc067c6":{"ef09b848-e73a-434c-b826-d66ede351b15":{"params":{}}}},"outputs":{"d6272c3f-069b-4af8-8d4c-fe762a581c40":{"be775bad-12dd-4560-bc84-95af8180521b":{"81d00a83-cfd8-4e85-a63f-dd177a8b4706":{}}}}}}},"name":"string/Template filler","keywords":{"string":null,"template":null},"iconId":"7341443a-8a0a-4a83-b302-effdb497c0f3","attributes":{"locked":true}},"750a3b0e-1468-469d-870b-7c3b47a49ca0":{"description":"","interface":{"inputs":{"df7b6135-bb57-4e2e-b1ad-3867c3d7a354":{"type":"{\"template\":string,\"params\":{string:any}}","name":"template & params"}},"outputs":{"81d00a83-cfd8-4e85-a63f-dd177a8b4706":{"type":"string","name":"filled"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"df7b6135-bb57-4e2e-b1ad-3867c3d7a354":"const {template, params} = data;\noutputs.filled(template.replace(\n  /(?<!\\\\){((?:\\\\}|[^}])*)}/g,\n  (match, key) => {\n    const param = params[key];\n    return param === undefined ? match : param;\n  }), tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"df7b6135-bb57-4e2e-b1ad-3867c3d7a354":"const {template, params} = data;\noutputs.filled(template.replace(\n  /(?<!\\\\){((?:\\\\}|[^}])*)}/g,\n  (match, key) => {\n    const param = params[key];\n    return param === undefined ? match : param;\n  }), tag);"}}},"name":"string/Template filler/Internal","iconId":"abac34e3-c832-4c7b-b045-62f82ebc3ddb","attributes":{"internal":true,"locked":true}},"9e555332-d313-4eb9-8f1a-b7fed15a6c16":{"name":"#workspace/Uniswap v2 clone/Group","interface":{"inputs":{"f957fe01-72ca-4235-9ced-fc28f3c952f9":{"type":"string","name":"factory address"},"f1e4cad6-05bf-4573-8927-f538e984cac4":{"type":"any","name":"factory ABI"},"0c2e1194-9ff2-44aa-bffb-d14986a4d00c":{"type":"any","name":"config"}},"outputs":{"a9cf45e0-37b9-4439-8e04-9e86b2f7b285":{"type":"string","name":"router address"},"80dee00a-4159-4d37-8f3b-45f552035cfe":{"type":"any","name":"router ABI"},"b7167fe7-44be-41b8-a74d-cddd0bc8e01a":{"type":"any","name":"events"},"e4958385-c9cb-415c-9cf3-498fe5938c77":{"type":"any","name":"error"}}},"implementations":{"cranq":{"nodes":{"b7507c33-c455-42cd-bbe5-5f24eb47115c":{"coordinates":[258.5,-19.5],"name":"router compiler","prototype":"125d96bd-7269-4cfb-ab93-366d611f2647"},"99c5736c-f94c-4241-96ff-b1ec44d509f6":{"coordinates":[488.5,-121.5],"name":"router deployer","prototype":"0829c503-2486-4c90-9901-52439492c17e"},"3275f55a-8369-4be9-b1cf-0fdd01d68a5d":{"coordinates":[50.1171875,-21.0546875],"name":"init code pair hash requester","prototype":"8ad9e182-95f3-4e99-94d9-c9489eead7c4"},"4d261585-52ab-48e3-8600-84768c2c00bc":{"coordinates":[-113.8828125,123.9453125],"name":"item getter","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f","params":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":"\"providerUrl\""}},"5cc8a2e3-9139-487d-9d44-f8228476d04f":{"coordinates":[26.8359375,-326.5],"name":"weth addresses","prototype":"d016a834-c89f-414d-b3d4-48e6b5d924ef"},"9990efd9-cbdd-487e-b28c-024cab85e2bc":{"coordinates":[-255.8828125,-311.0546875],"name":"get network","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f","params":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":"\"network\""}},"c188decd-3ddf-4282-a6fd-c44e2a7013dc":{"coordinates":[673.8359375,-115.5],"name":"contract deployment waiter","prototype":"1e99c75f-d21c-41de-a79c-7080ab8a2883","params":{"465fe590-d79e-4987-b1c6-a414e01773e2":"2"}},"d9ffaa3b-a8e9-41af-a31c-850d8034055a":{"coordinates":[393.1171875,172.9453125],"name":"get ABI key","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f","params":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":"\"abi\""}}},"connections":{"3275f55a-8369-4be9-b1cf-0fdd01d68a5d":{"a42c8f8d-11c4-4b8b-96b9-3a801f3e7fb6":{"b7507c33-c455-42cd-bbe5-5f24eb47115c":{"5199b9b1-7f03-4665-862a-613a23a8691a":{}}}},"4d261585-52ab-48e3-8600-84768c2c00bc":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{"3275f55a-8369-4be9-b1cf-0fdd01d68a5d":{"9cd53ac0-f4b8-4082-9f7e-0d509cf18101":{}}}},"b7507c33-c455-42cd-bbe5-5f24eb47115c":{"f6250a09-cd0c-49c2-af3c-aab4032750b4":{"99c5736c-f94c-4241-96ff-b1ec44d509f6":{"a6645263-ae6f-4a41-825f-cf10bad0e98c":{}},"d9ffaa3b-a8e9-41af-a31c-850d8034055a":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}}}},"9990efd9-cbdd-487e-b28c-024cab85e2bc":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{"5cc8a2e3-9139-487d-9d44-f8228476d04f":{"b398713c-c8ff-4a98-9d77-5ad8023a43a5":{}}}},"5cc8a2e3-9139-487d-9d44-f8228476d04f":{"f5711708-f236-47e0-b84a-aa3bc1b88196":{"99c5736c-f94c-4241-96ff-b1ec44d509f6":{"1be1c7f6-ec26-496e-98a6-10b5a8b9b3f9":{}}}},"99c5736c-f94c-4241-96ff-b1ec44d509f6":{"7863188d-de92-41cc-b5c3-f5326b24ec02":{"c188decd-3ddf-4282-a6fd-c44e2a7013dc":{"67c68864-f37a-4967-9ddd-3a87617ac325":{}}}}},"forwards":{"inputs":{"f957fe01-72ca-4235-9ced-fc28f3c952f9":{"3275f55a-8369-4be9-b1cf-0fdd01d68a5d":{"202dbb68-350c-4df4-a992-85352f7e692c":{}},"99c5736c-f94c-4241-96ff-b1ec44d509f6":{"ae906061-5695-4e79-aa79-a30b6ab50ca3":{}}},"f1e4cad6-05bf-4573-8927-f538e984cac4":{"3275f55a-8369-4be9-b1cf-0fdd01d68a5d":{"14a6e991-cb90-4f42-b1df-3ea7d58d895b":{}}},"0c2e1194-9ff2-44aa-bffb-d14986a4d00c":{"4d261585-52ab-48e3-8600-84768c2c00bc":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}},"99c5736c-f94c-4241-96ff-b1ec44d509f6":{"c6f7b167-e6a9-490e-95a5-509caa485269":{}},"9990efd9-cbdd-487e-b28c-024cab85e2bc":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}}}},"outputs":{"e4958385-c9cb-415c-9cf3-498fe5938c77":{"b7507c33-c455-42cd-bbe5-5f24eb47115c":{"aa4575fc-d7b8-4205-944b-b87227acc8ea":{}},"99c5736c-f94c-4241-96ff-b1ec44d509f6":{"43026ea7-55a5-4af6-a937-272c8bfaba2a":{}}},"b7167fe7-44be-41b8-a74d-cddd0bc8e01a":{"99c5736c-f94c-4241-96ff-b1ec44d509f6":{"ff61a589-bab9-48de-997f-300f29073deb":{}}},"a9cf45e0-37b9-4439-8e04-9e86b2f7b285":{"c188decd-3ddf-4282-a6fd-c44e2a7013dc":{"eadf732a-e84a-47e0-a825-95574d2f25ee":{}}},"80dee00a-4159-4d37-8f3b-45f552035cfe":{"d9ffaa3b-a8e9-41af-a31c-850d8034055a":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{}}}}}}},"iconId":"abac34e3-c832-4c7b-b045-62f82ebc3ddb","attributes":{"internal":true}},"125d96bd-7269-4cfb-ab93-366d611f2647":{"name":"blockchain/ethereum/Uniswap/v2/Router compiler","interface":{"inputs":{"5199b9b1-7f03-4665-862a-613a23a8691a":{"type":"typeof `factory init hash` of `compile periphery-v2`","name":"factory init hash","description":"A value called 'INIT_HASH_CODE' that is shared between the Factory and the Router.\nThis value can be get from the Factory."}},"outputs":{"f6250a09-cd0c-49c2-af3c-aab4032750b4":{"type":"typeof `compiled contracts` of `compile periphery-v2`[\"abi\"]","name":"compiled Router contract"},"aa4575fc-d7b8-4205-944b-b87227acc8ea":{"type":"typeof `error` of `compile periphery-v2`","name":"error"}}},"implementations":{"cranq":{"nodes":{"b60a494d-271b-4075-9001-8398d281de1c":{"coordinates":[1,1],"name":"compile periphery-v2","prototype":"67ab2ae2-50e3-4c99-bbf7-0f02291bc4b9"},"b7e27645-449a-4b81-9702-053b820d6f27":{"coordinates":[169.61588541666652,-101.484375],"name":"item getter","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f","params":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":"\"UniswapV2Router02\""}}},"connections":{"b60a494d-271b-4075-9001-8398d281de1c":{"d52dc2ed-e787-456a-aa02-c9aec0cc1858":{"b7e27645-449a-4b81-9702-053b820d6f27":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}}}}},"forwards":{"inputs":{"5199b9b1-7f03-4665-862a-613a23a8691a":{"b60a494d-271b-4075-9001-8398d281de1c":{"eaa9ae98-4f1e-4cd7-a7ac-6168540dbd12":{}}}},"outputs":{"f6250a09-cd0c-49c2-af3c-aab4032750b4":{"b7e27645-449a-4b81-9702-053b820d6f27":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{}}},"aa4575fc-d7b8-4205-944b-b87227acc8ea":{"b60a494d-271b-4075-9001-8398d281de1c":{"de6d47c9-a9f9-46fb-875d-7b16dd5cf777":{}}}}}}},"iconId":"abac34e3-c832-4c7b-b045-62f82ebc3ddb","description":"Compiles UniswapV2Router02 contract","attributes":{"locked":true}},"67ab2ae2-50e3-4c99-bbf7-0f02291bc4b9":{"name":"blockchain/ethereum/Uniswap/v2/Periphery compiler","interface":{"inputs":{"eaa9ae98-4f1e-4cd7-a7ac-6168540dbd12":{"type":"typeof `factory init hash` of `instrument source`","name":"factory init hash","description":"A value called 'INIT_HASH_CODE' that is shared between the Factory and the Router.\nThis value can be get from the Factory."}},"outputs":{"d52dc2ed-e787-456a-aa02-c9aec0cc1858":{"type":"typeof `compiled contracts` of `compile periphery`","name":"compiled contracts"},"de6d47c9-a9f9-46fb-875d-7b16dd5cf777":{"type":"any","name":"error"}}},"implementations":{"cranq":{"nodes":{"051646a2-d6a9-440a-9792-a876bb6f1aa9":{"coordinates":[-495.3841145833335,-185.78125],"name":"forwarder","prototype":"420bb3c5-79a9-4b4d-934e-ee04d07f92b0"},"0af3dded-37eb-4e94-b814-f1b7c8e16a98":{"coordinates":[-299.88411458333337,-310.984375],"name":"periphery source code","prototype":"f1ba6849-b8d1-44be-9bce-860cabb016f0"},"0c7ef0e8-33dc-43fa-9fcf-f22933bfbf0b":{"coordinates":[85.81588541666656,-249.484375],"name":"instrument source","prototype":"0eb7a913-b7a6-4d90-ab67-1f836959ed97"},"90cc2f29-a201-42d1-8b8b-b65d3315276a":{"coordinates":[490.5,-15.625],"name":"compile periphery","prototype":"8b0df39b-8337-4107-8211-565d56429b0f"},"3c8814c6-3419-4916-abe1-54a071217692":{"coordinates":[35.5,-54.625],"name":"output list periphery","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f","params":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"[\n\"v2-periphery/contracts/UniswapV2Migrator.sol\",\n  \"v2-periphery/contracts/UniswapV2Router01.sol\",\n  \"v2-periphery/contracts/UniswapV2Router02.sol\"\n]"}},"e53e1b57-9826-49a1-8ca5-c440ba04b1d8":{"coordinates":[36.5,77.375],"name":"compile settings periphery","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f","params":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"{\n    \"includeRoots\": [\n      \"v2-periphery/contracts\",\n      \"v2-periphery/node_modules\"\n    ],\n    \"solidityVersion\": \"v0.6.6+commit.6c089d02\",\n    \"compileOptions\": {\n      \"evmVersion\": \"istanbul\",\n      \"optimizer\": {\"enabled\": true, \"runs\": 999999}\n    }\n  }"}}},"connections":{"051646a2-d6a9-440a-9792-a876bb6f1aa9":{"0a9cd5b0-6de6-4c69-aa04-2816de994173":{"0af3dded-37eb-4e94-b814-f1b7c8e16a98":{"2a182932-ca45-4c09-8753-a9a4f355c219":{}},"0c7ef0e8-33dc-43fa-9fcf-f22933bfbf0b":{"83b88c0c-d67b-42b4-982a-acd8c0779455":{}}}},"0af3dded-37eb-4e94-b814-f1b7c8e16a98":{"0cf791d5-e2f9-456e-b8df-40c776f03f0f":{"0c7ef0e8-33dc-43fa-9fcf-f22933bfbf0b":{"c417cbe1-6e5c-4f6a-9bd9-e9329f6bae7f":{}}}},"0c7ef0e8-33dc-43fa-9fcf-f22933bfbf0b":{"3d2487c4-3842-460a-aa49-c5afb7502621":{"90cc2f29-a201-42d1-8b8b-b65d3315276a":{"7654e398-a401-4115-98b8-c2b8eba66ed4":{}}}},"3c8814c6-3419-4916-abe1-54a071217692":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{"90cc2f29-a201-42d1-8b8b-b65d3315276a":{"60fd9fa4-1462-4c91-915b-11b325c0d479":{}}}},"e53e1b57-9826-49a1-8ca5-c440ba04b1d8":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{"90cc2f29-a201-42d1-8b8b-b65d3315276a":{"eb554de7-b398-413f-8ff0-99dd34a7580a":{}}}}},"forwards":{"inputs":{"eaa9ae98-4f1e-4cd7-a7ac-6168540dbd12":{"051646a2-d6a9-440a-9792-a876bb6f1aa9":{"b0fb4a37-09d5-462e-952a-c3ab29a47e82":{}},"3c8814c6-3419-4916-abe1-54a071217692":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}},"e53e1b57-9826-49a1-8ca5-c440ba04b1d8":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}}}},"outputs":{"d52dc2ed-e787-456a-aa02-c9aec0cc1858":{"90cc2f29-a201-42d1-8b8b-b65d3315276a":{"58f95201-dc73-469a-8503-ce955c514032":{}}},"de6d47c9-a9f9-46fb-875d-7b16dd5cf777":{"90cc2f29-a201-42d1-8b8b-b65d3315276a":{"d00232d5-3801-4820-92ed-43ae75ccb626":{}}}}}}},"original":"039a941e-2161-4685-aab8-f8686a733b51","description":"Compiles Uniswap V2 periphery contracts","attributes":{"locked":true}},"420bb3c5-79a9-4b4d-934e-ee04d07f92b0":{"description":"Forwards signal received via `data` (input) to `data` (output).\n\nRarely necessary, and when it is used, it's usually to clean up nodes visually.","interface":{"inputs":{"b0fb4a37-09d5-462e-952a-c3ab29a47e82":{"description":"Receives data to be forwarded.","type":"any","name":"data"}},"outputs":{"0a9cd5b0-6de6-4c69-aa04-2816de994173":{"description":"Sends forwarded data.","type":"any","name":"data"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"b0fb4a37-09d5-462e-952a-c3ab29a47e82":"outputs.data(data, tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"b0fb4a37-09d5-462e-952a-c3ab29a47e82":"outputs.data(data, tag);"}}},"name":"flow/Forwarder","keywords":{"noop":null},"iconId":"7341443a-8a0a-4a83-b302-effdb497c0f3","attributes":{"locked":true}},"f1ba6849-b8d1-44be-9bce-860cabb016f0":{"name":"blockchain/ethereum/Uniswap/v2/Periphery source code (instrumented)","description":"Holds the Uniswap V2 Core source code in a structured way.","interface":{"inputs":{"2a182932-ca45-4c09-8753-a9a4f355c219":{"type":"any","name":"start","description":"[Inherited from port `read` of `contracts periphery instrumented`] \nReceives a signal that triggers the contents being sent via `data` (output), or `not found` when has no content."}},"outputs":{"0cf791d5-e2f9-456e-b8df-40c776f03f0f":{"type":"typeof `data` of `contracts periphery instrumented`","name":"v2-periphery source","description":"[Inherited from port `data` of `contracts periphery instrumented`] \nSends store contents."}}},"implementations":{"cranq":{"nodes":{"2b240e9c-a41b-4372-a195-dfd8c853fbad":{"coordinates":[0,0],"name":"contracts periphery instrumented","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f","params":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"{\r\n  \"v2-periphery\": {\r\n    \"contracts\": {\r\n      \"interfaces\": {\r\n        \"IERC20.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n    function symbol() external view returns (string memory);\\r\\n    function decimals() external view returns (uint8);\\r\\n    function totalSupply() external view returns (uint);\\r\\n    function balanceOf(address owner) external view returns (uint);\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool);\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n}\\r\\n\",\r\n        \"IUniswapV2Migrator.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Migrator {\\r\\n    function migrate(address token, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external;\\r\\n}\\r\\n\",\r\n        \"IUniswapV2Router01.sol\": \"pragma solidity >=0.6.2;\\r\\n\\r\\ninterface IUniswapV2Router01 {\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapTokensForExactTokens(\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        payable\\r\\n        returns (uint[] memory amounts);\\r\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        returns (uint[] memory amounts);\\r\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        returns (uint[] memory amounts);\\r\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        payable\\r\\n        returns (uint[] memory amounts);\\r\\n\\r\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n}\\r\\n\",\r\n        \"IUniswapV2Router02.sol\": \"pragma solidity >=0.6.2;\\r\\n\\r\\nimport './IUniswapV2Router01.sol';\\r\\n\\r\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\r\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountETH);\\r\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountETH);\\r\\n\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable;\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n}\\r\\n\",\r\n        \"IWETH.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IWETH {\\r\\n    function deposit() external payable;\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function withdraw(uint) external;\\r\\n}\\r\\n\",\r\n        \"V1\": {\r\n          \"IUniswapV1Exchange.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV1Exchange {\\r\\n    function balanceOf(address owner) external view returns (uint);\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n    function removeLiquidity(uint, uint, uint, uint) external returns (uint, uint);\\r\\n    function tokenToEthSwapInput(uint, uint, uint) external returns (uint);\\r\\n    function ethToTokenSwapInput(uint, uint) external payable returns (uint);\\r\\n}\\r\\n\",\r\n          \"IUniswapV1Factory.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV1Factory {\\r\\n    function getExchange(address) external view returns (address);\\r\\n}\\r\\n\"\r\n        }\r\n      },\r\n      \"libraries\": {\r\n        \"SafeMath.sol\": \"pragma solidity =0.6.6;\\r\\n\\r\\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint x, uint y) internal pure returns (uint z) {\\r\\n        require((z = x + y) >= x, 'ds-math-add-overflow');\\r\\n    }\\r\\n\\r\\n    function sub(uint x, uint y) internal pure returns (uint z) {\\r\\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\\r\\n    }\\r\\n\\r\\n    function mul(uint x, uint y) internal pure returns (uint z) {\\r\\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\\r\\n    }\\r\\n}\\r\\n\",\r\n        \"UniswapV2Library.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';\\r\\n\\r\\nimport \\\"./SafeMath.sol\\\";\\r\\n\\r\\nlibrary UniswapV2Library {\\r\\n    using SafeMath for uint;\\r\\n\\r\\n    // returns sorted token addresses, used to handle return values from pairs sorted in this order\\r\\n    function sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1) {\\r\\n        require(tokenA != tokenB, 'UniswapV2Library: IDENTICAL_ADDRESSES');\\r\\n        (token0, token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\\r\\n        require(token0 != address(0), 'UniswapV2Library: ZERO_ADDRESS');\\r\\n    }\\r\\n\\r\\n    // calculates the CREATE2 address for a pair without making any external calls\\r\\n    function pairFor(address factory, address tokenA, address tokenB) internal pure returns (address pair) {\\r\\n        (address token0, address token1) = sortTokens(tokenA, tokenB);\\r\\n        pair = address(uint(keccak256(abi.encodePacked(\\r\\n                hex'ff',\\r\\n                factory,\\r\\n                keccak256(abi.encodePacked(token0, token1)),\\r\\n                hex'###PLACEHOLDER_FOR_FACTORY_INIT_HASH###' // init code hash\\r\\n            ))));\\r\\n    }\\r\\n\\r\\n    // fetches and sorts the reserves for a pair\\r\\n    function getReserves(address factory, address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB) {\\r\\n        (address token0,) = sortTokens(tokenA, tokenB);\\r\\n        (uint reserve0, uint reserve1,) = IUniswapV2Pair(pairFor(factory, tokenA, tokenB)).getReserves();\\r\\n        (reserveA, reserveB) = tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0);\\r\\n    }\\r\\n\\r\\n    // given some amount of an asset and pair reserves, returns an equivalent amount of the other asset\\r\\n    function quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB) {\\r\\n        require(amountA > 0, 'UniswapV2Library: INSUFFICIENT_AMOUNT');\\r\\n        require(reserveA > 0 && reserveB > 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY');\\r\\n        amountB = amountA.mul(reserveB) / reserveA;\\r\\n    }\\r\\n\\r\\n    // given an input amount of an asset and pair reserves, returns the maximum output amount of the other asset\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut) {\\r\\n        require(amountIn > 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT');\\r\\n        require(reserveIn > 0 && reserveOut > 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY');\\r\\n        uint amountInWithFee = amountIn.mul(997);\\r\\n        uint numerator = amountInWithFee.mul(reserveOut);\\r\\n        uint denominator = reserveIn.mul(1000).add(amountInWithFee);\\r\\n        amountOut = numerator / denominator;\\r\\n    }\\r\\n\\r\\n    // given an output amount of an asset and pair reserves, returns a required input amount of the other asset\\r\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) internal pure returns (uint amountIn) {\\r\\n        require(amountOut > 0, 'UniswapV2Library: INSUFFICIENT_OUTPUT_AMOUNT');\\r\\n        require(reserveIn > 0 && reserveOut > 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY');\\r\\n        uint numerator = reserveIn.mul(amountOut).mul(1000);\\r\\n        uint denominator = reserveOut.sub(amountOut).mul(997);\\r\\n        amountIn = (numerator / denominator).add(1);\\r\\n    }\\r\\n\\r\\n    // performs chained getAmountOut calculations on any number of pairs\\r\\n    function getAmountsOut(address factory, uint amountIn, address[] memory path) internal view returns (uint[] memory amounts) {\\r\\n        require(path.length >= 2, 'UniswapV2Library: INVALID_PATH');\\r\\n        amounts = new uint[](path.length);\\r\\n        amounts[0] = amountIn;\\r\\n        for (uint i; i < path.length - 1; i++) {\\r\\n            (uint reserveIn, uint reserveOut) = getReserves(factory, path[i], path[i + 1]);\\r\\n            amounts[i + 1] = getAmountOut(amounts[i], reserveIn, reserveOut);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // performs chained getAmountIn calculations on any number of pairs\\r\\n    function getAmountsIn(address factory, uint amountOut, address[] memory path) internal view returns (uint[] memory amounts) {\\r\\n        require(path.length >= 2, 'UniswapV2Library: INVALID_PATH');\\r\\n        amounts = new uint[](path.length);\\r\\n        amounts[amounts.length - 1] = amountOut;\\r\\n        for (uint i = path.length - 1; i > 0; i--) {\\r\\n            (uint reserveIn, uint reserveOut) = getReserves(factory, path[i - 1], path[i]);\\r\\n            amounts[i - 1] = getAmountIn(amounts[i], reserveIn, reserveOut);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\r\n        \"UniswapV2LiquidityMathLibrary.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';\\r\\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol';\\r\\nimport '@uniswap/lib/contracts/libraries/Babylonian.sol';\\r\\nimport '@uniswap/lib/contracts/libraries/FullMath.sol';\\r\\n\\r\\nimport './SafeMath.sol';\\r\\nimport './UniswapV2Library.sol';\\r\\n\\r\\n// library containing some math for dealing with the liquidity shares of a pair, e.g. computing their exact value\\r\\n// in terms of the underlying tokens\\r\\nlibrary UniswapV2LiquidityMathLibrary {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    // computes the direction and magnitude of the profit-maximizing trade\\r\\n    function computeProfitMaximizingTrade(\\r\\n        uint256 truePriceTokenA,\\r\\n        uint256 truePriceTokenB,\\r\\n        uint256 reserveA,\\r\\n        uint256 reserveB\\r\\n    ) pure internal returns (bool aToB, uint256 amountIn) {\\r\\n        aToB = FullMath.mulDiv(reserveA, truePriceTokenB, reserveB) < truePriceTokenA;\\r\\n\\r\\n        uint256 invariant = reserveA.mul(reserveB);\\r\\n\\r\\n        uint256 leftSide = Babylonian.sqrt(\\r\\n            FullMath.mulDiv(\\r\\n                invariant.mul(1000),\\r\\n                aToB ? truePriceTokenA : truePriceTokenB,\\r\\n                (aToB ? truePriceTokenB : truePriceTokenA).mul(997)\\r\\n            )\\r\\n        );\\r\\n        uint256 rightSide = (aToB ? reserveA.mul(1000) : reserveB.mul(1000)) / 997;\\r\\n\\r\\n        if (leftSide < rightSide) return (false, 0);\\r\\n\\r\\n        // compute the amount that must be sent to move the price to the profit-maximizing price\\r\\n        amountIn = leftSide.sub(rightSide);\\r\\n    }\\r\\n\\r\\n    // gets the reserves after an arbitrage moves the price to the profit-maximizing ratio given an externally observed true price\\r\\n    function getReservesAfterArbitrage(\\r\\n        address factory,\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 truePriceTokenA,\\r\\n        uint256 truePriceTokenB\\r\\n    ) view internal returns (uint256 reserveA, uint256 reserveB) {\\r\\n        // first get reserves before the swap\\r\\n        (reserveA, reserveB) = UniswapV2Library.getReserves(factory, tokenA, tokenB);\\r\\n\\r\\n        require(reserveA > 0 && reserveB > 0, 'UniswapV2ArbitrageLibrary: ZERO_PAIR_RESERVES');\\r\\n\\r\\n        // then compute how much to swap to arb to the true price\\r\\n        (bool aToB, uint256 amountIn) = computeProfitMaximizingTrade(truePriceTokenA, truePriceTokenB, reserveA, reserveB);\\r\\n\\r\\n        if (amountIn == 0) {\\r\\n            return (reserveA, reserveB);\\r\\n        }\\r\\n\\r\\n        // now affect the trade to the reserves\\r\\n        if (aToB) {\\r\\n            uint amountOut = UniswapV2Library.getAmountOut(amountIn, reserveA, reserveB);\\r\\n            reserveA += amountIn;\\r\\n            reserveB -= amountOut;\\r\\n        } else {\\r\\n            uint amountOut = UniswapV2Library.getAmountOut(amountIn, reserveB, reserveA);\\r\\n            reserveB += amountIn;\\r\\n            reserveA -= amountOut;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // computes liquidity value given all the parameters of the pair\\r\\n    function computeLiquidityValue(\\r\\n        uint256 reservesA,\\r\\n        uint256 reservesB,\\r\\n        uint256 totalSupply,\\r\\n        uint256 liquidityAmount,\\r\\n        bool feeOn,\\r\\n        uint kLast\\r\\n    ) internal pure returns (uint256 tokenAAmount, uint256 tokenBAmount) {\\r\\n        if (feeOn && kLast > 0) {\\r\\n            uint rootK = Babylonian.sqrt(reservesA.mul(reservesB));\\r\\n            uint rootKLast = Babylonian.sqrt(kLast);\\r\\n            if (rootK > rootKLast) {\\r\\n                uint numerator1 = totalSupply;\\r\\n                uint numerator2 = rootK.sub(rootKLast);\\r\\n                uint denominator = rootK.mul(5).add(rootKLast);\\r\\n                uint feeLiquidity = FullMath.mulDiv(numerator1, numerator2, denominator);\\r\\n                totalSupply = totalSupply.add(feeLiquidity);\\r\\n            }\\r\\n        }\\r\\n        return (reservesA.mul(liquidityAmount) / totalSupply, reservesB.mul(liquidityAmount) / totalSupply);\\r\\n    }\\r\\n\\r\\n    // get all current parameters from the pair and compute value of a liquidity amount\\r\\n    // **note this is subject to manipulation, e.g. sandwich attacks**. prefer passing a manipulation resistant price to\\r\\n    // #getLiquidityValueAfterArbitrageToPrice\\r\\n    function getLiquidityValue(\\r\\n        address factory,\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 liquidityAmount\\r\\n    ) internal view returns (uint256 tokenAAmount, uint256 tokenBAmount) {\\r\\n        (uint256 reservesA, uint256 reservesB) = UniswapV2Library.getReserves(factory, tokenA, tokenB);\\r\\n        IUniswapV2Pair pair = IUniswapV2Pair(UniswapV2Library.pairFor(factory, tokenA, tokenB));\\r\\n        bool feeOn = IUniswapV2Factory(factory).feeTo() != address(0);\\r\\n        uint kLast = feeOn ? pair.kLast() : 0;\\r\\n        uint totalSupply = pair.totalSupply();\\r\\n        return computeLiquidityValue(reservesA, reservesB, totalSupply, liquidityAmount, feeOn, kLast);\\r\\n    }\\r\\n\\r\\n    // given two tokens, tokenA and tokenB, and their \\\"true price\\\", i.e. the observed ratio of value of token A to token B,\\r\\n    // and a liquidity amount, returns the value of the liquidity in terms of tokenA and tokenB\\r\\n    function getLiquidityValueAfterArbitrageToPrice(\\r\\n        address factory,\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 truePriceTokenA,\\r\\n        uint256 truePriceTokenB,\\r\\n        uint256 liquidityAmount\\r\\n    ) internal view returns (\\r\\n        uint256 tokenAAmount,\\r\\n        uint256 tokenBAmount\\r\\n    ) {\\r\\n        bool feeOn = IUniswapV2Factory(factory).feeTo() != address(0);\\r\\n        IUniswapV2Pair pair = IUniswapV2Pair(UniswapV2Library.pairFor(factory, tokenA, tokenB));\\r\\n        uint kLast = feeOn ? pair.kLast() : 0;\\r\\n        uint totalSupply = pair.totalSupply();\\r\\n\\r\\n        // this also checks that totalSupply > 0\\r\\n        require(totalSupply >= liquidityAmount && liquidityAmount > 0, 'ComputeLiquidityValue: LIQUIDITY_AMOUNT');\\r\\n\\r\\n        (uint reservesA, uint reservesB) = getReservesAfterArbitrage(factory, tokenA, tokenB, truePriceTokenA, truePriceTokenB);\\r\\n\\r\\n        return computeLiquidityValue(reservesA, reservesB, totalSupply, liquidityAmount, feeOn, kLast);\\r\\n    }\\r\\n}\\r\\n\",\r\n        \"UniswapV2OracleLibrary.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';\\r\\nimport '@uniswap/lib/contracts/libraries/FixedPoint.sol';\\r\\n\\r\\n// library with helper methods for oracles that are concerned with computing average prices\\r\\nlibrary UniswapV2OracleLibrary {\\r\\n    using FixedPoint for *;\\r\\n\\r\\n    // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1]\\r\\n    function currentBlockTimestamp() internal view returns (uint32) {\\r\\n        return uint32(block.timestamp % 2 ** 32);\\r\\n    }\\r\\n\\r\\n    // produces the cumulative price using counterfactuals to save gas and avoid a call to sync.\\r\\n    function currentCumulativePrices(\\r\\n        address pair\\r\\n    ) internal view returns (uint price0Cumulative, uint price1Cumulative, uint32 blockTimestamp) {\\r\\n        blockTimestamp = currentBlockTimestamp();\\r\\n        price0Cumulative = IUniswapV2Pair(pair).price0CumulativeLast();\\r\\n        price1Cumulative = IUniswapV2Pair(pair).price1CumulativeLast();\\r\\n\\r\\n        // if time has elapsed since the last update on the pair, mock the accumulated price values\\r\\n        (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast) = IUniswapV2Pair(pair).getReserves();\\r\\n        if (blockTimestampLast != blockTimestamp) {\\r\\n            // subtraction overflow is desired\\r\\n            uint32 timeElapsed = blockTimestamp - blockTimestampLast;\\r\\n            // addition overflow is desired\\r\\n            // counterfactual\\r\\n            price0Cumulative += uint(FixedPoint.fraction(reserve1, reserve0)._x) * timeElapsed;\\r\\n            // counterfactual\\r\\n            price1Cumulative += uint(FixedPoint.fraction(reserve0, reserve1)._x) * timeElapsed;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\"\r\n      },\r\n      \"test\": {\r\n        \"DeflatingERC20.sol\": \"pragma solidity =0.6.6;\\r\\n\\r\\nimport '../libraries/SafeMath.sol';\\r\\n\\r\\ncontract DeflatingERC20 {\\r\\n    using SafeMath for uint;\\r\\n\\r\\n    string public constant name = 'Deflating Test Token';\\r\\n    string public constant symbol = 'DTT';\\r\\n    uint8 public constant decimals = 18;\\r\\n    uint  public totalSupply;\\r\\n    mapping(address => uint) public balanceOf;\\r\\n    mapping(address => mapping(address => uint)) public allowance;\\r\\n\\r\\n    bytes32 public DOMAIN_SEPARATOR;\\r\\n    // keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\r\\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\\r\\n    mapping(address => uint) public nonces;\\r\\n\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    constructor(uint _totalSupply) public {\\r\\n        uint chainId;\\r\\n        assembly {\\r\\n            chainId := chainid()\\r\\n        }\\r\\n        DOMAIN_SEPARATOR = keccak256(\\r\\n            abi.encode(\\r\\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\\r\\n                keccak256(bytes(name)),\\r\\n                keccak256(bytes('1')),\\r\\n                chainId,\\r\\n                address(this)\\r\\n            )\\r\\n        );\\r\\n        _mint(msg.sender, _totalSupply);\\r\\n    }\\r\\n\\r\\n    function _mint(address to, uint value) internal {\\r\\n        totalSupply = totalSupply.add(value);\\r\\n        balanceOf[to] = balanceOf[to].add(value);\\r\\n        emit Transfer(address(0), to, value);\\r\\n    }\\r\\n\\r\\n    function _burn(address from, uint value) internal {\\r\\n        balanceOf[from] = balanceOf[from].sub(value);\\r\\n        totalSupply = totalSupply.sub(value);\\r\\n        emit Transfer(from, address(0), value);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint value) private {\\r\\n        allowance[owner][spender] = value;\\r\\n        emit Approval(owner, spender, value);\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint value) private {\\r\\n        uint burnAmount = value / 100;\\r\\n        _burn(from, burnAmount);\\r\\n        uint transferAmount = value.sub(burnAmount);\\r\\n        balanceOf[from] = balanceOf[from].sub(transferAmount);\\r\\n        balanceOf[to] = balanceOf[to].add(transferAmount);\\r\\n        emit Transfer(from, to, transferAmount);\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool) {\\r\\n        _approve(msg.sender, spender, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transfer(address to, uint value) external returns (bool) {\\r\\n        _transfer(msg.sender, to, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool) {\\r\\n        if (allowance[from][msg.sender] != uint(-1)) {\\r\\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\\r\\n        }\\r\\n        _transfer(from, to, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\\r\\n        require(deadline >= block.timestamp, 'EXPIRED');\\r\\n        bytes32 digest = keccak256(\\r\\n            abi.encodePacked(\\r\\n                '\\\\x19\\\\x01',\\r\\n                DOMAIN_SEPARATOR,\\r\\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\r\\n            )\\r\\n        );\\r\\n        address recoveredAddress = ecrecover(digest, v, r, s);\\r\\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'INVALID_SIGNATURE');\\r\\n        _approve(owner, spender, value);\\r\\n    }\\r\\n}\\r\\n\",\r\n        \"ERC20.sol\": \"pragma solidity =0.6.6;\\r\\n\\r\\nimport '../libraries/SafeMath.sol';\\r\\n\\r\\ncontract ERC20 {\\r\\n    using SafeMath for uint;\\r\\n\\r\\n    string public constant name = 'Test Token';\\r\\n    string public constant symbol = 'TT';\\r\\n    uint8 public constant decimals = 18;\\r\\n    uint  public totalSupply;\\r\\n    mapping(address => uint) public balanceOf;\\r\\n    mapping(address => mapping(address => uint)) public allowance;\\r\\n\\r\\n    bytes32 public DOMAIN_SEPARATOR;\\r\\n    // keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\r\\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\\r\\n    mapping(address => uint) public nonces;\\r\\n\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    constructor(uint _totalSupply) public {\\r\\n        uint chainId;\\r\\n        assembly {\\r\\n            chainId := chainid()\\r\\n        }\\r\\n        DOMAIN_SEPARATOR = keccak256(\\r\\n            abi.encode(\\r\\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\\r\\n                keccak256(bytes(name)),\\r\\n                keccak256(bytes('1')),\\r\\n                chainId,\\r\\n                address(this)\\r\\n            )\\r\\n        );\\r\\n        _mint(msg.sender, _totalSupply);\\r\\n    }\\r\\n\\r\\n    function _mint(address to, uint value) internal {\\r\\n        totalSupply = totalSupply.add(value);\\r\\n        balanceOf[to] = balanceOf[to].add(value);\\r\\n        emit Transfer(address(0), to, value);\\r\\n    }\\r\\n\\r\\n    function _burn(address from, uint value) internal {\\r\\n        balanceOf[from] = balanceOf[from].sub(value);\\r\\n        totalSupply = totalSupply.sub(value);\\r\\n        emit Transfer(from, address(0), value);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint value) private {\\r\\n        allowance[owner][spender] = value;\\r\\n        emit Approval(owner, spender, value);\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint value) private {\\r\\n        balanceOf[from] = balanceOf[from].sub(value);\\r\\n        balanceOf[to] = balanceOf[to].add(value);\\r\\n        emit Transfer(from, to, value);\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool) {\\r\\n        _approve(msg.sender, spender, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transfer(address to, uint value) external returns (bool) {\\r\\n        _transfer(msg.sender, to, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool) {\\r\\n        if (allowance[from][msg.sender] != uint(-1)) {\\r\\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\\r\\n        }\\r\\n        _transfer(from, to, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\\r\\n        require(deadline >= block.timestamp, 'EXPIRED');\\r\\n        bytes32 digest = keccak256(\\r\\n            abi.encodePacked(\\r\\n                '\\\\x19\\\\x01',\\r\\n                DOMAIN_SEPARATOR,\\r\\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\r\\n            )\\r\\n        );\\r\\n        address recoveredAddress = ecrecover(digest, v, r, s);\\r\\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'INVALID_SIGNATURE');\\r\\n        _approve(owner, spender, value);\\r\\n    }\\r\\n}\\r\\n\",\r\n        \"RouterEventEmitter.sol\": \"pragma solidity =0.6.6;\\r\\n\\r\\nimport '../interfaces/IUniswapV2Router01.sol';\\r\\n\\r\\ncontract RouterEventEmitter {\\r\\n    event Amounts(uint[] amounts);\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    function swapExactTokensForTokens(\\r\\n        address router,\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external {\\r\\n        (bool success, bytes memory returnData) = router.delegatecall(abi.encodeWithSelector(\\r\\n            IUniswapV2Router01(router).swapExactTokensForTokens.selector, amountIn, amountOutMin, path, to, deadline\\r\\n        ));\\r\\n        assert(success);\\r\\n        emit Amounts(abi.decode(returnData, (uint[])));\\r\\n    }\\r\\n\\r\\n    function swapTokensForExactTokens(\\r\\n        address router,\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external {\\r\\n        (bool success, bytes memory returnData) = router.delegatecall(abi.encodeWithSelector(\\r\\n            IUniswapV2Router01(router).swapTokensForExactTokens.selector, amountOut, amountInMax, path, to, deadline\\r\\n        ));\\r\\n        assert(success);\\r\\n        emit Amounts(abi.decode(returnData, (uint[])));\\r\\n    }\\r\\n\\r\\n    function swapExactETHForTokens(\\r\\n        address router,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable {\\r\\n        (bool success, bytes memory returnData) = router.delegatecall(abi.encodeWithSelector(\\r\\n            IUniswapV2Router01(router).swapExactETHForTokens.selector, amountOutMin, path, to, deadline\\r\\n        ));\\r\\n        assert(success);\\r\\n        emit Amounts(abi.decode(returnData, (uint[])));\\r\\n    }\\r\\n\\r\\n    function swapTokensForExactETH(\\r\\n        address router,\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external {\\r\\n        (bool success, bytes memory returnData) = router.delegatecall(abi.encodeWithSelector(\\r\\n            IUniswapV2Router01(router).swapTokensForExactETH.selector, amountOut, amountInMax, path, to, deadline\\r\\n        ));\\r\\n        assert(success);\\r\\n        emit Amounts(abi.decode(returnData, (uint[])));\\r\\n    }\\r\\n\\r\\n    function swapExactTokensForETH(\\r\\n        address router,\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external {\\r\\n        (bool success, bytes memory returnData) = router.delegatecall(abi.encodeWithSelector(\\r\\n            IUniswapV2Router01(router).swapExactTokensForETH.selector, amountIn, amountOutMin, path, to, deadline\\r\\n        ));\\r\\n        assert(success);\\r\\n        emit Amounts(abi.decode(returnData, (uint[])));\\r\\n    }\\r\\n\\r\\n    function swapETHForExactTokens(\\r\\n        address router,\\r\\n        uint amountOut,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable {\\r\\n        (bool success, bytes memory returnData) = router.delegatecall(abi.encodeWithSelector(\\r\\n            IUniswapV2Router01(router).swapETHForExactTokens.selector, amountOut, path, to, deadline\\r\\n        ));\\r\\n        assert(success);\\r\\n        emit Amounts(abi.decode(returnData, (uint[])));\\r\\n    }\\r\\n}\\r\\n\",\r\n        \"WETH9.sol\": \"// Copyright (C) 2015, 2016, 2017 Dapphub\\r\\n\\r\\n// This program is free software: you can redistribute it and/or modify\\r\\n// it under the terms of the GNU General Public License as published by\\r\\n// the Free Software Foundation, either version 3 of the License, or\\r\\n// (at your option) any later version.\\r\\n\\r\\n// This program is distributed in the hope that it will be useful,\\r\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n// GNU General Public License for more details.\\r\\n\\r\\n// You should have received a copy of the GNU General Public License\\r\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\npragma solidity =0.6.6;\\r\\n\\r\\ncontract WETH9 {\\r\\n    string public name     = \\\"Wrapped Ether\\\";\\r\\n    string public symbol   = \\\"WETH\\\";\\r\\n    uint8  public decimals = 18;\\r\\n\\r\\n    event  Approval(address indexed src, address indexed guy, uint wad);\\r\\n    event  Transfer(address indexed src, address indexed dst, uint wad);\\r\\n    event  Deposit(address indexed dst, uint wad);\\r\\n    event  Withdrawal(address indexed src, uint wad);\\r\\n\\r\\n    mapping (address => uint)                       public  balanceOf;\\r\\n    mapping (address => mapping (address => uint))  public  allowance;\\r\\n\\r\\n    // function() public payable {\\r\\n    //     deposit();\\r\\n    // }\\r\\n    function deposit() public payable {\\r\\n        balanceOf[msg.sender] += msg.value;\\r\\n        emit Deposit(msg.sender, msg.value);\\r\\n    }\\r\\n    function withdraw(uint wad) public {\\r\\n        require(balanceOf[msg.sender] >= wad, \\\"\\\");\\r\\n        balanceOf[msg.sender] -= wad;\\r\\n        msg.sender.transfer(wad);\\r\\n        emit Withdrawal(msg.sender, wad);\\r\\n    }\\r\\n\\r\\n    function totalSupply() public view returns (uint) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    function approve(address guy, uint wad) public returns (bool) {\\r\\n        allowance[msg.sender][guy] = wad;\\r\\n        emit Approval(msg.sender, guy, wad);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transfer(address dst, uint wad) public returns (bool) {\\r\\n        return transferFrom(msg.sender, dst, wad);\\r\\n    }\\r\\n\\r\\n    function transferFrom(address src, address dst, uint wad)\\r\\n        public\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(balanceOf[src] >= wad, \\\"\\\");\\r\\n\\r\\n        if (src != msg.sender && allowance[src][msg.sender] != uint(-1)) {\\r\\n            require(allowance[src][msg.sender] >= wad, \\\"\\\");\\r\\n            allowance[src][msg.sender] -= wad;\\r\\n        }\\r\\n\\r\\n        balanceOf[src] -= wad;\\r\\n        balanceOf[dst] += wad;\\r\\n\\r\\n        emit Transfer(src, dst, wad);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n/*\\r\\n                    GNU GENERAL PUBLIC LICENSE\\r\\n                       Version 3, 29 June 2007\\r\\n\\r\\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\\r\\n Everyone is permitted to copy and distribute verbatim copies\\r\\n of this license document, but changing it is not allowed.\\r\\n\\r\\n                            Preamble\\r\\n\\r\\n  The GNU General Public License is a free, copyleft license for\\r\\nsoftware and other kinds of works.\\r\\n\\r\\n  The licenses for most software and other practical works are designed\\r\\nto take away your freedom to share and change the works.  By contrast,\\r\\nthe GNU General Public License is intended to guarantee your freedom to\\r\\nshare and change all versions of a program--to make sure it remains free\\r\\nsoftware for all its users.  We, the Free Software Foundation, use the\\r\\nGNU General Public License for most of our software; it applies also to\\r\\nany other work released this way by its authors.  You can apply it to\\r\\nyour programs, too.\\r\\n\\r\\n  When we speak of free software, we are referring to freedom, not\\r\\nprice.  Our General Public Licenses are designed to make sure that you\\r\\nhave the freedom to distribute copies of free software (and charge for\\r\\nthem if you wish), that you receive source code or can get it if you\\r\\nwant it, that you can change the software or use pieces of it in new\\r\\nfree programs, and that you know you can do these things.\\r\\n\\r\\n  To protect your rights, we need to prevent others from denying you\\r\\nthese rights or asking you to surrender the rights.  Therefore, you have\\r\\ncertain responsibilities if you distribute copies of the software, or if\\r\\nyou modify it: responsibilities to respect the freedom of others.\\r\\n\\r\\n  For example, if you distribute copies of such a program, whether\\r\\ngratis or for a fee, you must pass on to the recipients the same\\r\\nfreedoms that you received.  You must make sure that they, too, receive\\r\\nor can get the source code.  And you must show them these terms so they\\r\\nknow their rights.\\r\\n\\r\\n  Developers that use the GNU GPL protect your rights with two steps:\\r\\n(1) assert copyright on the software, and (2) offer you this License\\r\\ngiving you legal permission to copy, distribute and/or modify it.\\r\\n\\r\\n  For the developers' and authors' protection, the GPL clearly explains\\r\\nthat there is no warranty for this free software.  For both users' and\\r\\nauthors' sake, the GPL requires that modified versions be marked as\\r\\nchanged, so that their problems will not be attributed erroneously to\\r\\nauthors of previous versions.\\r\\n\\r\\n  Some devices are designed to deny users access to install or run\\r\\nmodified versions of the software inside them, although the manufacturer\\r\\ncan do so.  This is fundamentally incompatible with the aim of\\r\\nprotecting users' freedom to change the software.  The systematic\\r\\npattern of such abuse occurs in the area of products for individuals to\\r\\nuse, which is precisely where it is most unacceptable.  Therefore, we\\r\\nhave designed this version of the GPL to prohibit the practice for those\\r\\nproducts.  If such problems arise substantially in other domains, we\\r\\nstand ready to extend this provision to those domains in future versions\\r\\nof the GPL, as needed to protect the freedom of users.\\r\\n\\r\\n  Finally, every program is threatened constantly by software patents.\\r\\nStates should not allow patents to restrict development and use of\\r\\nsoftware on general-purpose computers, but in those that do, we wish to\\r\\navoid the special danger that patents applied to a free program could\\r\\nmake it effectively proprietary.  To prevent this, the GPL assures that\\r\\npatents cannot be used to render the program non-free.\\r\\n\\r\\n  The precise terms and conditions for copying, distribution and\\r\\nmodification follow.\\r\\n\\r\\n                       TERMS AND CONDITIONS\\r\\n\\r\\n  0. Definitions.\\r\\n\\r\\n  \\\"This License\\\" refers to version 3 of the GNU General Public License.\\r\\n\\r\\n  \\\"Copyright\\\" also means copyright-like laws that apply to other kinds of\\r\\nworks, such as semiconductor masks.\\r\\n\\r\\n  \\\"The Program\\\" refers to any copyrightable work licensed under this\\r\\nLicense.  Each licensee is addressed as \\\"you\\\".  \\\"Licensees\\\" and\\r\\n\\\"recipients\\\" may be individuals or organizations.\\r\\n\\r\\n  To \\\"modify\\\" a work means to copy from or adapt all or part of the work\\r\\nin a fashion requiring copyright permission, other than the making of an\\r\\nexact copy.  The resulting work is called a \\\"modified version\\\" of the\\r\\nearlier work or a work \\\"based on\\\" the earlier work.\\r\\n\\r\\n  A \\\"covered work\\\" means either the unmodified Program or a work based\\r\\non the Program.\\r\\n\\r\\n  To \\\"propagate\\\" a work means to do anything with it that, without\\r\\npermission, would make you directly or secondarily liable for\\r\\ninfringement under applicable copyright law, except executing it on a\\r\\ncomputer or modifying a private copy.  Propagation includes copying,\\r\\ndistribution (with or without modification), making available to the\\r\\npublic, and in some countries other activities as well.\\r\\n\\r\\n  To \\\"convey\\\" a work means any kind of propagation that enables other\\r\\nparties to make or receive copies.  Mere interaction with a user through\\r\\na computer network, with no transfer of a copy, is not conveying.\\r\\n\\r\\n  An interactive user interface displays \\\"Appropriate Legal Notices\\\"\\r\\nto the extent that it includes a convenient and prominently visible\\r\\nfeature that (1) displays an appropriate copyright notice, and (2)\\r\\ntells the user that there is no warranty for the work (except to the\\r\\nextent that warranties are provided), that licensees may convey the\\r\\nwork under this License, and how to view a copy of this License.  If\\r\\nthe interface presents a list of user commands or options, such as a\\r\\nmenu, a prominent item in the list meets this criterion.\\r\\n\\r\\n  1. Source Code.\\r\\n\\r\\n  The \\\"source code\\\" for a work means the preferred form of the work\\r\\nfor making modifications to it.  \\\"Object code\\\" means any non-source\\r\\nform of a work.\\r\\n\\r\\n  A \\\"Standard Interface\\\" means an interface that either is an official\\r\\nstandard defined by a recognized standards body, or, in the case of\\r\\ninterfaces specified for a particular programming language, one that\\r\\nis widely used among developers working in that language.\\r\\n\\r\\n  The \\\"System Libraries\\\" of an executable work include anything, other\\r\\nthan the work as a whole, that (a) is included in the normal form of\\r\\npackaging a Major Component, but which is not part of that Major\\r\\nComponent, and (b) serves only to enable use of the work with that\\r\\nMajor Component, or to implement a Standard Interface for which an\\r\\nimplementation is available to the public in source code form.  A\\r\\n\\\"Major Component\\\", in this context, means a major essential component\\r\\n(kernel, window system, and so on) of the specific operating system\\r\\n(if any) on which the executable work runs, or a compiler used to\\r\\nproduce the work, or an object code interpreter used to run it.\\r\\n\\r\\n  The \\\"Corresponding Source\\\" for a work in object code form means all\\r\\nthe source code needed to generate, install, and (for an executable\\r\\nwork) run the object code and to modify the work, including scripts to\\r\\ncontrol those activities.  However, it does not include the work's\\r\\nSystem Libraries, or general-purpose tools or generally available free\\r\\nprograms which are used unmodified in performing those activities but\\r\\nwhich are not part of the work.  For example, Corresponding Source\\r\\nincludes interface definition files associated with source files for\\r\\nthe work, and the source code for shared libraries and dynamically\\r\\nlinked subprograms that the work is specifically designed to require,\\r\\nsuch as by intimate data communication or control flow between those\\r\\nsubprograms and other parts of the work.\\r\\n\\r\\n  The Corresponding Source need not include anything that users\\r\\ncan regenerate automatically from other parts of the Corresponding\\r\\nSource.\\r\\n\\r\\n  The Corresponding Source for a work in source code form is that\\r\\nsame work.\\r\\n\\r\\n  2. Basic Permissions.\\r\\n\\r\\n  All rights granted under this License are granted for the term of\\r\\ncopyright on the Program, and are irrevocable provided the stated\\r\\nconditions are met.  This License explicitly affirms your unlimited\\r\\npermission to run the unmodified Program.  The output from running a\\r\\ncovered work is covered by this License only if the output, given its\\r\\ncontent, constitutes a covered work.  This License acknowledges your\\r\\nrights of fair use or other equivalent, as provided by copyright law.\\r\\n\\r\\n  You may make, run and propagate covered works that you do not\\r\\nconvey, without conditions so long as your license otherwise remains\\r\\nin force.  You may convey covered works to others for the sole purpose\\r\\nof having them make modifications exclusively for you, or provide you\\r\\nwith facilities for running those works, provided that you comply with\\r\\nthe terms of this License in conveying all material for which you do\\r\\nnot control copyright.  Those thus making or running the covered works\\r\\nfor you must do so exclusively on your behalf, under your direction\\r\\nand control, on terms that prohibit them from making any copies of\\r\\nyour copyrighted material outside their relationship with you.\\r\\n\\r\\n  Conveying under any other circumstances is permitted solely under\\r\\nthe conditions stated below.  Sublicensing is not allowed; section 10\\r\\nmakes it unnecessary.\\r\\n\\r\\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\\r\\n\\r\\n  No covered work shall be deemed part of an effective technological\\r\\nmeasure under any applicable law fulfilling obligations under article\\r\\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\\r\\nsimilar laws prohibiting or restricting circumvention of such\\r\\nmeasures.\\r\\n\\r\\n  When you convey a covered work, you waive any legal power to forbid\\r\\ncircumvention of technological measures to the extent such circumvention\\r\\nis effected by exercising rights under this License with respect to\\r\\nthe covered work, and you disclaim any intention to limit operation or\\r\\nmodification of the work as a means of enforcing, against the work's\\r\\nusers, your or third parties' legal rights to forbid circumvention of\\r\\ntechnological measures.\\r\\n\\r\\n  4. Conveying Verbatim Copies.\\r\\n\\r\\n  You may convey verbatim copies of the Program's source code as you\\r\\nreceive it, in any medium, provided that you conspicuously and\\r\\nappropriately publish on each copy an appropriate copyright notice;\\r\\nkeep intact all notices stating that this License and any\\r\\nnon-permissive terms added in accord with section 7 apply to the code;\\r\\nkeep intact all notices of the absence of any warranty; and give all\\r\\nrecipients a copy of this License along with the Program.\\r\\n\\r\\n  You may charge any price or no price for each copy that you convey,\\r\\nand you may offer support or warranty protection for a fee.\\r\\n\\r\\n  5. Conveying Modified Source Versions.\\r\\n\\r\\n  You may convey a work based on the Program, or the modifications to\\r\\nproduce it from the Program, in the form of source code under the\\r\\nterms of section 4, provided that you also meet all of these conditions:\\r\\n\\r\\n    a) The work must carry prominent notices stating that you modified\\r\\n    it, and giving a relevant date.\\r\\n\\r\\n    b) The work must carry prominent notices stating that it is\\r\\n    released under this License and any conditions added under section\\r\\n    7.  This requirement modifies the requirement in section 4 to\\r\\n    \\\"keep intact all notices\\\".\\r\\n\\r\\n    c) You must license the entire work, as a whole, under this\\r\\n    License to anyone who comes into possession of a copy.  This\\r\\n    License will therefore apply, along with any applicable section 7\\r\\n    additional terms, to the whole of the work, and all its parts,\\r\\n    regardless of how they are packaged.  This License gives no\\r\\n    permission to license the work in any other way, but it does not\\r\\n    invalidate such permission if you have separately received it.\\r\\n\\r\\n    d) If the work has interactive user interfaces, each must display\\r\\n    Appropriate Legal Notices; however, if the Program has interactive\\r\\n    interfaces that do not display Appropriate Legal Notices, your\\r\\n    work need not make them do so.\\r\\n\\r\\n  A compilation of a covered work with other separate and independent\\r\\nworks, which are not by their nature extensions of the covered work,\\r\\nand which are not combined with it such as to form a larger program,\\r\\nin or on a volume of a storage or distribution medium, is called an\\r\\n\\\"aggregate\\\" if the compilation and its resulting copyright are not\\r\\nused to limit the access or legal rights of the compilation's users\\r\\nbeyond what the individual works permit.  Inclusion of a covered work\\r\\nin an aggregate does not cause this License to apply to the other\\r\\nparts of the aggregate.\\r\\n\\r\\n  6. Conveying Non-Source Forms.\\r\\n\\r\\n  You may convey a covered work in object code form under the terms\\r\\nof sections 4 and 5, provided that you also convey the\\r\\nmachine-readable Corresponding Source under the terms of this License,\\r\\nin one of these ways:\\r\\n\\r\\n    a) Convey the object code in, or embodied in, a physical product\\r\\n    (including a physical distribution medium), accompanied by the\\r\\n    Corresponding Source fixed on a durable physical medium\\r\\n    customarily used for software interchange.\\r\\n\\r\\n    b) Convey the object code in, or embodied in, a physical product\\r\\n    (including a physical distribution medium), accompanied by a\\r\\n    written offer, valid for at least three years and valid for as\\r\\n    long as you offer spare parts or customer support for that product\\r\\n    model, to give anyone who possesses the object code either (1) a\\r\\n    copy of the Corresponding Source for all the software in the\\r\\n    product that is covered by this License, on a durable physical\\r\\n    medium customarily used for software interchange, for a price no\\r\\n    more than your reasonable cost of physically performing this\\r\\n    conveying of source, or (2) access to copy the\\r\\n    Corresponding Source from a network server at no charge.\\r\\n\\r\\n    c) Convey individual copies of the object code with a copy of the\\r\\n    written offer to provide the Corresponding Source.  This\\r\\n    alternative is allowed only occasionally and noncommercially, and\\r\\n    only if you received the object code with such an offer, in accord\\r\\n    with subsection 6b.\\r\\n\\r\\n    d) Convey the object code by offering access from a designated\\r\\n    place (gratis or for a charge), and offer equivalent access to the\\r\\n    Corresponding Source in the same way through the same place at no\\r\\n    further charge.  You need not require recipients to copy the\\r\\n    Corresponding Source along with the object code.  If the place to\\r\\n    copy the object code is a network server, the Corresponding Source\\r\\n    may be on a different server (operated by you or a third party)\\r\\n    that supports equivalent copying facilities, provided you maintain\\r\\n    clear directions next to the object code saying where to find the\\r\\n    Corresponding Source.  Regardless of what server hosts the\\r\\n    Corresponding Source, you remain obligated to ensure that it is\\r\\n    available for as long as needed to satisfy these requirements.\\r\\n\\r\\n    e) Convey the object code using peer-to-peer transmission, provided\\r\\n    you inform other peers where the object code and Corresponding\\r\\n    Source of the work are being offered to the general public at no\\r\\n    charge under subsection 6d.\\r\\n\\r\\n  A separable portion of the object code, whose source code is excluded\\r\\nfrom the Corresponding Source as a System Library, need not be\\r\\nincluded in conveying the object code work.\\r\\n\\r\\n  A \\\"User Product\\\" is either (1) a \\\"consumer product\\\", which means any\\r\\ntangible personal property which is normally used for personal, family,\\r\\nor household purposes, or (2) anything designed or sold for incorporation\\r\\ninto a dwelling.  In determining whether a product is a consumer product,\\r\\ndoubtful cases shall be resolved in favor of coverage.  For a particular\\r\\nproduct received by a particular user, \\\"normally used\\\" refers to a\\r\\ntypical or common use of that class of product, regardless of the status\\r\\nof the particular user or of the way in which the particular user\\r\\nactually uses, or expects or is expected to use, the product.  A product\\r\\nis a consumer product regardless of whether the product has substantial\\r\\ncommercial, industrial or non-consumer uses, unless such uses represent\\r\\nthe only significant mode of use of the product.\\r\\n\\r\\n  \\\"Installation Information\\\" for a User Product means any methods,\\r\\nprocedures, authorization keys, or other information required to install\\r\\nand execute modified versions of a covered work in that User Product from\\r\\na modified version of its Corresponding Source.  The information must\\r\\nsuffice to ensure that the continued functioning of the modified object\\r\\ncode is in no case prevented or interfered with solely because\\r\\nmodification has been made.\\r\\n\\r\\n  If you convey an object code work under this section in, or with, or\\r\\nspecifically for use in, a User Product, and the conveying occurs as\\r\\npart of a transaction in which the right of possession and use of the\\r\\nUser Product is transferred to the recipient in perpetuity or for a\\r\\nfixed term (regardless of how the transaction is characterized), the\\r\\nCorresponding Source conveyed under this section must be accompanied\\r\\nby the Installation Information.  But this requirement does not apply\\r\\nif neither you nor any third party retains the ability to install\\r\\nmodified object code on the User Product (for example, the work has\\r\\nbeen installed in ROM).\\r\\n\\r\\n  The requirement to provide Installation Information does not include a\\r\\nrequirement to continue to provide support service, warranty, or updates\\r\\nfor a work that has been modified or installed by the recipient, or for\\r\\nthe User Product in which it has been modified or installed.  Access to a\\r\\nnetwork may be denied when the modification itself materially and\\r\\nadversely affects the operation of the network or violates the rules and\\r\\nprotocols for communication across the network.\\r\\n\\r\\n  Corresponding Source conveyed, and Installation Information provided,\\r\\nin accord with this section must be in a format that is publicly\\r\\ndocumented (and with an implementation available to the public in\\r\\nsource code form), and must require no special password or key for\\r\\nunpacking, reading or copying.\\r\\n\\r\\n  7. Additional Terms.\\r\\n\\r\\n  \\\"Additional permissions\\\" are terms that supplement the terms of this\\r\\nLicense by making exceptions from one or more of its conditions.\\r\\nAdditional permissions that are applicable to the entire Program shall\\r\\nbe treated as though they were included in this License, to the extent\\r\\nthat they are valid under applicable law.  If additional permissions\\r\\napply only to part of the Program, that part may be used separately\\r\\nunder those permissions, but the entire Program remains governed by\\r\\nthis License without regard to the additional permissions.\\r\\n\\r\\n  When you convey a copy of a covered work, you may at your option\\r\\nremove any additional permissions from that copy, or from any part of\\r\\nit.  (Additional permissions may be written to require their own\\r\\nremoval in certain cases when you modify the work.)  You may place\\r\\nadditional permissions on material, added by you to a covered work,\\r\\nfor which you have or can give appropriate copyright permission.\\r\\n\\r\\n  Notwithstanding any other provision of this License, for material you\\r\\nadd to a covered work, you may (if authorized by the copyright holders of\\r\\nthat material) supplement the terms of this License with terms:\\r\\n\\r\\n    a) Disclaiming warranty or limiting liability differently from the\\r\\n    terms of sections 15 and 16 of this License; or\\r\\n\\r\\n    b) Requiring preservation of specified reasonable legal notices or\\r\\n    author attributions in that material or in the Appropriate Legal\\r\\n    Notices displayed by works containing it; or\\r\\n\\r\\n    c) Prohibiting misrepresentation of the origin of that material, or\\r\\n    requiring that modified versions of such material be marked in\\r\\n    reasonable ways as different from the original version; or\\r\\n\\r\\n    d) Limiting the use for publicity purposes of names of licensors or\\r\\n    authors of the material; or\\r\\n\\r\\n    e) Declining to grant rights under trademark law for use of some\\r\\n    trade names, trademarks, or service marks; or\\r\\n\\r\\n    f) Requiring indemnification of licensors and authors of that\\r\\n    material by anyone who conveys the material (or modified versions of\\r\\n    it) with contractual assumptions of liability to the recipient, for\\r\\n    any liability that these contractual assumptions directly impose on\\r\\n    those licensors and authors.\\r\\n\\r\\n  All other non-permissive additional terms are considered \\\"further\\r\\nrestrictions\\\" within the meaning of section 10.  If the Program as you\\r\\nreceived it, or any part of it, contains a notice stating that it is\\r\\ngoverned by this License along with a term that is a further\\r\\nrestriction, you may remove that term.  If a license document contains\\r\\na further restriction but permits relicensing or conveying under this\\r\\nLicense, you may add to a covered work material governed by the terms\\r\\nof that license document, provided that the further restriction does\\r\\nnot survive such relicensing or conveying.\\r\\n\\r\\n  If you add terms to a covered work in accord with this section, you\\r\\nmust place, in the relevant source files, a statement of the\\r\\nadditional terms that apply to those files, or a notice indicating\\r\\nwhere to find the applicable terms.\\r\\n\\r\\n  Additional terms, permissive or non-permissive, may be stated in the\\r\\nform of a separately written license, or stated as exceptions;\\r\\nthe above requirements apply either way.\\r\\n\\r\\n  8. Termination.\\r\\n\\r\\n  You may not propagate or modify a covered work except as expressly\\r\\nprovided under this License.  Any attempt otherwise to propagate or\\r\\nmodify it is void, and will automatically terminate your rights under\\r\\nthis License (including any patent licenses granted under the third\\r\\nparagraph of section 11).\\r\\n\\r\\n  However, if you cease all violation of this License, then your\\r\\nlicense from a particular copyright holder is reinstated (a)\\r\\nprovisionally, unless and until the copyright holder explicitly and\\r\\nfinally terminates your license, and (b) permanently, if the copyright\\r\\nholder fails to notify you of the violation by some reasonable means\\r\\nprior to 60 days after the cessation.\\r\\n\\r\\n  Moreover, your license from a particular copyright holder is\\r\\nreinstated permanently if the copyright holder notifies you of the\\r\\nviolation by some reasonable means, this is the first time you have\\r\\nreceived notice of violation of this License (for any work) from that\\r\\ncopyright holder, and you cure the violation prior to 30 days after\\r\\nyour receipt of the notice.\\r\\n\\r\\n  Termination of your rights under this section does not terminate the\\r\\nlicenses of parties who have received copies or rights from you under\\r\\nthis License.  If your rights have been terminated and not permanently\\r\\nreinstated, you do not qualify to receive new licenses for the same\\r\\nmaterial under section 10.\\r\\n\\r\\n  9. Acceptance Not Required for Having Copies.\\r\\n\\r\\n  You are not required to accept this License in order to receive or\\r\\nrun a copy of the Program.  Ancillary propagation of a covered work\\r\\noccurring solely as a consequence of using peer-to-peer transmission\\r\\nto receive a copy likewise does not require acceptance.  However,\\r\\nnothing other than this License grants you permission to propagate or\\r\\nmodify any covered work.  These actions infringe copyright if you do\\r\\nnot accept this License.  Therefore, by modifying or propagating a\\r\\ncovered work, you indicate your acceptance of this License to do so.\\r\\n\\r\\n  10. Automatic Licensing of Downstream Recipients.\\r\\n\\r\\n  Each time you convey a covered work, the recipient automatically\\r\\nreceives a license from the original licensors, to run, modify and\\r\\npropagate that work, subject to this License.  You are not responsible\\r\\nfor enforcing compliance by third parties with this License.\\r\\n\\r\\n  An \\\"entity transaction\\\" is a transaction transferring control of an\\r\\norganization, or substantially all assets of one, or subdividing an\\r\\norganization, or merging organizations.  If propagation of a covered\\r\\nwork results from an entity transaction, each party to that\\r\\ntransaction who receives a copy of the work also receives whatever\\r\\nlicenses to the work the party's predecessor in interest had or could\\r\\ngive under the previous paragraph, plus a right to possession of the\\r\\nCorresponding Source of the work from the predecessor in interest, if\\r\\nthe predecessor has it or can get it with reasonable efforts.\\r\\n\\r\\n  You may not impose any further restrictions on the exercise of the\\r\\nrights granted or affirmed under this License.  For example, you may\\r\\nnot impose a license fee, royalty, or other charge for exercise of\\r\\nrights granted under this License, and you may not initiate litigation\\r\\n(including a cross-claim or counterclaim in a lawsuit) alleging that\\r\\nany patent claim is infringed by making, using, selling, offering for\\r\\nsale, or importing the Program or any portion of it.\\r\\n\\r\\n  11. Patents.\\r\\n\\r\\n  A \\\"contributor\\\" is a copyright holder who authorizes use under this\\r\\nLicense of the Program or a work on which the Program is based.  The\\r\\nwork thus licensed is called the contributor's \\\"contributor version\\\".\\r\\n\\r\\n  A contributor's \\\"essential patent claims\\\" are all patent claims\\r\\nowned or controlled by the contributor, whether already acquired or\\r\\nhereafter acquired, that would be infringed by some manner, permitted\\r\\nby this License, of making, using, or selling its contributor version,\\r\\nbut do not include claims that would be infringed only as a\\r\\nconsequence of further modification of the contributor version.  For\\r\\npurposes of this definition, \\\"control\\\" includes the right to grant\\r\\npatent sublicenses in a manner consistent with the requirements of\\r\\nthis License.\\r\\n\\r\\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\\r\\npatent license under the contributor's essential patent claims, to\\r\\nmake, use, sell, offer for sale, import and otherwise run, modify and\\r\\npropagate the contents of its contributor version.\\r\\n\\r\\n  In the following three paragraphs, a \\\"patent license\\\" is any express\\r\\nagreement or commitment, however denominated, not to enforce a patent\\r\\n(such as an express permission to practice a patent or covenant not to\\r\\nsue for patent infringement).  To \\\"grant\\\" such a patent license to a\\r\\nparty means to make such an agreement or commitment not to enforce a\\r\\npatent against the party.\\r\\n\\r\\n  If you convey a covered work, knowingly relying on a patent license,\\r\\nand the Corresponding Source of the work is not available for anyone\\r\\nto copy, free of charge and under the terms of this License, through a\\r\\npublicly available network server or other readily accessible means,\\r\\nthen you must either (1) cause the Corresponding Source to be so\\r\\navailable, or (2) arrange to deprive yourself of the benefit of the\\r\\npatent license for this particular work, or (3) arrange, in a manner\\r\\nconsistent with the requirements of this License, to extend the patent\\r\\nlicense to downstream recipients.  \\\"Knowingly relying\\\" means you have\\r\\nactual knowledge that, but for the patent license, your conveying the\\r\\ncovered work in a country, or your recipient's use of the covered work\\r\\nin a country, would infringe one or more identifiable patents in that\\r\\ncountry that you have reason to believe are valid.\\r\\n\\r\\n  If, pursuant to or in connection with a single transaction or\\r\\narrangement, you convey, or propagate by procuring conveyance of, a\\r\\ncovered work, and grant a patent license to some of the parties\\r\\nreceiving the covered work authorizing them to use, propagate, modify\\r\\nor convey a specific copy of the covered work, then the patent license\\r\\nyou grant is automatically extended to all recipients of the covered\\r\\nwork and works based on it.\\r\\n\\r\\n  A patent license is \\\"discriminatory\\\" if it does not include within\\r\\nthe scope of its coverage, prohibits the exercise of, or is\\r\\nconditioned on the non-exercise of one or more of the rights that are\\r\\nspecifically granted under this License.  You may not convey a covered\\r\\nwork if you are a party to an arrangement with a third party that is\\r\\nin the business of distributing software, under which you make payment\\r\\nto the third party based on the extent of your activity of conveying\\r\\nthe work, and under which the third party grants, to any of the\\r\\nparties who would receive the covered work from you, a discriminatory\\r\\npatent license (a) in connection with copies of the covered work\\r\\nconveyed by you (or copies made from those copies), or (b) primarily\\r\\nfor and in connection with specific products or compilations that\\r\\ncontain the covered work, unless you entered into that arrangement,\\r\\nor that patent license was granted, prior to 28 March 2007.\\r\\n\\r\\n  Nothing in this License shall be construed as excluding or limiting\\r\\nany implied license or other defenses to infringement that may\\r\\notherwise be available to you under applicable patent law.\\r\\n\\r\\n  12. No Surrender of Others' Freedom.\\r\\n\\r\\n  If conditions are imposed on you (whether by court order, agreement or\\r\\notherwise) that contradict the conditions of this License, they do not\\r\\nexcuse you from the conditions of this License.  If you cannot convey a\\r\\ncovered work so as to satisfy simultaneously your obligations under this\\r\\nLicense and any other pertinent obligations, then as a consequence you may\\r\\nnot convey it at all.  For example, if you agree to terms that obligate you\\r\\nto collect a royalty for further conveying from those to whom you convey\\r\\nthe Program, the only way you could satisfy both those terms and this\\r\\nLicense would be to refrain entirely from conveying the Program.\\r\\n\\r\\n  13. Use with the GNU Affero General Public License.\\r\\n\\r\\n  Notwithstanding any other provision of this License, you have\\r\\npermission to link or combine any covered work with a work licensed\\r\\nunder version 3 of the GNU Affero General Public License into a single\\r\\ncombined work, and to convey the resulting work.  The terms of this\\r\\nLicense will continue to apply to the part which is the covered work,\\r\\nbut the special requirements of the GNU Affero General Public License,\\r\\nsection 13, concerning interaction through a network will apply to the\\r\\ncombination as such.\\r\\n\\r\\n  14. Revised Versions of this License.\\r\\n\\r\\n  The Free Software Foundation may publish revised and/or new versions of\\r\\nthe GNU General Public License from time to time.  Such new versions will\\r\\nbe similar in spirit to the present version, but may differ in detail to\\r\\naddress new problems or concerns.\\r\\n\\r\\n  Each version is given a distinguishing version number.  If the\\r\\nProgram specifies that a certain numbered version of the GNU General\\r\\nPublic License \\\"or any later version\\\" applies to it, you have the\\r\\noption of following the terms and conditions either of that numbered\\r\\nversion or of any later version published by the Free Software\\r\\nFoundation.  If the Program does not specify a version number of the\\r\\nGNU General Public License, you may choose any version ever published\\r\\nby the Free Software Foundation.\\r\\n\\r\\n  If the Program specifies that a proxy can decide which future\\r\\nversions of the GNU General Public License can be used, that proxy's\\r\\npublic statement of acceptance of a version permanently authorizes you\\r\\nto choose that version for the Program.\\r\\n\\r\\n  Later license versions may give you additional or different\\r\\npermissions.  However, no additional obligations are imposed on any\\r\\nauthor or copyright holder as a result of your choosing to follow a\\r\\nlater version.\\r\\n\\r\\n  15. Disclaimer of Warranty.\\r\\n\\r\\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\\r\\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\\r\\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \\\"AS IS\\\" WITHOUT WARRANTY\\r\\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\\r\\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\r\\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\\r\\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\\r\\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\\r\\n\\r\\n  16. Limitation of Liability.\\r\\n\\r\\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\\r\\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\\r\\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\\r\\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\\r\\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\\r\\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\\r\\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\\r\\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\\r\\nSUCH DAMAGES.\\r\\n\\r\\n  17. Interpretation of Sections 15 and 16.\\r\\n\\r\\n  If the disclaimer of warranty and limitation of liability provided\\r\\nabove cannot be given local legal effect according to their terms,\\r\\nreviewing courts shall apply local law that most closely approximates\\r\\nan absolute waiver of all civil liability in connection with the\\r\\nProgram, unless a warranty or assumption of liability accompanies a\\r\\ncopy of the Program in return for a fee.\\r\\n\\r\\n                     END OF TERMS AND CONDITIONS\\r\\n\\r\\n            How to Apply These Terms to Your New Programs\\r\\n\\r\\n  If you develop a new program, and you want it to be of the greatest\\r\\npossible use to the public, the best way to achieve this is to make it\\r\\nfree software which everyone can redistribute and change under these terms.\\r\\n\\r\\n  To do so, attach the following notices to the program.  It is safest\\r\\nto attach them to the start of each source file to most effectively\\r\\nstate the exclusion of warranty; and each file should have at least\\r\\nthe \\\"copyright\\\" line and a pointer to where the full notice is found.\\r\\n\\r\\n    <one line to give the program's name and a brief idea of what it does.>\\r\\n    Copyright (C) <year>  <name of author>\\r\\n\\r\\n    This program is free software: you can redistribute it and/or modify\\r\\n    it under the terms of the GNU General Public License as published by\\r\\n    the Free Software Foundation, either version 3 of the License, or\\r\\n    (at your option) any later version.\\r\\n\\r\\n    This program is distributed in the hope that it will be useful,\\r\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\n    GNU General Public License for more details.\\r\\n\\r\\n    You should have received a copy of the GNU General Public License\\r\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\r\\n\\r\\nAlso add information on how to contact you by electronic and paper mail.\\r\\n\\r\\n  If the program does terminal interaction, make it output a short\\r\\nnotice like this when it starts in an interactive mode:\\r\\n\\r\\n    <program>  Copyright (C) <year>  <name of author>\\r\\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\\r\\n    This is free software, and you are welcome to redistribute it\\r\\n    under certain conditions; type `show c' for details.\\r\\n\\r\\nThe hypothetical commands `show w' and `show c' should show the appropriate\\r\\nparts of the General Public License.  Of course, your program's commands\\r\\nmight be different; for a GUI interface, you would use an \\\"about box\\\".\\r\\n\\r\\n  You should also get your employer (if you work as a programmer) or school,\\r\\nif any, to sign a \\\"copyright disclaimer\\\" for the program, if necessary.\\r\\nFor more information on this, and how to apply and follow the GNU GPL, see\\r\\n<http://www.gnu.org/licenses/>.\\r\\n\\r\\n  The GNU General Public License does not permit incorporating your program\\r\\ninto proprietary programs.  If your program is a subroutine library, you\\r\\nmay consider it more useful to permit linking proprietary applications with\\r\\nthe library.  If this is what you want to do, use the GNU Lesser General\\r\\nPublic License instead of this License.  But first, please read\\r\\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\\r\\n\\r\\n*/\"\r\n      },\r\n      \"UniswapV2Migrator.sol\": \"pragma solidity =0.6.6;\\r\\n\\r\\nimport '@uniswap/lib/contracts/libraries/TransferHelper.sol';\\r\\n\\r\\nimport './interfaces/IUniswapV2Migrator.sol';\\r\\nimport './interfaces/V1/IUniswapV1Factory.sol';\\r\\nimport './interfaces/V1/IUniswapV1Exchange.sol';\\r\\nimport './interfaces/IUniswapV2Router01.sol';\\r\\nimport './interfaces/IERC20.sol';\\r\\n\\r\\ncontract UniswapV2Migrator is IUniswapV2Migrator {\\r\\n    IUniswapV1Factory immutable factoryV1;\\r\\n    IUniswapV2Router01 immutable router;\\r\\n\\r\\n    constructor(address _factoryV1, address _router) public {\\r\\n        factoryV1 = IUniswapV1Factory(_factoryV1);\\r\\n        router = IUniswapV2Router01(_router);\\r\\n    }\\r\\n\\r\\n    // needs to accept ETH from any v1 exchange and the router. ideally this could be enforced, as in the router,\\r\\n    // but it's not possible because it requires a call to the v1 factory, which takes too much gas\\r\\n    receive() external payable {}\\r\\n\\r\\n    function migrate(address token, uint amountTokenMin, uint amountETHMin, address to, uint deadline)\\r\\n        external\\r\\n        override\\r\\n    {\\r\\n        IUniswapV1Exchange exchangeV1 = IUniswapV1Exchange(factoryV1.getExchange(token));\\r\\n        uint liquidityV1 = exchangeV1.balanceOf(msg.sender);\\r\\n        require(exchangeV1.transferFrom(msg.sender, address(this), liquidityV1), 'TRANSFER_FROM_FAILED');\\r\\n        (uint amountETHV1, uint amountTokenV1) = exchangeV1.removeLiquidity(liquidityV1, 1, 1, uint(-1));\\r\\n        TransferHelper.safeApprove(token, address(router), amountTokenV1);\\r\\n        (uint amountTokenV2, uint amountETHV2,) = router.addLiquidityETH{value: amountETHV1}(\\r\\n            token,\\r\\n            amountTokenV1,\\r\\n            amountTokenMin,\\r\\n            amountETHMin,\\r\\n            to,\\r\\n            deadline\\r\\n        );\\r\\n        if (amountTokenV1 > amountTokenV2) {\\r\\n            TransferHelper.safeApprove(token, address(router), 0); // be a good blockchain citizen, reset allowance to 0\\r\\n            TransferHelper.safeTransfer(token, msg.sender, amountTokenV1 - amountTokenV2);\\r\\n        } else if (amountETHV1 > amountETHV2) {\\r\\n            // addLiquidityETH guarantees that all of amountETHV1 or amountTokenV1 will be used, hence this else is safe\\r\\n            TransferHelper.safeTransferETH(msg.sender, amountETHV1 - amountETHV2);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\r\n      \"UniswapV2Router01.sol\": \"pragma solidity =0.6.6;\\r\\n\\r\\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol';\\r\\nimport '@uniswap/lib/contracts/libraries/TransferHelper.sol';\\r\\n\\r\\nimport './libraries/UniswapV2Library.sol';\\r\\nimport './interfaces/IUniswapV2Router01.sol';\\r\\nimport './interfaces/IERC20.sol';\\r\\nimport './interfaces/IWETH.sol';\\r\\n\\r\\ncontract UniswapV2Router01 is IUniswapV2Router01 {\\r\\n    address public immutable override factory;\\r\\n    address public immutable override WETH;\\r\\n\\r\\n    modifier ensure(uint deadline) {\\r\\n        require(deadline >= block.timestamp, 'UniswapV2Router: EXPIRED');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address _factory, address _WETH) public {\\r\\n        factory = _factory;\\r\\n        WETH = _WETH;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        assert(msg.sender == WETH); // only accept ETH via fallback from the WETH contract\\r\\n    }\\r\\n\\r\\n    // **** ADD LIQUIDITY ****\\r\\n    function _addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin\\r\\n    ) private returns (uint amountA, uint amountB) {\\r\\n        // create the pair if it doesn't exist yet\\r\\n        if (IUniswapV2Factory(factory).getPair(tokenA, tokenB) == address(0)) {\\r\\n            IUniswapV2Factory(factory).createPair(tokenA, tokenB);\\r\\n        }\\r\\n        (uint reserveA, uint reserveB) = UniswapV2Library.getReserves(factory, tokenA, tokenB);\\r\\n        if (reserveA == 0 && reserveB == 0) {\\r\\n            (amountA, amountB) = (amountADesired, amountBDesired);\\r\\n        } else {\\r\\n            uint amountBOptimal = UniswapV2Library.quote(amountADesired, reserveA, reserveB);\\r\\n            if (amountBOptimal <= amountBDesired) {\\r\\n                require(amountBOptimal >= amountBMin, 'UniswapV2Router: INSUFFICIENT_B_AMOUNT');\\r\\n                (amountA, amountB) = (amountADesired, amountBOptimal);\\r\\n            } else {\\r\\n                uint amountAOptimal = UniswapV2Library.quote(amountBDesired, reserveB, reserveA);\\r\\n                assert(amountAOptimal <= amountADesired);\\r\\n                require(amountAOptimal >= amountAMin, 'UniswapV2Router: INSUFFICIENT_A_AMOUNT');\\r\\n                (amountA, amountB) = (amountAOptimal, amountBDesired);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external override ensure(deadline) returns (uint amountA, uint amountB, uint liquidity) {\\r\\n        (amountA, amountB) = _addLiquidity(tokenA, tokenB, amountADesired, amountBDesired, amountAMin, amountBMin);\\r\\n        address pair = UniswapV2Library.pairFor(factory, tokenA, tokenB);\\r\\n        TransferHelper.safeTransferFrom(tokenA, msg.sender, pair, amountA);\\r\\n        TransferHelper.safeTransferFrom(tokenB, msg.sender, pair, amountB);\\r\\n        liquidity = IUniswapV2Pair(pair).mint(to);\\r\\n    }\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external override payable ensure(deadline) returns (uint amountToken, uint amountETH, uint liquidity) {\\r\\n        (amountToken, amountETH) = _addLiquidity(\\r\\n            token,\\r\\n            WETH,\\r\\n            amountTokenDesired,\\r\\n            msg.value,\\r\\n            amountTokenMin,\\r\\n            amountETHMin\\r\\n        );\\r\\n        address pair = UniswapV2Library.pairFor(factory, token, WETH);\\r\\n        TransferHelper.safeTransferFrom(token, msg.sender, pair, amountToken);\\r\\n        IWETH(WETH).deposit{value: amountETH}();\\r\\n        assert(IWETH(WETH).transfer(pair, amountETH));\\r\\n        liquidity = IUniswapV2Pair(pair).mint(to);\\r\\n        if (msg.value > amountETH) TransferHelper.safeTransferETH(msg.sender, msg.value - amountETH); // refund dust eth, if any\\r\\n    }\\r\\n\\r\\n    // **** REMOVE LIQUIDITY ****\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) public override ensure(deadline) returns (uint amountA, uint amountB) {\\r\\n        address pair = UniswapV2Library.pairFor(factory, tokenA, tokenB);\\r\\n        IUniswapV2Pair(pair).transferFrom(msg.sender, pair, liquidity); // send liquidity to pair\\r\\n        (uint amount0, uint amount1) = IUniswapV2Pair(pair).burn(to);\\r\\n        (address token0,) = UniswapV2Library.sortTokens(tokenA, tokenB);\\r\\n        (amountA, amountB) = tokenA == token0 ? (amount0, amount1) : (amount1, amount0);\\r\\n        require(amountA >= amountAMin, 'UniswapV2Router: INSUFFICIENT_A_AMOUNT');\\r\\n        require(amountB >= amountBMin, 'UniswapV2Router: INSUFFICIENT_B_AMOUNT');\\r\\n    }\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) public override ensure(deadline) returns (uint amountToken, uint amountETH) {\\r\\n        (amountToken, amountETH) = removeLiquidity(\\r\\n            token,\\r\\n            WETH,\\r\\n            liquidity,\\r\\n            amountTokenMin,\\r\\n            amountETHMin,\\r\\n            address(this),\\r\\n            deadline\\r\\n        );\\r\\n        TransferHelper.safeTransfer(token, to, amountToken);\\r\\n        IWETH(WETH).withdraw(amountETH);\\r\\n        TransferHelper.safeTransferETH(to, amountETH);\\r\\n    }\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external override returns (uint amountA, uint amountB) {\\r\\n        address pair = UniswapV2Library.pairFor(factory, tokenA, tokenB);\\r\\n        uint value = approveMax ? uint(-1) : liquidity;\\r\\n        IUniswapV2Pair(pair).permit(msg.sender, address(this), value, deadline, v, r, s);\\r\\n        (amountA, amountB) = removeLiquidity(tokenA, tokenB, liquidity, amountAMin, amountBMin, to, deadline);\\r\\n    }\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external override returns (uint amountToken, uint amountETH) {\\r\\n        address pair = UniswapV2Library.pairFor(factory, token, WETH);\\r\\n        uint value = approveMax ? uint(-1) : liquidity;\\r\\n        IUniswapV2Pair(pair).permit(msg.sender, address(this), value, deadline, v, r, s);\\r\\n        (amountToken, amountETH) = removeLiquidityETH(token, liquidity, amountTokenMin, amountETHMin, to, deadline);\\r\\n    }\\r\\n\\r\\n    // **** SWAP ****\\r\\n    // requires the initial amount to have already been sent to the first pair\\r\\n    function _swap(uint[] memory amounts, address[] memory path, address _to) private {\\r\\n        for (uint i; i < path.length - 1; i++) {\\r\\n            (address input, address output) = (path[i], path[i + 1]);\\r\\n            (address token0,) = UniswapV2Library.sortTokens(input, output);\\r\\n            uint amountOut = amounts[i + 1];\\r\\n            (uint amount0Out, uint amount1Out) = input == token0 ? (uint(0), amountOut) : (amountOut, uint(0));\\r\\n            address to = i < path.length - 2 ? UniswapV2Library.pairFor(factory, output, path[i + 2]) : _to;\\r\\n            IUniswapV2Pair(UniswapV2Library.pairFor(factory, input, output)).swap(amount0Out, amount1Out, to, new bytes(0));\\r\\n        }\\r\\n    }\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external override ensure(deadline) returns (uint[] memory amounts) {\\r\\n        amounts = UniswapV2Library.getAmountsOut(factory, amountIn, path);\\r\\n        require(amounts[amounts.length - 1] >= amountOutMin, 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT');\\r\\n        TransferHelper.safeTransferFrom(path[0], msg.sender, UniswapV2Library.pairFor(factory, path[0], path[1]), amounts[0]);\\r\\n        _swap(amounts, path, to);\\r\\n    }\\r\\n    function swapTokensForExactTokens(\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external override ensure(deadline) returns (uint[] memory amounts) {\\r\\n        amounts = UniswapV2Library.getAmountsIn(factory, amountOut, path);\\r\\n        require(amounts[0] <= amountInMax, 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT');\\r\\n        TransferHelper.safeTransferFrom(path[0], msg.sender, UniswapV2Library.pairFor(factory, path[0], path[1]), amounts[0]);\\r\\n        _swap(amounts, path, to);\\r\\n    }\\r\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        override\\r\\n        payable\\r\\n        ensure(deadline)\\r\\n        returns (uint[] memory amounts)\\r\\n    {\\r\\n        require(path[0] == WETH, 'UniswapV2Router: INVALID_PATH');\\r\\n        amounts = UniswapV2Library.getAmountsOut(factory, msg.value, path);\\r\\n        require(amounts[amounts.length - 1] >= amountOutMin, 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT');\\r\\n        IWETH(WETH).deposit{value: amounts[0]}();\\r\\n        assert(IWETH(WETH).transfer(UniswapV2Library.pairFor(factory, path[0], path[1]), amounts[0]));\\r\\n        _swap(amounts, path, to);\\r\\n    }\\r\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        override\\r\\n        ensure(deadline)\\r\\n        returns (uint[] memory amounts)\\r\\n    {\\r\\n        require(path[path.length - 1] == WETH, 'UniswapV2Router: INVALID_PATH');\\r\\n        amounts = UniswapV2Library.getAmountsIn(factory, amountOut, path);\\r\\n        require(amounts[0] <= amountInMax, 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT');\\r\\n        TransferHelper.safeTransferFrom(path[0], msg.sender, UniswapV2Library.pairFor(factory, path[0], path[1]), amounts[0]);\\r\\n        _swap(amounts, path, address(this));\\r\\n        IWETH(WETH).withdraw(amounts[amounts.length - 1]);\\r\\n        TransferHelper.safeTransferETH(to, amounts[amounts.length - 1]);\\r\\n    }\\r\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        override\\r\\n        ensure(deadline)\\r\\n        returns (uint[] memory amounts)\\r\\n    {\\r\\n        require(path[path.length - 1] == WETH, 'UniswapV2Router: INVALID_PATH');\\r\\n        amounts = UniswapV2Library.getAmountsOut(factory, amountIn, path);\\r\\n        require(amounts[amounts.length - 1] >= amountOutMin, 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT');\\r\\n        TransferHelper.safeTransferFrom(path[0], msg.sender, UniswapV2Library.pairFor(factory, path[0], path[1]), amounts[0]);\\r\\n        _swap(amounts, path, address(this));\\r\\n        IWETH(WETH).withdraw(amounts[amounts.length - 1]);\\r\\n        TransferHelper.safeTransferETH(to, amounts[amounts.length - 1]);\\r\\n    }\\r\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        override\\r\\n        payable\\r\\n        ensure(deadline)\\r\\n        returns (uint[] memory amounts)\\r\\n    {\\r\\n        require(path[0] == WETH, 'UniswapV2Router: INVALID_PATH');\\r\\n        amounts = UniswapV2Library.getAmountsIn(factory, amountOut, path);\\r\\n        require(amounts[0] <= msg.value, 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT');\\r\\n        IWETH(WETH).deposit{value: amounts[0]}();\\r\\n        assert(IWETH(WETH).transfer(UniswapV2Library.pairFor(factory, path[0], path[1]), amounts[0]));\\r\\n        _swap(amounts, path, to);\\r\\n        if (msg.value > amounts[0]) TransferHelper.safeTransferETH(msg.sender, msg.value - amounts[0]); // refund dust eth, if any\\r\\n    }\\r\\n\\r\\n    function quote(uint amountA, uint reserveA, uint reserveB) public pure override returns (uint amountB) {\\r\\n        return UniswapV2Library.quote(amountA, reserveA, reserveB);\\r\\n    }\\r\\n\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure override returns (uint amountOut) {\\r\\n        return UniswapV2Library.getAmountOut(amountIn, reserveIn, reserveOut);\\r\\n    }\\r\\n\\r\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) public pure override returns (uint amountIn) {\\r\\n        return UniswapV2Library.getAmountOut(amountOut, reserveIn, reserveOut);\\r\\n    }\\r\\n\\r\\n    function getAmountsOut(uint amountIn, address[] memory path) public view override returns (uint[] memory amounts) {\\r\\n        return UniswapV2Library.getAmountsOut(factory, amountIn, path);\\r\\n    }\\r\\n\\r\\n    function getAmountsIn(uint amountOut, address[] memory path) public view override returns (uint[] memory amounts) {\\r\\n        return UniswapV2Library.getAmountsIn(factory, amountOut, path);\\r\\n    }\\r\\n}\\r\\n\",\r\n      \"UniswapV2Router02.sol\": \"pragma solidity =0.6.6;\\r\\n\\r\\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol';\\r\\nimport '@uniswap/lib/contracts/libraries/TransferHelper.sol';\\r\\n\\r\\nimport './interfaces/IUniswapV2Router02.sol';\\r\\nimport './libraries/UniswapV2Library.sol';\\r\\nimport './libraries/SafeMath.sol';\\r\\nimport './interfaces/IERC20.sol';\\r\\nimport './interfaces/IWETH.sol';\\r\\n\\r\\ncontract UniswapV2Router02 is IUniswapV2Router02 {\\r\\n    using SafeMath for uint;\\r\\n\\r\\n    address public immutable override factory;\\r\\n    address public immutable override WETH;\\r\\n\\r\\n    modifier ensure(uint deadline) {\\r\\n        require(deadline >= block.timestamp, 'UniswapV2Router: EXPIRED');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address _factory, address _WETH) public {\\r\\n        factory = _factory;\\r\\n        WETH = _WETH;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        assert(msg.sender == WETH); // only accept ETH via fallback from the WETH contract\\r\\n    }\\r\\n\\r\\n    // **** ADD LIQUIDITY ****\\r\\n    function _addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin\\r\\n    ) internal virtual returns (uint amountA, uint amountB) {\\r\\n        // create the pair if it doesn't exist yet\\r\\n        if (IUniswapV2Factory(factory).getPair(tokenA, tokenB) == address(0)) {\\r\\n            IUniswapV2Factory(factory).createPair(tokenA, tokenB);\\r\\n        }\\r\\n        (uint reserveA, uint reserveB) = UniswapV2Library.getReserves(factory, tokenA, tokenB);\\r\\n        if (reserveA == 0 && reserveB == 0) {\\r\\n            (amountA, amountB) = (amountADesired, amountBDesired);\\r\\n        } else {\\r\\n            uint amountBOptimal = UniswapV2Library.quote(amountADesired, reserveA, reserveB);\\r\\n            if (amountBOptimal <= amountBDesired) {\\r\\n                require(amountBOptimal >= amountBMin, 'UniswapV2Router: INSUFFICIENT_B_AMOUNT');\\r\\n                (amountA, amountB) = (amountADesired, amountBOptimal);\\r\\n            } else {\\r\\n                uint amountAOptimal = UniswapV2Library.quote(amountBDesired, reserveB, reserveA);\\r\\n                assert(amountAOptimal <= amountADesired);\\r\\n                require(amountAOptimal >= amountAMin, 'UniswapV2Router: INSUFFICIENT_A_AMOUNT');\\r\\n                (amountA, amountB) = (amountAOptimal, amountBDesired);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external virtual override ensure(deadline) returns (uint amountA, uint amountB, uint liquidity) {\\r\\n        (amountA, amountB) = _addLiquidity(tokenA, tokenB, amountADesired, amountBDesired, amountAMin, amountBMin);\\r\\n        address pair = UniswapV2Library.pairFor(factory, tokenA, tokenB);\\r\\n        TransferHelper.safeTransferFrom(tokenA, msg.sender, pair, amountA);\\r\\n        TransferHelper.safeTransferFrom(tokenB, msg.sender, pair, amountB);\\r\\n        liquidity = IUniswapV2Pair(pair).mint(to);\\r\\n    }\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external virtual override payable ensure(deadline) returns (uint amountToken, uint amountETH, uint liquidity) {\\r\\n        (amountToken, amountETH) = _addLiquidity(\\r\\n            token,\\r\\n            WETH,\\r\\n            amountTokenDesired,\\r\\n            msg.value,\\r\\n            amountTokenMin,\\r\\n            amountETHMin\\r\\n        );\\r\\n        address pair = UniswapV2Library.pairFor(factory, token, WETH);\\r\\n        TransferHelper.safeTransferFrom(token, msg.sender, pair, amountToken);\\r\\n        IWETH(WETH).deposit{value: amountETH}();\\r\\n        assert(IWETH(WETH).transfer(pair, amountETH));\\r\\n        liquidity = IUniswapV2Pair(pair).mint(to);\\r\\n        // refund dust eth, if any\\r\\n        if (msg.value > amountETH) TransferHelper.safeTransferETH(msg.sender, msg.value - amountETH);\\r\\n    }\\r\\n\\r\\n    // **** REMOVE LIQUIDITY ****\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) public virtual override ensure(deadline) returns (uint amountA, uint amountB) {\\r\\n        address pair = UniswapV2Library.pairFor(factory, tokenA, tokenB);\\r\\n        IUniswapV2Pair(pair).transferFrom(msg.sender, pair, liquidity); // send liquidity to pair\\r\\n        (uint amount0, uint amount1) = IUniswapV2Pair(pair).burn(to);\\r\\n        (address token0,) = UniswapV2Library.sortTokens(tokenA, tokenB);\\r\\n        (amountA, amountB) = tokenA == token0 ? (amount0, amount1) : (amount1, amount0);\\r\\n        require(amountA >= amountAMin, 'UniswapV2Router: INSUFFICIENT_A_AMOUNT');\\r\\n        require(amountB >= amountBMin, 'UniswapV2Router: INSUFFICIENT_B_AMOUNT');\\r\\n    }\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) public virtual override ensure(deadline) returns (uint amountToken, uint amountETH) {\\r\\n        (amountToken, amountETH) = removeLiquidity(\\r\\n            token,\\r\\n            WETH,\\r\\n            liquidity,\\r\\n            amountTokenMin,\\r\\n            amountETHMin,\\r\\n            address(this),\\r\\n            deadline\\r\\n        );\\r\\n        TransferHelper.safeTransfer(token, to, amountToken);\\r\\n        IWETH(WETH).withdraw(amountETH);\\r\\n        TransferHelper.safeTransferETH(to, amountETH);\\r\\n    }\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external virtual override returns (uint amountA, uint amountB) {\\r\\n        address pair = UniswapV2Library.pairFor(factory, tokenA, tokenB);\\r\\n        uint value = approveMax ? uint(-1) : liquidity;\\r\\n        IUniswapV2Pair(pair).permit(msg.sender, address(this), value, deadline, v, r, s);\\r\\n        (amountA, amountB) = removeLiquidity(tokenA, tokenB, liquidity, amountAMin, amountBMin, to, deadline);\\r\\n    }\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external virtual override returns (uint amountToken, uint amountETH) {\\r\\n        address pair = UniswapV2Library.pairFor(factory, token, WETH);\\r\\n        uint value = approveMax ? uint(-1) : liquidity;\\r\\n        IUniswapV2Pair(pair).permit(msg.sender, address(this), value, deadline, v, r, s);\\r\\n        (amountToken, amountETH) = removeLiquidityETH(token, liquidity, amountTokenMin, amountETHMin, to, deadline);\\r\\n    }\\r\\n\\r\\n    // **** REMOVE LIQUIDITY (supporting fee-on-transfer tokens) ****\\r\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) public virtual override ensure(deadline) returns (uint amountETH) {\\r\\n        (, amountETH) = removeLiquidity(\\r\\n            token,\\r\\n            WETH,\\r\\n            liquidity,\\r\\n            amountTokenMin,\\r\\n            amountETHMin,\\r\\n            address(this),\\r\\n            deadline\\r\\n        );\\r\\n        TransferHelper.safeTransfer(token, to, IERC20(token).balanceOf(address(this)));\\r\\n        IWETH(WETH).withdraw(amountETH);\\r\\n        TransferHelper.safeTransferETH(to, amountETH);\\r\\n    }\\r\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external virtual override returns (uint amountETH) {\\r\\n        address pair = UniswapV2Library.pairFor(factory, token, WETH);\\r\\n        uint value = approveMax ? uint(-1) : liquidity;\\r\\n        IUniswapV2Pair(pair).permit(msg.sender, address(this), value, deadline, v, r, s);\\r\\n        amountETH = removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n            token, liquidity, amountTokenMin, amountETHMin, to, deadline\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // **** SWAP ****\\r\\n    // requires the initial amount to have already been sent to the first pair\\r\\n    function _swap(uint[] memory amounts, address[] memory path, address _to) internal virtual {\\r\\n        for (uint i; i < path.length - 1; i++) {\\r\\n            (address input, address output) = (path[i], path[i + 1]);\\r\\n            (address token0,) = UniswapV2Library.sortTokens(input, output);\\r\\n            uint amountOut = amounts[i + 1];\\r\\n            (uint amount0Out, uint amount1Out) = input == token0 ? (uint(0), amountOut) : (amountOut, uint(0));\\r\\n            address to = i < path.length - 2 ? UniswapV2Library.pairFor(factory, output, path[i + 2]) : _to;\\r\\n            IUniswapV2Pair(UniswapV2Library.pairFor(factory, input, output)).swap(\\r\\n                amount0Out, amount1Out, to, new bytes(0)\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external virtual override ensure(deadline) returns (uint[] memory amounts) {\\r\\n        amounts = UniswapV2Library.getAmountsOut(factory, amountIn, path);\\r\\n        require(amounts[amounts.length - 1] >= amountOutMin, 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT');\\r\\n        TransferHelper.safeTransferFrom(\\r\\n            path[0], msg.sender, UniswapV2Library.pairFor(factory, path[0], path[1]), amounts[0]\\r\\n        );\\r\\n        _swap(amounts, path, to);\\r\\n    }\\r\\n    function swapTokensForExactTokens(\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external virtual override ensure(deadline) returns (uint[] memory amounts) {\\r\\n        amounts = UniswapV2Library.getAmountsIn(factory, amountOut, path);\\r\\n        require(amounts[0] <= amountInMax, 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT');\\r\\n        TransferHelper.safeTransferFrom(\\r\\n            path[0], msg.sender, UniswapV2Library.pairFor(factory, path[0], path[1]), amounts[0]\\r\\n        );\\r\\n        _swap(amounts, path, to);\\r\\n    }\\r\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        virtual\\r\\n        override\\r\\n        payable\\r\\n        ensure(deadline)\\r\\n        returns (uint[] memory amounts)\\r\\n    {\\r\\n        require(path[0] == WETH, 'UniswapV2Router: INVALID_PATH');\\r\\n        amounts = UniswapV2Library.getAmountsOut(factory, msg.value, path);\\r\\n        require(amounts[amounts.length - 1] >= amountOutMin, 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT');\\r\\n        IWETH(WETH).deposit{value: amounts[0]}();\\r\\n        assert(IWETH(WETH).transfer(UniswapV2Library.pairFor(factory, path[0], path[1]), amounts[0]));\\r\\n        _swap(amounts, path, to);\\r\\n    }\\r\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        virtual\\r\\n        override\\r\\n        ensure(deadline)\\r\\n        returns (uint[] memory amounts)\\r\\n    {\\r\\n        require(path[path.length - 1] == WETH, 'UniswapV2Router: INVALID_PATH');\\r\\n        amounts = UniswapV2Library.getAmountsIn(factory, amountOut, path);\\r\\n        require(amounts[0] <= amountInMax, 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT');\\r\\n        TransferHelper.safeTransferFrom(\\r\\n            path[0], msg.sender, UniswapV2Library.pairFor(factory, path[0], path[1]), amounts[0]\\r\\n        );\\r\\n        _swap(amounts, path, address(this));\\r\\n        IWETH(WETH).withdraw(amounts[amounts.length - 1]);\\r\\n        TransferHelper.safeTransferETH(to, amounts[amounts.length - 1]);\\r\\n    }\\r\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        virtual\\r\\n        override\\r\\n        ensure(deadline)\\r\\n        returns (uint[] memory amounts)\\r\\n    {\\r\\n        require(path[path.length - 1] == WETH, 'UniswapV2Router: INVALID_PATH');\\r\\n        amounts = UniswapV2Library.getAmountsOut(factory, amountIn, path);\\r\\n        require(amounts[amounts.length - 1] >= amountOutMin, 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT');\\r\\n        TransferHelper.safeTransferFrom(\\r\\n            path[0], msg.sender, UniswapV2Library.pairFor(factory, path[0], path[1]), amounts[0]\\r\\n        );\\r\\n        _swap(amounts, path, address(this));\\r\\n        IWETH(WETH).withdraw(amounts[amounts.length - 1]);\\r\\n        TransferHelper.safeTransferETH(to, amounts[amounts.length - 1]);\\r\\n    }\\r\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        virtual\\r\\n        override\\r\\n        payable\\r\\n        ensure(deadline)\\r\\n        returns (uint[] memory amounts)\\r\\n    {\\r\\n        require(path[0] == WETH, 'UniswapV2Router: INVALID_PATH');\\r\\n        amounts = UniswapV2Library.getAmountsIn(factory, amountOut, path);\\r\\n        require(amounts[0] <= msg.value, 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT');\\r\\n        IWETH(WETH).deposit{value: amounts[0]}();\\r\\n        assert(IWETH(WETH).transfer(UniswapV2Library.pairFor(factory, path[0], path[1]), amounts[0]));\\r\\n        _swap(amounts, path, to);\\r\\n        // refund dust eth, if any\\r\\n        if (msg.value > amounts[0]) TransferHelper.safeTransferETH(msg.sender, msg.value - amounts[0]);\\r\\n    }\\r\\n\\r\\n    // **** SWAP (supporting fee-on-transfer tokens) ****\\r\\n    // requires the initial amount to have already been sent to the first pair\\r\\n    function _swapSupportingFeeOnTransferTokens(address[] memory path, address _to) internal virtual {\\r\\n        for (uint i; i < path.length - 1; i++) {\\r\\n            (address input, address output) = (path[i], path[i + 1]);\\r\\n            (address token0,) = UniswapV2Library.sortTokens(input, output);\\r\\n            IUniswapV2Pair pair = IUniswapV2Pair(UniswapV2Library.pairFor(factory, input, output));\\r\\n            uint amountInput;\\r\\n            uint amountOutput;\\r\\n            { // scope to avoid stack too deep errors\\r\\n            (uint reserve0, uint reserve1,) = pair.getReserves();\\r\\n            (uint reserveInput, uint reserveOutput) = input == token0 ? (reserve0, reserve1) : (reserve1, reserve0);\\r\\n            amountInput = IERC20(input).balanceOf(address(pair)).sub(reserveInput);\\r\\n            amountOutput = UniswapV2Library.getAmountOut(amountInput, reserveInput, reserveOutput);\\r\\n            }\\r\\n            (uint amount0Out, uint amount1Out) = input == token0 ? (uint(0), amountOutput) : (amountOutput, uint(0));\\r\\n            address to = i < path.length - 2 ? UniswapV2Library.pairFor(factory, output, path[i + 2]) : _to;\\r\\n            pair.swap(amount0Out, amount1Out, to, new bytes(0));\\r\\n        }\\r\\n    }\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external virtual override ensure(deadline) {\\r\\n        TransferHelper.safeTransferFrom(\\r\\n            path[0], msg.sender, UniswapV2Library.pairFor(factory, path[0], path[1]), amountIn\\r\\n        );\\r\\n        uint balanceBefore = IERC20(path[path.length - 1]).balanceOf(to);\\r\\n        _swapSupportingFeeOnTransferTokens(path, to);\\r\\n        require(\\r\\n            IERC20(path[path.length - 1]).balanceOf(to).sub(balanceBefore) >= amountOutMin,\\r\\n            'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'\\r\\n        );\\r\\n    }\\r\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    )\\r\\n        external\\r\\n        virtual\\r\\n        override\\r\\n        payable\\r\\n        ensure(deadline)\\r\\n    {\\r\\n        require(path[0] == WETH, 'UniswapV2Router: INVALID_PATH');\\r\\n        uint amountIn = msg.value;\\r\\n        IWETH(WETH).deposit{value: amountIn}();\\r\\n        assert(IWETH(WETH).transfer(UniswapV2Library.pairFor(factory, path[0], path[1]), amountIn));\\r\\n        uint balanceBefore = IERC20(path[path.length - 1]).balanceOf(to);\\r\\n        _swapSupportingFeeOnTransferTokens(path, to);\\r\\n        require(\\r\\n            IERC20(path[path.length - 1]).balanceOf(to).sub(balanceBefore) >= amountOutMin,\\r\\n            'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'\\r\\n        );\\r\\n    }\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    )\\r\\n        external\\r\\n        virtual\\r\\n        override\\r\\n        ensure(deadline)\\r\\n    {\\r\\n        require(path[path.length - 1] == WETH, 'UniswapV2Router: INVALID_PATH');\\r\\n        TransferHelper.safeTransferFrom(\\r\\n            path[0], msg.sender, UniswapV2Library.pairFor(factory, path[0], path[1]), amountIn\\r\\n        );\\r\\n        _swapSupportingFeeOnTransferTokens(path, address(this));\\r\\n        uint amountOut = IERC20(WETH).balanceOf(address(this));\\r\\n        require(amountOut >= amountOutMin, 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT');\\r\\n        IWETH(WETH).withdraw(amountOut);\\r\\n        TransferHelper.safeTransferETH(to, amountOut);\\r\\n    }\\r\\n\\r\\n    // **** LIBRARY FUNCTIONS ****\\r\\n    function quote(uint amountA, uint reserveA, uint reserveB) public pure virtual override returns (uint amountB) {\\r\\n        return UniswapV2Library.quote(amountA, reserveA, reserveB);\\r\\n    }\\r\\n\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut)\\r\\n        public\\r\\n        pure\\r\\n        virtual\\r\\n        override\\r\\n        returns (uint amountOut)\\r\\n    {\\r\\n        return UniswapV2Library.getAmountOut(amountIn, reserveIn, reserveOut);\\r\\n    }\\r\\n\\r\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut)\\r\\n        public\\r\\n        pure\\r\\n        virtual\\r\\n        override\\r\\n        returns (uint amountIn)\\r\\n    {\\r\\n        return UniswapV2Library.getAmountIn(amountOut, reserveIn, reserveOut);\\r\\n    }\\r\\n\\r\\n    function getAmountsOut(uint amountIn, address[] memory path)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        override\\r\\n        returns (uint[] memory amounts)\\r\\n    {\\r\\n        return UniswapV2Library.getAmountsOut(factory, amountIn, path);\\r\\n    }\\r\\n\\r\\n    function getAmountsIn(uint amountOut, address[] memory path)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        override\\r\\n        returns (uint[] memory amounts)\\r\\n    {\\r\\n        return UniswapV2Library.getAmountsIn(factory, amountOut, path);\\r\\n    }\\r\\n}\\r\\n\"\r\n    },\r\n    \"node_modules\": {\r\n      \"@uniswap\": {\r\n        \"lib\": {\r\n          \"contracts\": {\r\n            \"libraries\": {\r\n              \"AddressStringUtil.sol\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.5.0;\\n\\nlibrary AddressStringUtil {\\n    // converts an address to the uppercase hex string, extracting only len bytes (up to 20, multiple of 2)\\n    function toAsciiString(address addr, uint256 len) internal pure returns (string memory) {\\n        require(len % 2 == 0 && len > 0 && len <= 40, 'AddressStringUtil: INVALID_LEN');\\n\\n        bytes memory s = new bytes(len);\\n        uint256 addrNum = uint256(addr);\\n        for (uint256 i = 0; i < len / 2; i++) {\\n            // shift right and truncate all but the least significant byte to extract the byte at position 19-i\\n            uint8 b = uint8(addrNum >> (8 * (19 - i)));\\n            // first hex character is the most significant 4 bits\\n            uint8 hi = b >> 4;\\n            // second hex character is the least significant 4 bits\\n            uint8 lo = b - (hi << 4);\\n            s[2 * i] = char(hi);\\n            s[2 * i + 1] = char(lo);\\n        }\\n        return string(s);\\n    }\\n\\n    // hi and lo are only 4 bits and between 0 and 16\\n    // this method converts those values to the unicode/ascii code point for the hex representation\\n    // uses upper case for the characters\\n    function char(uint8 b) private pure returns (bytes1 c) {\\n        if (b < 10) {\\n            return bytes1(b + 0x30);\\n        } else {\\n            return bytes1(b + 0x37);\\n        }\\n    }\\n}\\n\",\r\n              \"Babylonian.sol\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.4.0;\\n\\n// computes square roots using the babylonian method\\n// https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method\\nlibrary Babylonian {\\n    // credit for this implementation goes to\\n    // https://github.com/abdk-consulting/abdk-libraries-solidity/blob/master/ABDKMath64x64.sol#L687\\n    function sqrt(uint256 x) internal pure returns (uint256) {\\n        if (x == 0) return 0;\\n        // this block is equivalent to r = uint256(1) << (BitMath.mostSignificantBit(x) / 2);\\n        // however that code costs significantly more gas\\n        uint256 xx = x;\\n        uint256 r = 1;\\n        if (xx >= 0x100000000000000000000000000000000) {\\n            xx >>= 128;\\n            r <<= 64;\\n        }\\n        if (xx >= 0x10000000000000000) {\\n            xx >>= 64;\\n            r <<= 32;\\n        }\\n        if (xx >= 0x100000000) {\\n            xx >>= 32;\\n            r <<= 16;\\n        }\\n        if (xx >= 0x10000) {\\n            xx >>= 16;\\n            r <<= 8;\\n        }\\n        if (xx >= 0x100) {\\n            xx >>= 8;\\n            r <<= 4;\\n        }\\n        if (xx >= 0x10) {\\n            xx >>= 4;\\n            r <<= 2;\\n        }\\n        if (xx >= 0x8) {\\n            r <<= 1;\\n        }\\n        r = (r + x / r) >> 1;\\n        r = (r + x / r) >> 1;\\n        r = (r + x / r) >> 1;\\n        r = (r + x / r) >> 1;\\n        r = (r + x / r) >> 1;\\n        r = (r + x / r) >> 1;\\n        r = (r + x / r) >> 1; // Seven iterations should be enough\\n        uint256 r1 = x / r;\\n        return (r < r1 ? r : r1);\\n    }\\n}\\n\",\r\n              \"BitMath.sol\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity >=0.5.0;\\n\\nlibrary BitMath {\\n    // returns the 0 indexed position of the most significant bit of the input x\\n    // s.t. x >= 2**msb and x < 2**(msb+1)\\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\\n        require(x > 0, 'BitMath::mostSignificantBit: zero');\\n\\n        if (x >= 0x100000000000000000000000000000000) {\\n            x >>= 128;\\n            r += 128;\\n        }\\n        if (x >= 0x10000000000000000) {\\n            x >>= 64;\\n            r += 64;\\n        }\\n        if (x >= 0x100000000) {\\n            x >>= 32;\\n            r += 32;\\n        }\\n        if (x >= 0x10000) {\\n            x >>= 16;\\n            r += 16;\\n        }\\n        if (x >= 0x100) {\\n            x >>= 8;\\n            r += 8;\\n        }\\n        if (x >= 0x10) {\\n            x >>= 4;\\n            r += 4;\\n        }\\n        if (x >= 0x4) {\\n            x >>= 2;\\n            r += 2;\\n        }\\n        if (x >= 0x2) r += 1;\\n    }\\n\\n    // returns the 0 indexed position of the least significant bit of the input x\\n    // s.t. (x & 2**lsb) != 0 and (x & (2**(lsb) - 1)) == 0)\\n    // i.e. the bit at the index is set and the mask of all lower bits is 0\\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\\n        require(x > 0, 'BitMath::leastSignificantBit: zero');\\n\\n        r = 255;\\n        if (x & uint128(-1) > 0) {\\n            r -= 128;\\n        } else {\\n            x >>= 128;\\n        }\\n        if (x & uint64(-1) > 0) {\\n            r -= 64;\\n        } else {\\n            x >>= 64;\\n        }\\n        if (x & uint32(-1) > 0) {\\n            r -= 32;\\n        } else {\\n            x >>= 32;\\n        }\\n        if (x & uint16(-1) > 0) {\\n            r -= 16;\\n        } else {\\n            x >>= 16;\\n        }\\n        if (x & uint8(-1) > 0) {\\n            r -= 8;\\n        } else {\\n            x >>= 8;\\n        }\\n        if (x & 0xf > 0) {\\n            r -= 4;\\n        } else {\\n            x >>= 4;\\n        }\\n        if (x & 0x3 > 0) {\\n            r -= 2;\\n        } else {\\n            x >>= 2;\\n        }\\n        if (x & 0x1 > 0) r -= 1;\\n    }\\n}\\n\",\r\n              \"FixedPoint.sol\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity >=0.4.0;\\n\\nimport './FullMath.sol';\\nimport './Babylonian.sol';\\nimport './BitMath.sol';\\n\\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\\nlibrary FixedPoint {\\n    // range: [0, 2**112 - 1]\\n    // resolution: 1 / 2**112\\n    struct uq112x112 {\\n        uint224 _x;\\n    }\\n\\n    // range: [0, 2**144 - 1]\\n    // resolution: 1 / 2**112\\n    struct uq144x112 {\\n        uint256 _x;\\n    }\\n\\n    uint8 public constant RESOLUTION = 112;\\n    uint256 public constant Q112 = 0x10000000000000000000000000000; // 2**112\\n    uint256 private constant Q224 = 0x100000000000000000000000000000000000000000000000000000000; // 2**224\\n    uint256 private constant LOWER_MASK = 0xffffffffffffffffffffffffffff; // decimal of UQ*x112 (lower 112 bits)\\n\\n    // encode a uint112 as a UQ112x112\\n    function encode(uint112 x) internal pure returns (uq112x112 memory) {\\n        return uq112x112(uint224(x) << RESOLUTION);\\n    }\\n\\n    // encodes a uint144 as a UQ144x112\\n    function encode144(uint144 x) internal pure returns (uq144x112 memory) {\\n        return uq144x112(uint256(x) << RESOLUTION);\\n    }\\n\\n    // decode a UQ112x112 into a uint112 by truncating after the radix point\\n    function decode(uq112x112 memory self) internal pure returns (uint112) {\\n        return uint112(self._x >> RESOLUTION);\\n    }\\n\\n    // decode a UQ144x112 into a uint144 by truncating after the radix point\\n    function decode144(uq144x112 memory self) internal pure returns (uint144) {\\n        return uint144(self._x >> RESOLUTION);\\n    }\\n\\n    // multiply a UQ112x112 by a uint, returning a UQ144x112\\n    // reverts on overflow\\n    function mul(uq112x112 memory self, uint256 y) internal pure returns (uq144x112 memory) {\\n        uint256 z = 0;\\n        require(y == 0 || (z = self._x * y) / y == self._x, 'FixedPoint::mul: overflow');\\n        return uq144x112(z);\\n    }\\n\\n    // multiply a UQ112x112 by an int and decode, returning an int\\n    // reverts on overflow\\n    function muli(uq112x112 memory self, int256 y) internal pure returns (int256) {\\n        uint256 z = FullMath.mulDiv(self._x, uint256(y < 0 ? -y : y), Q112);\\n        require(z < 2**255, 'FixedPoint::muli: overflow');\\n        return y < 0 ? -int256(z) : int256(z);\\n    }\\n\\n    // multiply a UQ112x112 by a UQ112x112, returning a UQ112x112\\n    // lossy\\n    function muluq(uq112x112 memory self, uq112x112 memory other) internal pure returns (uq112x112 memory) {\\n        if (self._x == 0 || other._x == 0) {\\n            return uq112x112(0);\\n        }\\n        uint112 upper_self = uint112(self._x >> RESOLUTION); // * 2^0\\n        uint112 lower_self = uint112(self._x & LOWER_MASK); // * 2^-112\\n        uint112 upper_other = uint112(other._x >> RESOLUTION); // * 2^0\\n        uint112 lower_other = uint112(other._x & LOWER_MASK); // * 2^-112\\n\\n        // partial products\\n        uint224 upper = uint224(upper_self) * upper_other; // * 2^0\\n        uint224 lower = uint224(lower_self) * lower_other; // * 2^-224\\n        uint224 uppers_lowero = uint224(upper_self) * lower_other; // * 2^-112\\n        uint224 uppero_lowers = uint224(upper_other) * lower_self; // * 2^-112\\n\\n        // so the bit shift does not overflow\\n        require(upper <= uint112(-1), 'FixedPoint::muluq: upper overflow');\\n\\n        // this cannot exceed 256 bits, all values are 224 bits\\n        uint256 sum = uint256(upper << RESOLUTION) + uppers_lowero + uppero_lowers + (lower >> RESOLUTION);\\n\\n        // so the cast does not overflow\\n        require(sum <= uint224(-1), 'FixedPoint::muluq: sum overflow');\\n\\n        return uq112x112(uint224(sum));\\n    }\\n\\n    // divide a UQ112x112 by a UQ112x112, returning a UQ112x112\\n    function divuq(uq112x112 memory self, uq112x112 memory other) internal pure returns (uq112x112 memory) {\\n        require(other._x > 0, 'FixedPoint::divuq: division by zero');\\n        if (self._x == other._x) {\\n            return uq112x112(uint224(Q112));\\n        }\\n        if (self._x <= uint144(-1)) {\\n            uint256 value = (uint256(self._x) << RESOLUTION) / other._x;\\n            require(value <= uint224(-1), 'FixedPoint::divuq: overflow');\\n            return uq112x112(uint224(value));\\n        }\\n\\n        uint256 result = FullMath.mulDiv(Q112, self._x, other._x);\\n        require(result <= uint224(-1), 'FixedPoint::divuq: overflow');\\n        return uq112x112(uint224(result));\\n    }\\n\\n    // returns a UQ112x112 which represents the ratio of the numerator to the denominator\\n    // can be lossy\\n    function fraction(uint256 numerator, uint256 denominator) internal pure returns (uq112x112 memory) {\\n        require(denominator > 0, 'FixedPoint::fraction: division by zero');\\n        if (numerator == 0) return FixedPoint.uq112x112(0);\\n\\n        if (numerator <= uint144(-1)) {\\n            uint256 result = (numerator << RESOLUTION) / denominator;\\n            require(result <= uint224(-1), 'FixedPoint::fraction: overflow');\\n            return uq112x112(uint224(result));\\n        } else {\\n            uint256 result = FullMath.mulDiv(numerator, Q112, denominator);\\n            require(result <= uint224(-1), 'FixedPoint::fraction: overflow');\\n            return uq112x112(uint224(result));\\n        }\\n    }\\n\\n    // take the reciprocal of a UQ112x112\\n    // reverts on overflow\\n    // lossy\\n    function reciprocal(uq112x112 memory self) internal pure returns (uq112x112 memory) {\\n        require(self._x != 0, 'FixedPoint::reciprocal: reciprocal of zero');\\n        require(self._x != 1, 'FixedPoint::reciprocal: overflow');\\n        return uq112x112(uint224(Q224 / self._x));\\n    }\\n\\n    // square root of a UQ112x112\\n    // lossy between 0/1 and 40 bits\\n    function sqrt(uq112x112 memory self) internal pure returns (uq112x112 memory) {\\n        if (self._x <= uint144(-1)) {\\n            return uq112x112(uint224(Babylonian.sqrt(uint256(self._x) << 112)));\\n        }\\n\\n        uint8 safeShiftBits = 255 - BitMath.mostSignificantBit(self._x);\\n        safeShiftBits -= safeShiftBits % 2;\\n        return uq112x112(uint224(Babylonian.sqrt(uint256(self._x) << safeShiftBits) << ((112 - safeShiftBits) / 2)));\\n    }\\n}\\n\",\r\n              \"FullMath.sol\": \"// SPDX-License-Identifier: CC-BY-4.0\\npragma solidity >=0.4.0;\\n\\n// taken from https://medium.com/coinmonks/math-in-solidity-part-3-percents-and-proportions-4db014e080b1\\n// license is CC-BY-4.0\\nlibrary FullMath {\\n    function fullMul(uint256 x, uint256 y) internal pure returns (uint256 l, uint256 h) {\\n        uint256 mm = mulmod(x, y, uint256(-1));\\n        l = x * y;\\n        h = mm - l;\\n        if (mm < l) h -= 1;\\n    }\\n\\n    function fullDiv(\\n        uint256 l,\\n        uint256 h,\\n        uint256 d\\n    ) private pure returns (uint256) {\\n        uint256 pow2 = d & -d;\\n        d /= pow2;\\n        l /= pow2;\\n        l += h * ((-pow2) / pow2 + 1);\\n        uint256 r = 1;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        r *= 2 - d * r;\\n        return l * r;\\n    }\\n\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 d\\n    ) internal pure returns (uint256) {\\n        (uint256 l, uint256 h) = fullMul(x, y);\\n\\n        uint256 mm = mulmod(x, y, d);\\n        if (mm > l) h -= 1;\\n        l -= mm;\\n\\n        if (h == 0) return l / d;\\n\\n        require(h < d, 'FullMath: FULLDIV_OVERFLOW');\\n        return fullDiv(l, h, d);\\n    }\\n}\\n\",\r\n              \"SafeERC20Namer.sol\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.5.0;\\n\\nimport './AddressStringUtil.sol';\\n\\n// produces token descriptors from inconsistent or absent ERC20 symbol implementations that can return string or bytes32\\n// this library will always produce a string symbol to represent the token\\nlibrary SafeERC20Namer {\\n    function bytes32ToString(bytes32 x) private pure returns (string memory) {\\n        bytes memory bytesString = new bytes(32);\\n        uint256 charCount = 0;\\n        for (uint256 j = 0; j < 32; j++) {\\n            bytes1 char = x[j];\\n            if (char != 0) {\\n                bytesString[charCount] = char;\\n                charCount++;\\n            }\\n        }\\n        bytes memory bytesStringTrimmed = new bytes(charCount);\\n        for (uint256 j = 0; j < charCount; j++) {\\n            bytesStringTrimmed[j] = bytesString[j];\\n        }\\n        return string(bytesStringTrimmed);\\n    }\\n\\n    // assumes the data is in position 2\\n    function parseStringData(bytes memory b) private pure returns (string memory) {\\n        uint256 charCount = 0;\\n        // first parse the charCount out of the data\\n        for (uint256 i = 32; i < 64; i++) {\\n            charCount <<= 8;\\n            charCount += uint8(b[i]);\\n        }\\n\\n        bytes memory bytesStringTrimmed = new bytes(charCount);\\n        for (uint256 i = 0; i < charCount; i++) {\\n            bytesStringTrimmed[i] = b[i + 64];\\n        }\\n\\n        return string(bytesStringTrimmed);\\n    }\\n\\n    // uses a heuristic to produce a token name from the address\\n    // the heuristic returns the full hex of the address string in upper case\\n    function addressToName(address token) private pure returns (string memory) {\\n        return AddressStringUtil.toAsciiString(token, 40);\\n    }\\n\\n    // uses a heuristic to produce a token symbol from the address\\n    // the heuristic returns the first 6 hex of the address string in upper case\\n    function addressToSymbol(address token) private pure returns (string memory) {\\n        return AddressStringUtil.toAsciiString(token, 6);\\n    }\\n\\n    // calls an external view token contract method that returns a symbol or name, and parses the output into a string\\n    function callAndParseStringReturn(address token, bytes4 selector) private view returns (string memory) {\\n        (bool success, bytes memory data) = token.staticcall(abi.encodeWithSelector(selector));\\n        // if not implemented, or returns empty data, return empty string\\n        if (!success || data.length == 0) {\\n            return '';\\n        }\\n        // bytes32 data always has length 32\\n        if (data.length == 32) {\\n            bytes32 decoded = abi.decode(data, (bytes32));\\n            return bytes32ToString(decoded);\\n        } else if (data.length > 64) {\\n            return abi.decode(data, (string));\\n        }\\n        return '';\\n    }\\n\\n    // attempts to extract the token symbol. if it does not implement symbol, returns a symbol derived from the address\\n    function tokenSymbol(address token) internal view returns (string memory) {\\n        // 0x95d89b41 = bytes4(keccak256(\\\"symbol()\\\"))\\n        string memory symbol = callAndParseStringReturn(token, 0x95d89b41);\\n        if (bytes(symbol).length == 0) {\\n            // fallback to 6 uppercase hex of address\\n            return addressToSymbol(token);\\n        }\\n        return symbol;\\n    }\\n\\n    // attempts to extract the token name. if it does not implement name, returns a name derived from the address\\n    function tokenName(address token) internal view returns (string memory) {\\n        // 0x06fdde03 = bytes4(keccak256(\\\"name()\\\"))\\n        string memory name = callAndParseStringReturn(token, 0x06fdde03);\\n        if (bytes(name).length == 0) {\\n            // fallback to full hex of address\\n            return addressToName(token);\\n        }\\n        return name;\\n    }\\n}\\n\",\r\n              \"TransferHelper.sol\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.6.0;\\n\\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            'TransferHelper::safeApprove: approve failed'\\n        );\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            'TransferHelper::safeTransfer: transfer failed'\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            'TransferHelper::transferFrom: transferFrom failed'\\n        );\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'TransferHelper::safeTransferETH: ETH transfer failed');\\n    }\\n}\\n\"\r\n            }\r\n          }\r\n        },\r\n        \"v2-core\": {\r\n          \"contracts\": {\r\n            \"interfaces\": {\r\n              \"IERC20.sol\": \"pragma solidity >=0.5.0;\\n\\ninterface IERC20 {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n}\\n\",\r\n              \"IUniswapV2Callee.sol\": \"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Callee {\\n    function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) external;\\n}\\n\",\r\n              \"IUniswapV2ERC20.sol\": \"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2ERC20 {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n}\\n\",\r\n              \"IUniswapV2Factory.sol\": \"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\",\r\n              \"IUniswapV2Pair.sol\": \"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\"\r\n            },\r\n            \"libraries\": {\r\n              \"Math.sol\": \"pragma solidity =0.5.16;\\n\\n// a library for performing various math operations\\n\\nlibrary Math {\\n    function min(uint x, uint y) internal pure returns (uint z) {\\n        z = x < y ? x : y;\\n    }\\n\\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\\n    function sqrt(uint y) internal pure returns (uint z) {\\n        if (y > 3) {\\n            z = y;\\n            uint x = y / 2 + 1;\\n            while (x < z) {\\n                z = x;\\n                x = (y / x + x) / 2;\\n            }\\n        } else if (y != 0) {\\n            z = 1;\\n        }\\n    }\\n}\\n\",\r\n              \"SafeMath.sol\": \"pragma solidity =0.5.16;\\n\\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\\n\\nlibrary SafeMath {\\n    function add(uint x, uint y) internal pure returns (uint z) {\\n        require((z = x + y) >= x, 'ds-math-add-overflow');\\n    }\\n\\n    function sub(uint x, uint y) internal pure returns (uint z) {\\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\\n    }\\n\\n    function mul(uint x, uint y) internal pure returns (uint z) {\\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\\n    }\\n}\\n\",\r\n              \"UQ112x112.sol\": \"pragma solidity =0.5.16;\\n\\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\\n\\n// range: [0, 2**112 - 1]\\n// resolution: 1 / 2**112\\n\\nlibrary UQ112x112 {\\n    uint224 constant Q112 = 2**112;\\n\\n    // encode a uint112 as a UQ112x112\\n    function encode(uint112 y) internal pure returns (uint224 z) {\\n        z = uint224(y) * Q112; // never overflows\\n    }\\n\\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\\n        z = x / uint224(y);\\n    }\\n}\\n\"\r\n            },\r\n            \"test\": {\r\n              \"ERC20.sol\": \"pragma solidity =0.5.16;\\n\\nimport '../UniswapV2ERC20.sol';\\n\\ncontract ERC20 is UniswapV2ERC20 {\\n    constructor(uint _totalSupply) public {\\n        _mint(msg.sender, _totalSupply);\\n    }\\n}\\n\"\r\n            },\r\n            \"UniswapV2ERC20.sol\": \"pragma solidity =0.5.16;\\n\\nimport './interfaces/IUniswapV2ERC20.sol';\\nimport './libraries/SafeMath.sol';\\n\\ncontract UniswapV2ERC20 is IUniswapV2ERC20 {\\n    using SafeMath for uint;\\n\\n    string public constant name = 'Uniswap V2';\\n    string public constant symbol = 'UNI-V2';\\n    uint8 public constant decimals = 18;\\n    uint  public totalSupply;\\n    mapping(address => uint) public balanceOf;\\n    mapping(address => mapping(address => uint)) public allowance;\\n\\n    bytes32 public DOMAIN_SEPARATOR;\\n    // keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\\n    mapping(address => uint) public nonces;\\n\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    constructor() public {\\n        uint chainId;\\n        assembly {\\n            chainId := chainid\\n        }\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\\n                keccak256(bytes(name)),\\n                keccak256(bytes('1')),\\n                chainId,\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    function _mint(address to, uint value) internal {\\n        totalSupply = totalSupply.add(value);\\n        balanceOf[to] = balanceOf[to].add(value);\\n        emit Transfer(address(0), to, value);\\n    }\\n\\n    function _burn(address from, uint value) internal {\\n        balanceOf[from] = balanceOf[from].sub(value);\\n        totalSupply = totalSupply.sub(value);\\n        emit Transfer(from, address(0), value);\\n    }\\n\\n    function _approve(address owner, address spender, uint value) private {\\n        allowance[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function _transfer(address from, address to, uint value) private {\\n        balanceOf[from] = balanceOf[from].sub(value);\\n        balanceOf[to] = balanceOf[to].add(value);\\n        emit Transfer(from, to, value);\\n    }\\n\\n    function approve(address spender, uint value) external returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    function transfer(address to, uint value) external returns (bool) {\\n        _transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    function transferFrom(address from, address to, uint value) external returns (bool) {\\n        if (allowance[from][msg.sender] != uint(-1)) {\\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\\n        }\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\\n        require(deadline >= block.timestamp, 'UniswapV2: EXPIRED');\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                '\\\\x19\\\\x01',\\n                DOMAIN_SEPARATOR,\\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\n            )\\n        );\\n        address recoveredAddress = ecrecover(digest, v, r, s);\\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE');\\n        _approve(owner, spender, value);\\n    }\\n}\\n\",\r\n            \"UniswapV2Factory.sol\": \"pragma solidity =0.5.16;\\n\\nimport './interfaces/IUniswapV2Factory.sol';\\nimport './UniswapV2Pair.sol';\\n\\ncontract UniswapV2Factory is IUniswapV2Factory {\\n    address public feeTo;\\n    address public feeToSetter;\\n\\n    mapping(address => mapping(address => address)) public getPair;\\n    address[] public allPairs;\\n\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    constructor(address _feeToSetter) public {\\n        feeToSetter = _feeToSetter;\\n    }\\n\\n    function allPairsLength() external view returns (uint) {\\n        return allPairs.length;\\n    }\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\\n        require(tokenA != tokenB, 'UniswapV2: IDENTICAL_ADDRESSES');\\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\\n        require(token0 != address(0), 'UniswapV2: ZERO_ADDRESS');\\n        require(getPair[token0][token1] == address(0), 'UniswapV2: PAIR_EXISTS'); // single check is sufficient\\n        bytes memory bytecode = type(UniswapV2Pair).creationCode;\\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\\n        assembly {\\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\\n        }\\n        IUniswapV2Pair(pair).initialize(token0, token1);\\n        getPair[token0][token1] = pair;\\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\\n        allPairs.push(pair);\\n        emit PairCreated(token0, token1, pair, allPairs.length);\\n    }\\n\\n    function setFeeTo(address _feeTo) external {\\n        require(msg.sender == feeToSetter, 'UniswapV2: FORBIDDEN');\\n        feeTo = _feeTo;\\n    }\\n\\n    function setFeeToSetter(address _feeToSetter) external {\\n        require(msg.sender == feeToSetter, 'UniswapV2: FORBIDDEN');\\n        feeToSetter = _feeToSetter;\\n    }\\n}\\n\",\r\n            \"UniswapV2Pair.sol\": \"pragma solidity =0.5.16;\\n\\nimport './interfaces/IUniswapV2Pair.sol';\\nimport './UniswapV2ERC20.sol';\\nimport './libraries/Math.sol';\\nimport './libraries/UQ112x112.sol';\\nimport './interfaces/IERC20.sol';\\nimport './interfaces/IUniswapV2Factory.sol';\\nimport './interfaces/IUniswapV2Callee.sol';\\n\\ncontract UniswapV2Pair is IUniswapV2Pair, UniswapV2ERC20 {\\n    using SafeMath  for uint;\\n    using UQ112x112 for uint224;\\n\\n    uint public constant MINIMUM_LIQUIDITY = 10**3;\\n    bytes4 private constant SELECTOR = bytes4(keccak256(bytes('transfer(address,uint256)')));\\n\\n    address public factory;\\n    address public token0;\\n    address public token1;\\n\\n    uint112 private reserve0;           // uses single storage slot, accessible via getReserves\\n    uint112 private reserve1;           // uses single storage slot, accessible via getReserves\\n    uint32  private blockTimestampLast; // uses single storage slot, accessible via getReserves\\n\\n    uint public price0CumulativeLast;\\n    uint public price1CumulativeLast;\\n    uint public kLast; // reserve0 * reserve1, as of immediately after the most recent liquidity event\\n\\n    uint private unlocked = 1;\\n    modifier lock() {\\n        require(unlocked == 1, 'UniswapV2: LOCKED');\\n        unlocked = 0;\\n        _;\\n        unlocked = 1;\\n    }\\n\\n    function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {\\n        _reserve0 = reserve0;\\n        _reserve1 = reserve1;\\n        _blockTimestampLast = blockTimestampLast;\\n    }\\n\\n    function _safeTransfer(address token, address to, uint value) private {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'UniswapV2: TRANSFER_FAILED');\\n    }\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    constructor() public {\\n        factory = msg.sender;\\n    }\\n\\n    // called once by the factory at time of deployment\\n    function initialize(address _token0, address _token1) external {\\n        require(msg.sender == factory, 'UniswapV2: FORBIDDEN'); // sufficient check\\n        token0 = _token0;\\n        token1 = _token1;\\n    }\\n\\n    // update reserves and, on the first call per block, price accumulators\\n    function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\\n        require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');\\n        uint32 blockTimestamp = uint32(block.timestamp % 2**32);\\n        uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\\n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\\n            // * never overflows, and + overflow is desired\\n            price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\\n            price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\\n        }\\n        reserve0 = uint112(balance0);\\n        reserve1 = uint112(balance1);\\n        blockTimestampLast = blockTimestamp;\\n        emit Sync(reserve0, reserve1);\\n    }\\n\\n    // if fee is on, mint liquidity equivalent to 1/6th of the growth in sqrt(k)\\n    function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\\n        address feeTo = IUniswapV2Factory(factory).feeTo();\\n        feeOn = feeTo != address(0);\\n        uint _kLast = kLast; // gas savings\\n        if (feeOn) {\\n            if (_kLast != 0) {\\n                uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\\n                uint rootKLast = Math.sqrt(_kLast);\\n                if (rootK > rootKLast) {\\n                    uint numerator = totalSupply.mul(rootK.sub(rootKLast));\\n                    uint denominator = rootK.mul(5).add(rootKLast);\\n                    uint liquidity = numerator / denominator;\\n                    if (liquidity > 0) _mint(feeTo, liquidity);\\n                }\\n            }\\n        } else if (_kLast != 0) {\\n            kLast = 0;\\n        }\\n    }\\n\\n    // this low-level function should be called from a contract which performs important safety checks\\n    function mint(address to) external lock returns (uint liquidity) {\\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\\n        uint balance0 = IERC20(token0).balanceOf(address(this));\\n        uint balance1 = IERC20(token1).balanceOf(address(this));\\n        uint amount0 = balance0.sub(_reserve0);\\n        uint amount1 = balance1.sub(_reserve1);\\n\\n        bool feeOn = _mintFee(_reserve0, _reserve1);\\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\\n        if (_totalSupply == 0) {\\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\\n           _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\\n        } else {\\n            liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\\n        }\\n        require(liquidity > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');\\n        _mint(to, liquidity);\\n\\n        _update(balance0, balance1, _reserve0, _reserve1);\\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\\n        emit Mint(msg.sender, amount0, amount1);\\n    }\\n\\n    // this low-level function should be called from a contract which performs important safety checks\\n    function burn(address to) external lock returns (uint amount0, uint amount1) {\\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\\n        address _token0 = token0;                                // gas savings\\n        address _token1 = token1;                                // gas savings\\n        uint balance0 = IERC20(_token0).balanceOf(address(this));\\n        uint balance1 = IERC20(_token1).balanceOf(address(this));\\n        uint liquidity = balanceOf[address(this)];\\n\\n        bool feeOn = _mintFee(_reserve0, _reserve1);\\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\\n        amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\\n        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\\n        require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\\n        _burn(address(this), liquidity);\\n        _safeTransfer(_token0, to, amount0);\\n        _safeTransfer(_token1, to, amount1);\\n        balance0 = IERC20(_token0).balanceOf(address(this));\\n        balance1 = IERC20(_token1).balanceOf(address(this));\\n\\n        _update(balance0, balance1, _reserve0, _reserve1);\\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\\n        emit Burn(msg.sender, amount0, amount1, to);\\n    }\\n\\n    // this low-level function should be called from a contract which performs important safety checks\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\\n        require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');\\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\\n        require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY');\\n\\n        uint balance0;\\n        uint balance1;\\n        { // scope for _token{0,1}, avoids stack too deep errors\\n        address _token0 = token0;\\n        address _token1 = token1;\\n        require(to != _token0 && to != _token1, 'UniswapV2: INVALID_TO');\\n        if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\\n        if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\\n        if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\\n        balance0 = IERC20(_token0).balanceOf(address(this));\\n        balance1 = IERC20(_token1).balanceOf(address(this));\\n        }\\n        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\\n        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\\n        require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\\n        { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\\n        uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\\n        uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3));\\n        require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(1000**2), 'UniswapV2: K');\\n        }\\n\\n        _update(balance0, balance1, _reserve0, _reserve1);\\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\\n    }\\n\\n    // force balances to match reserves\\n    function skim(address to) external lock {\\n        address _token0 = token0; // gas savings\\n        address _token1 = token1; // gas savings\\n        _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0));\\n        _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1));\\n    }\\n\\n    // force reserves to match balances\\n    function sync() external lock {\\n        _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1);\\n    }\\n}\\n\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"}}},"connections":{},"forwards":{"inputs":{"2a182932-ca45-4c09-8753-a9a4f355c219":{"2b240e9c-a41b-4372-a195-dfd8c853fbad":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}}}},"outputs":{"0cf791d5-e2f9-456e-b8df-40c776f03f0f":{"2b240e9c-a41b-4372-a195-dfd8c853fbad":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{}}}}}}},"iconId":"11e997ab-33d0-473a-aa56-1e2fe4d30d5c","attributes":{"locked":true}},"0eb7a913-b7a6-4d90-ab67-1f836959ed97":{"name":"blockchain/ethereum/Uniswap/v2/Periphery source code instrumenter","interface":{"inputs":{"83b88c0c-d67b-42b4-982a-acd8c0779455":{"type":"string","name":"factory init hash","description":""},"c417cbe1-6e5c-4f6a-9bd9-e9329f6bae7f":{"type":"{string: any}","name":"v2-periphery source","description":"Structured source of Uniswap v2 periphery"}},"outputs":{"3d2487c4-3842-460a-aa49-c5afb7502621":{"type":"typeof `tree` of `set instrumented contract`","name":"set instrumented contract-tree"}}},"implementations":{"cranq":{"nodes":{"c746adec-1911-43a9-930e-738e63902fcc":{"coordinates":[117.80000000000001,13],"name":"replace placeholder","prototype":"04db51a6-0278-4937-9483-7406f96de641","params":{"20fa9606-aa5f-48b5-af3c-3aaa9e38ebf4":"\"###\"","6ee3d9cc-c99d-41d8-a6cf-d1b100b64aa2":"\"###\""}},"d0a321f3-15f0-4768-8678-aa455e236214":{"coordinates":[-64.20000000000005,-33],"name":"get contract to instrument","prototype":"d8608f30-9132-4d0f-992e-9d66f6636256","params":{}},"e91a57e9-05df-4e1b-bc38-97c7689a41b2":{"coordinates":[-46.200000000000045,-152],"name":"prepare params","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"PLACEHOLDER_FOR_FACTORY_INIT_HASH\"]"}},"4dbfa54e-c049-4c12-8463-c82cab55cf71":{"coordinates":[-220.20000000000005,166],"name":"path  to contract to instrument","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f","params":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"[\n  \"v2-periphery\", \n  \"contracts\",\n  \"libraries\",\n  \"UniswapV2Library.sol\"\n]"}},"e3ffaba8-df0f-4868-ac53-525186a12841":{"coordinates":[295.8,77],"name":"set instrumented contract","prototype":"8f655b1d-c6be-4864-a92c-081e62f12403"}},"connections":{"d0a321f3-15f0-4768-8678-aa455e236214":{"b6722d08-460c-465b-a9f1-d1f843500424":{"c746adec-1911-43a9-930e-738e63902fcc":{"07538bcd-7376-4aec-ad93-b4b368ae919c":{}}}},"e91a57e9-05df-4e1b-bc38-97c7689a41b2":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"c746adec-1911-43a9-930e-738e63902fcc":{"06531082-3e2d-45ab-ba18-527917d0ef5e":{}}}},"4dbfa54e-c049-4c12-8463-c82cab55cf71":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{"d0a321f3-15f0-4768-8678-aa455e236214":{"927e6b17-97e0-44de-887f-57204b7a1f9b":{}},"e3ffaba8-df0f-4868-ac53-525186a12841":{"bae8488b-e628-456c-8ba4-df9b28a52d3e":{}}}},"c746adec-1911-43a9-930e-738e63902fcc":{"949d328e-fa91-41e4-8929-d3cd7a8d4cfc":{"e3ffaba8-df0f-4868-ac53-525186a12841":{"5dca309f-984d-4c27-8402-d2eedf77f5aa":{}}}}},"forwards":{"inputs":{"83b88c0c-d67b-42b4-982a-acd8c0779455":{"e91a57e9-05df-4e1b-bc38-97c7689a41b2":{"PLACEHOLDER_FOR_FACTORY_INIT_HASH":{}},"4dbfa54e-c049-4c12-8463-c82cab55cf71":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}}},"c417cbe1-6e5c-4f6a-9bd9-e9329f6bae7f":{"d0a321f3-15f0-4768-8678-aa455e236214":{"cf2ad35e-cfac-4c59-ab25-30a4dd08111f":{}},"e3ffaba8-df0f-4868-ac53-525186a12841":{"2041b83b-940c-4ef5-89e6-07eb74a42daf":{}}}},"outputs":{"3d2487c4-3842-460a-aa49-c5afb7502621":{"e3ffaba8-df0f-4868-ac53-525186a12841":{"b73a3075-cfcf-4981-b23f-95d3b18de8a6":{}}}}}}},"iconId":"7341443a-8a0a-4a83-b302-effdb497c0f3","attributes":{"internal":true}},"04db51a6-0278-4937-9483-7406f96de641":{"implementations":{"cranq":{"nodes":{"140d4de0-65a6-403d-9e3f-661f9bad8032":{"coordinates":[144,-13],"name":"fill template","prototype":"7b8de482-ede2-44b6-83ee-f04e3ddb9513"},"17e43d61-f38c-436e-bbbd-041f16ba7563":{"coordinates":[-9,45],"name":"syncer","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"template\",\"params\",\"token start\",\"token end\"]"}},"df09be9e-33dd-43f5-8f43-022732a1582d":{"coordinates":[-157,16],"name":"forward","prototype":"761a7cff-0ef3-4630-88ed-2e644a17ab3b"}},"connections":{"17e43d61-f38c-436e-bbbd-041f16ba7563":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"140d4de0-65a6-403d-9e3f-661f9bad8032":{"e327497c-6228-471d-ba94-955c145ccfdc":{}}}},"df09be9e-33dd-43f5-8f43-022732a1582d":{"8ee51005-e876-4db5-88b5-c9e148feba3f":{"17e43d61-f38c-436e-bbbd-041f16ba7563":{"template":{}}},"34f942cc-96a7-4278-a931-d9194e89dfe1":{"17e43d61-f38c-436e-bbbd-041f16ba7563":{"params":{}}},"da773107-7a7f-4fc2-b67d-bb9b76e361eb":{"17e43d61-f38c-436e-bbbd-041f16ba7563":{"token start":{}}},"a5a46e47-dacb-477b-b823-398e570fe259":{"17e43d61-f38c-436e-bbbd-041f16ba7563":{"token end":{}}}}},"forwards":{"inputs":{"07538bcd-7376-4aec-ad93-b4b368ae919c":{"df09be9e-33dd-43f5-8f43-022732a1582d":{"b9f6ade5-9bdd-46ef-99d2-616f1cb608c4":{}}},"06531082-3e2d-45ab-ba18-527917d0ef5e":{"df09be9e-33dd-43f5-8f43-022732a1582d":{"f1aff635-6110-419c-81b3-ea2bd8b5f791":{}}},"20fa9606-aa5f-48b5-af3c-3aaa9e38ebf4":{"df09be9e-33dd-43f5-8f43-022732a1582d":{"cbfbd020-ce7f-4fb5-aa15-d63e33d10941":{}}},"6ee3d9cc-c99d-41d8-a6cf-d1b100b64aa2":{"df09be9e-33dd-43f5-8f43-022732a1582d":{"4fcb135a-9c6c-497b-a96e-526c4727a64a":{}}}},"outputs":{"949d328e-fa91-41e4-8929-d3cd7a8d4cfc":{"140d4de0-65a6-403d-9e3f-661f9bad8032":{"ae4b344c-7e24-434a-a9ad-d7f5cc260d09":{}}},"b517f1ce-8441-406b-a71b-5741bd38d41f":{"140d4de0-65a6-403d-9e3f-661f9bad8032":{"45c8e624-b725-40b6-8155-2ed9d980f540":{}}}}}}},"interface":{"inputs":{"07538bcd-7376-4aec-ad93-b4b368ae919c":{"type":"string","name":"template","description":"Receives the template string to replace parameters in.\n\nExample:\n\"Hello {#subject#}!\""},"06531082-3e2d-45ab-ba18-527917d0ef5e":{"type":"{string: any}","name":"params","description":"Receives the parameters to replace in the template.\n\nExample: \n{\"subject\":\"world\"}"},"20fa9606-aa5f-48b5-af3c-3aaa9e38ebf4":{"type":"string","name":"token start","description":"Receives the string that marks the start of the parameter placeholder (token) within the template.\n\nExample:\n\"{#\""},"6ee3d9cc-c99d-41d8-a6cf-d1b100b64aa2":{"type":"string","name":"token end","description":"Receives the string that marks the end of the parameter placholder (token) within the template.\n\nExample:\n\"#}\""}},"outputs":{"949d328e-fa91-41e4-8929-d3cd7a8d4cfc":{"type":"typeof `filled` of `fill template`","name":"filled","description":"Sends the template string with replaced parameters.\n\nExample:\n\"Hello world!\""},"b517f1ce-8441-406b-a71b-5741bd38d41f":{"type":"typeof `error` of `fill template`","name":"error","description":"Sends error in case any occurs during operation.\n\nExample: \n{\"error\": \"Some error message\"}"}}},"name":"string/Custom template filler","description":"Substitutes parameters into a template. Parameter placeholder's (token) start/end can be customized.\n\nExample:\n\n1. \"Hello {#subject#}!\"@0 is received via `template`\n2. {\"subject\":\"world\"}@0 is received via params\n3. \"{#\"@0 is received via `token start`\n4. \"#}\"@0 is received via `token end`\n5. \"Hello world!\"@0 is sent via `filled`"},"7b8de482-ede2-44b6-83ee-f04e3ddb9513":{"implementations":{"es6":{"inputFunctions":{"e327497c-6228-471d-ba94-955c145ccfdc":"// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nconst { \n  template,\n  params,\n  [\"token start\"]: tokenStart, \n  [\"token end\"]: tokenEnd\n} = data;\ntry {\n  const re = new RegExp(`${escapeRegExp(tokenStart)}((?:.)*?)${escapeRegExp(tokenEnd)}`, \"g\");\n  \n  outputs.filled(\n    template.replace(\n      re,\n      (match, key) => {\n        const param = params[key];\n        return param === undefined ? match : param;\n      }\n    ),\n    tag);\n} catch(error) {\n  outputs.error({error: error.toString()}, tag);\n}\n"}}},"interface":{"inputs":{"e327497c-6228-471d-ba94-955c145ccfdc":{"type":"{\n\"template\": string,\n\"params\": {string: any},\n\"token start\": string,\n\"token end\": string\n}","name":"params"}},"outputs":{"ae4b344c-7e24-434a-a9ad-d7f5cc260d09":{"type":"string","name":"filled"},"45c8e624-b725-40b6-8155-2ed9d980f540":{"type":"{\"error\": string}","name":"error"}}},"name":"string/Custom template filler/Internal","description":"See `string/Custom template filler`","attributes":{"internal":true,"locked":true}},"761a7cff-0ef3-4630-88ed-2e644a17ab3b":{"description":"Forwards all 4 received signals in the order of the names of the ports.\n\nUsed for two purposes:\n* Ensuring that any of a node's inputs may receive signals or be set as parameter.\n* Ensuring the order in which signals are sent.\n\nFor examples, see `flow/Forwarder (double)`.","interface":{"inputs":{"b9f6ade5-9bdd-46ef-99d2-616f1cb608c4":{"type":"any","name":"1","description":"Receives signal or takes parameter to be sent out first."},"f1aff635-6110-419c-81b3-ea2bd8b5f791":{"type":"any","name":"2","description":"Receives signal or takes parameter to be sent out second."},"cbfbd020-ce7f-4fb5-aa15-d63e33d10941":{"type":"any","name":"3","description":"Receives signal or takes parameter to be sent out third."},"4fcb135a-9c6c-497b-a96e-526c4727a64a":{"type":"any","name":"4","description":"Receives signal or takes parameter to be sent out fourth."}},"outputs":{"8ee51005-e876-4db5-88b5-c9e148feba3f":{"type":"typeof `1`","name":"1","description":"Forwards signal received via `1` (input)."},"34f942cc-96a7-4278-a931-d9194e89dfe1":{"type":"typeof `2`","name":"2","description":"Forwards signal received via `2` (input). Does not send before `1` (output)."},"da773107-7a7f-4fc2-b67d-bb9b76e361eb":{"type":"typeof `3`","name":"3","description":"Forwards signal received via `3` (input). Does not send before `2` (output)."},"a5a46e47-dacb-477b-b823-398e570fe259":{"type":"typeof `4`","name":"4","description":"Forwards signal received via `4` (input). Does not send before `3` (output)."}}},"implementations":{"cranq":{"nodes":{"2dd51e88-bca8-4773-a20a-afe0ef2b0687":{"coordinates":[0,0],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"1\",\"2\",\"3\",\"4\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync inputs"},"1119aa5e-b75d-489f-ad48-567d16c0d9ae":{"coordinates":[0,0],"description":"","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"1\",\"2\",\"3\",\"4\"]"},"prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","name":"restore in order"}},"connections":{"2dd51e88-bca8-4773-a20a-afe0ef2b0687":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"1119aa5e-b75d-489f-ad48-567d16c0d9ae":{"6ad86184-6890-4323-8021-3496a682c98e":{"description":""}}}}},"forwards":{"inputs":{"b9f6ade5-9bdd-46ef-99d2-616f1cb608c4":{"2dd51e88-bca8-4773-a20a-afe0ef2b0687":{"1":{}}},"f1aff635-6110-419c-81b3-ea2bd8b5f791":{"2dd51e88-bca8-4773-a20a-afe0ef2b0687":{"2":{}}},"cbfbd020-ce7f-4fb5-aa15-d63e33d10941":{"2dd51e88-bca8-4773-a20a-afe0ef2b0687":{"3":{}}},"4fcb135a-9c6c-497b-a96e-526c4727a64a":{"2dd51e88-bca8-4773-a20a-afe0ef2b0687":{"4":{}}}},"outputs":{"8ee51005-e876-4db5-88b5-c9e148feba3f":{"1119aa5e-b75d-489f-ad48-567d16c0d9ae":{"1":{}}},"34f942cc-96a7-4278-a931-d9194e89dfe1":{"1119aa5e-b75d-489f-ad48-567d16c0d9ae":{"2":{}}},"da773107-7a7f-4fc2-b67d-bb9b76e361eb":{"1119aa5e-b75d-489f-ad48-567d16c0d9ae":{"3":{}}},"a5a46e47-dacb-477b-b823-398e570fe259":{"1119aa5e-b75d-489f-ad48-567d16c0d9ae":{"4":{}}}}}}},"name":"flow/Forwarder (quadruple)","keywords":{"order":null,"signal order":null,"parameter to signal":null},"iconId":"7341443a-8a0a-4a83-b302-effdb497c0f3","attributes":{"locked":true}},"d8608f30-9132-4d0f-992e-9d66f6636256":{"description":"Retrieves the node at the specified path of the tree.\n\nExample:\n1. {\"foo\": {\"bar\": \"baz\"}}@0 is received via `tree`\n2. [\"foo\", \"bar\"]@0 is received via `path`\n3. \"baz\"@0 is sent via `node`\n","interface":{"inputs":{"cf2ad35e-cfac-4c59-ab25-30a4dd08111f":{"type":"(any[] or {string:any})","name":"tree","description":"Receives the tree the node is extracted from"},"927e6b17-97e0-44de-887f-57204b7a1f9b":{"type":"(string or number)[]","name":"path","description":"Receives the path segments in an array"}},"outputs":{"b6722d08-460c-465b-a9f1-d1f843500424":{"type":"any","name":"node","description":"Sends the node at the specified path"},"e97caed4-5898-4f86-911d-8e31acb2617b":{"description":"Sends the `path` if it was not found","type":"(string or number)[]","name":"not found"}}},"implementations":{"cranq":{"nodes":{"ef429890-b8b0-45f5-9188-b626aa5275eb":{"coordinates":[-48,48],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"tree\",\"path\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync tree & path"},"796f16be-c947-444c-98a5-4046fb7b995b":{"coordinates":[25,-63],"description":"","params":{},"prototype":"75c75287-5053-43b3-bf03-5ce52c947695","name":"get node"}},"connections":{"ef429890-b8b0-45f5-9188-b626aa5275eb":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"796f16be-c947-444c-98a5-4046fb7b995b":{"acf1b446-a89f-4af0-8865-174b1dcbb51f":{"description":""}}}}},"forwards":{"inputs":{"cf2ad35e-cfac-4c59-ab25-30a4dd08111f":{"ef429890-b8b0-45f5-9188-b626aa5275eb":{"tree":{}}},"927e6b17-97e0-44de-887f-57204b7a1f9b":{"ef429890-b8b0-45f5-9188-b626aa5275eb":{"path":{}}}},"outputs":{"b6722d08-460c-465b-a9f1-d1f843500424":{"796f16be-c947-444c-98a5-4046fb7b995b":{"55eb513c-0913-498a-b11c-db8d9d0d41bf":{}}},"e97caed4-5898-4f86-911d-8e31acb2617b":{"796f16be-c947-444c-98a5-4046fb7b995b":{"0b5f38f9-0f97-4d38-8cfa-92d2b444a159":{}}}}}}},"name":"data/tree/Node getter","keywords":{"picker":null,"get":null,"lookup":null},"iconId":"88cb21a8-d088-476e-8a3a-fb62c6a5fd58","attributes":{"locked":true}},"75c75287-5053-43b3-bf03-5ce52c947695":{"description":"","interface":{"inputs":{"acf1b446-a89f-4af0-8865-174b1dcbb51f":{"type":"{\"tree\":({string:any} or any[]),\"path\":(string or number)[]}","name":"tree & path"}},"outputs":{"55eb513c-0913-498a-b11c-db8d9d0d41bf":{"type":"any","name":"node"},"0b5f38f9-0f97-4d38-8cfa-92d2b444a159":{"description":"","type":"(string or number)[]","name":"not found"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"acf1b446-a89f-4af0-8865-174b1dcbb51f":"const {tree, path} = data;\nlet node = tree;\nfor (let i=0, length=path.length; i<length; i++) {\n  if (node instanceof Object) {\n    node = node[path[i]];\n  } else {\n    node = undefined;\n    break;\n  }\n}\nif(node === undefined) {\n  outputs[\"not found\"](path, tag)\n}\nelse {\n  outputs.node(node, tag);\n}"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"acf1b446-a89f-4af0-8865-174b1dcbb51f":"const {tree, path} = data;\nlet node = tree;\nfor (let i=0, length=path.length; i<length; i++) {\n  if (node instanceof Object) {\n    node = node[path[i]];\n  } else {\n    node = undefined;\n    break;\n  }\n}\nif(node === undefined) {\n  outputs[\"not found\"](path, tag)\n}\nelse {\n  outputs.node(node, tag);\n}"}}},"name":"data/tree/Node getter/Internal","attributes":{"internal":true,"locked":true}},"8f655b1d-c6be-4864-a92c-081e62f12403":{"name":"data/tree/Node setter","description":"Immutably stores the specified node on the specified path of the tree.","interface":{"inputs":{"2041b83b-940c-4ef5-89e6-07eb74a42daf":{"type":"(any[] or {string:any})","name":"tree","description":"Tree data structure in which to store a node."},"bae8488b-e628-456c-8ba4-df9b28a52d3e":{"type":"(string or number)[]","name":"path","description":"Specifies the location of the node."},"5dca309f-984d-4c27-8402-d2eedf77f5aa":{"type":"any","name":"node","description":"The node to be stored in the tree."}},"outputs":{"b73a3075-cfcf-4981-b23f-95d3b18de8a6":{"type":"typeof `tree`","name":"tree"}}},"implementations":{"cranq":{"nodes":{"f80981ba-b58c-40ac-bcf6-f67e853b35e6":{"coordinates":[36.5,-64],"name":"set node","prototype":"b387d94d-eb3b-4dcf-ab4c-7340f38cf26e","params":{}},"8112d4da-ee18-47d0-a80b-6180f7a0445c":{"coordinates":[-18.5,71],"name":"sync inputs","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"tree\", \"path\", \"node\"]"}}},"connections":{"8112d4da-ee18-47d0-a80b-6180f7a0445c":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"f80981ba-b58c-40ac-bcf6-f67e853b35e6":{"a3746e5d-5a79-4943-8318-db69cd8f92fa":{}}}}},"forwards":{"inputs":{"2041b83b-940c-4ef5-89e6-07eb74a42daf":{"8112d4da-ee18-47d0-a80b-6180f7a0445c":{"tree":{}}},"bae8488b-e628-456c-8ba4-df9b28a52d3e":{"8112d4da-ee18-47d0-a80b-6180f7a0445c":{"path":{}}},"5dca309f-984d-4c27-8402-d2eedf77f5aa":{"8112d4da-ee18-47d0-a80b-6180f7a0445c":{"node":{}}}},"outputs":{"b73a3075-cfcf-4981-b23f-95d3b18de8a6":{"f80981ba-b58c-40ac-bcf6-f67e853b35e6":{"77ffd279-c6a6-4084-8d00-158ce6d72fb4":{}}}}}}},"iconId":"89f4fde2-5391-4f4c-b55a-55ada280f89c","attributes":{"locked":true}},"b387d94d-eb3b-4dcf-ab4c-7340f38cf26e":{"implementations":{"es6":{"inputFunctions":{"a3746e5d-5a79-4943-8318-db69cd8f92fa":"const {tree, path, node} = data;\nlet source = tree;\nlet dest = {...tree};\nconst result = dest;\nfor (let i = 0, count = path.length - 1; i < count; i++) {\n  const key = path[i];\n  const child = source !== undefined\n    ? source[key]\n    : undefined;\n  if (child instanceof Array)\n    dest[key] = [...child];\n  else if (child instanceof Object)\n    dest[key] = {...child};\n  else {\n    const nextKey = path[i + 1];\n    if (typeof nextKey === \"number\")\n      dest[key] = [];\n    else if (typeof nextKey === \"string\")\n      dest[key] = {};\n  }\n  source = child;\n  dest = dest[key];\n}\nconst key = path[path.length - 1];\ndest[key] = node;\noutputs.tree(result, tag);"}},"es6-node":{"inputFunctions":{"a3746e5d-5a79-4943-8318-db69cd8f92fa":"const {tree, path, node} = data;\nlet source = tree;\nlet dest = {...tree};\nconst result = dest;\nfor (let i = 0, count = path.length - 1; i < count; i++) {\n  const key = path[i];\n  const child = source !== undefined\n    ? source[key]\n    : undefined;\n  if (child instanceof Array)\n    dest[key] = [...child];\n  else if (child instanceof Object)\n    dest[key] = {...child};\n  else {\n    const nextKey = path[i + 1];\n    if (typeof nextKey === \"number\")\n      dest[key] = [];\n    else if (typeof nextKey === \"string\")\n      dest[key] = {};\n  }\n  source = child;\n  dest = dest[key];\n}\nconst key = path[path.length - 1];\ndest[key] = node;\noutputs.tree(result, tag);"}}},"interface":{"inputs":{"a3746e5d-5a79-4943-8318-db69cd8f92fa":{"type":"{\n\"tree\": (any[] or {string: any}),\n\"path\": (string or number)[],\n\"node\": any\n}","name":"tree & path & node"}},"outputs":{"77ffd279-c6a6-4084-8d00-158ce6d72fb4":{"type":"any","name":"tree"}}},"name":"data/tree/Node setter (internal)","attributes":{"internal":true,"locked":true}},"8b0df39b-8337-4107-8211-565d56429b0f":{"name":"blockchain/ethereum/Contracts compiler","interface":{"inputs":{"7654e398-a401-4115-98b8-c2b8eba66ed4":{"type":"any","name":"contracts"},"60fd9fa4-1462-4c91-915b-11b325c0d479":{"type":"any","name":"output list","description":"The selected files from the contracts dictionary that are should be passed to the SOlidity compiler as 'root' sources. The other entries in 'contracts' should contain the dependencies."},"eb554de7-b398-413f-8ff0-99dd34a7580a":{"type":"any","name":"compile settings"}},"outputs":{"58f95201-dc73-469a-8503-ce955c514032":{"type":"typeof `compiled contracts` of `compile contracts`","name":"compiled contracts"},"d00232d5-3801-4820-92ed-43ae75ccb626":{"type":"any","name":"error"}}},"implementations":{"cranq":{"nodes":{"cd1268c4-7b29-45a3-b095-a623fe3f27ae":{"coordinates":[150,-8],"name":"compile contracts","prototype":"3cf6f504-22da-4d9e-aeb8-3e3547d397c8"},"0624083d-5d20-4068-bcc5-510b4cc6c711":{"coordinates":[-35.5,-17],"name":"syncer","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"contracts\", \"outputList\", \"compileSettings\"]"}}},"connections":{"0624083d-5d20-4068-bcc5-510b4cc6c711":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"cd1268c4-7b29-45a3-b095-a623fe3f27ae":{"3a55b8dd-6eec-44c8-acae-4b1e60f90d7a":{}}}}},"forwards":{"inputs":{"7654e398-a401-4115-98b8-c2b8eba66ed4":{"0624083d-5d20-4068-bcc5-510b4cc6c711":{"contracts":{}}},"eb554de7-b398-413f-8ff0-99dd34a7580a":{"0624083d-5d20-4068-bcc5-510b4cc6c711":{"compileSettings":{}}},"60fd9fa4-1462-4c91-915b-11b325c0d479":{"0624083d-5d20-4068-bcc5-510b4cc6c711":{"outputList":{}}}},"outputs":{"58f95201-dc73-469a-8503-ce955c514032":{"cd1268c4-7b29-45a3-b095-a623fe3f27ae":{"6e0ac013-ee3c-4e0e-8b72-8eeb2419795c":{}}},"d00232d5-3801-4820-92ed-43ae75ccb626":{"cd1268c4-7b29-45a3-b095-a623fe3f27ae":{"b73438f2-808b-4980-9902-c63866012a5d":{}}}}}}},"original":"ee6685bc-3c36-41fa-941e-ef77c217e998","description":"Compiles specified Solidity contracts using the specified compiler settings and outputs the selected compiled contract data","attributes":{"locked":true}},"3cf6f504-22da-4d9e-aeb8-3e3547d397c8":{"implementations":{"es6-node":{"inputFunctions":{"3a55b8dd-6eec-44c8-acae-4b1e60f90d7a":"\nconst solc = require('solc');\n\nconst {contracts, outputList, compileSettings} = data;\nconst {includeRoots, solidityVersion, compileOptions} = compileSettings;\nconst rootPrefix = \"root_file__\";\n\n//  Create input(s) for the compiler\n//  Note: The keys of the dictionary MUST NOT match the file name of any dependency because the compiler fails.\n//    (It will insert all compiled dependencies to the same level under the \"contracts\" note using its filename as a key.)\nconst sources = Object.fromEntries(\n  outputList.map((item)=>{\n    const {file} = splitPath(item);\n    return [\n      `${rootPrefix}${file}`,\n      {\n        content: getContractByPath(item)\n      }];\n  })\n);\n\nsolc.loadRemoteVersion(solidityVersion, function (err, solcSnapshot) {\n  if (!err) {\n    const settings = {\n      outputSelection: {\n      \"*\": {\n        \"*\": [\n          \"evm.bytecode.object\",\n          \"evm.deployedBytecode.object\",\n          \"abi\",\n          \"evm.bytecode.sourceMap\",\n          \"evm.deployedBytecode.sourceMap\",\n          \"metadata\"\n        ],\n        \"\": [\"ast\"]\n      }\n    },\n      ...compileOptions\n    };\n\n    // Solidity Compiler's expected format\n    const input = {\n      language: 'Solidity',\n      sources: sources,\n      settings: settings\n    };\n    \n    // Parse the compiler output to retrieve the ABI and Bytecode\n    const output = solcSnapshot.compile(JSON.stringify(input), { import: findImports });\n    const outputParsed = JSON.parse(output);\n   \n    //  Ignore the intermediate compile results\n    const filtered = Object.fromEntries(Object.entries(outputParsed.contracts).filter(([key, _value])=>key.startsWith(rootPrefix)));\n    //  Elevate the results one level: use contract names as keys\n    const compiledContracts = Object.entries(filtered).reduce((acc, [key, value])=>({...acc, ...value}), {});\n\n    outputs[\"compiled contracts\"](compiledContracts, tag);\n  } else {\n    outputs[\"error\"](err, tag);\n  }\n});\n\nfunction getContractByPath(path){\n  return path.split('/').reduce((p,c)=>p?.[c], contracts);\n}\n\n//  does not use node.js only path functions\nfunction splitPath(fullPath){\n  const route = fullPath.split('/');\n  const file = route.pop();\n  const path = route.join('/');\n  return {file: file, path: path, fullPath: fullPath};\n}\n\n//  see:\n//  https://github.com/ethereum/solc-js/blob/master/README.md\n//  https://www.npmjs.com/package/solc4\nfunction findImports(path) {\n  for (const i in includeRoots) {\n    const fullPath = `${includeRoots[i]}/${path}`;\n    const res = getContractByPath(fullPath);\n    if (res) {\n      return {\n        contents: res\n      };\n    }\n  }\n}"},"dependencies":{"npm":{"solc":{"description":""}}}}},"interface":{"inputs":{"3a55b8dd-6eec-44c8-acae-4b1e60f90d7a":{"type":"any","name":"data"}},"outputs":{"6e0ac013-ee3c-4e0e-8b72-8eeb2419795c":{"type":"{\n  \"abi\": any[],\n  \"evm\": {\n    \"bytecode\": {\n      \"object\": string\n    }\n  }\n}","name":"compiled contracts"},"b73438f2-808b-4980-9902-c63866012a5d":{"type":"any","name":"error"}}},"name":"blockchain/ethereum/Contracts compiler/Internal","attributes":{"internal":true,"locked":true}},"857aacdb-326e-4b2e-a261-5197b667e14f":{"description":"Retrieves an item's value by its key from a dictionary.\nIf the item is not found, the inputs are sent via `not found`.\n\nExample A:\n1. { \"first\": 1, \"third\": 3, \"fifth\": 5 } @0 received via `dict`\n2. \"first\"@0 received via `key`\n3. `value` sends 1@0\n\nExample B:\n1. { \"first\": 1, \"third\": 3, \"fifth\": 5 } @0 received via `dict`\n2. \"second\"@0 received via `key`\n3. `not found` sends { \"dict\":  { \"first\": 1, \"third\": 3, \"fifth\": 5 }, \"key\": \"second\" }@0\n\nMore:\nhttps://github.com/Cranq-io/cranq-tutorials/tree/main/reference/3_querying_data/3_1_getters","interface":{"inputs":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{"type":"{string:any}","name":"dict","description":"Receives the dictionary to get the value from.\n\nExample:\n{ \"first\": 1, \"third\": 3, \"fifth\": 5 }"},"23142cc5-6b71-4d69-8c46-cc1cd58793d1":{"type":"string","name":"key","description":"Receives the key corresponding to the value to get.\n\nExample:\n\"third\""}},"outputs":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{"type":"typeof`dict`[string]","name":"value","description":"If found, sends the value corresponding to the specified key.\n\nExample:\n1"},"3e1b4eaf-6e2c-44f4-80bc-d685af75dbb7":{"type":"{\n  \"dict\": typeof `dict`,\n  \"key\": string\n} ","name":"not found","description":"Sends the input values, when the specified key is not found in the dictionary.\n\nExample:\n{ \"dict\":  { \"first\": 1, \"third\": 3, \"fifth\": 5 }, \"key\": \"second\" }"}}},"implementations":{"cranq":{"nodes":{"5ae09e24-6724-4227-aa2c-a41ff95c9d53":{"coordinates":[-24,73],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"dict\",\"key\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync dict & key"},"06f47813-60ef-40d1-9f9b-b31940f27820":{"coordinates":[13,-55],"description":"","params":{},"prototype":"78639337-d706-4a1a-b612-ba170e83b8e2","name":"get item"}},"connections":{"5ae09e24-6724-4227-aa2c-a41ff95c9d53":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"06f47813-60ef-40d1-9f9b-b31940f27820":{"50395fef-5d23-4f22-ad85-ac41ce728ca8":{"description":""}}}}},"forwards":{"inputs":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{"5ae09e24-6724-4227-aa2c-a41ff95c9d53":{"dict":{}}},"23142cc5-6b71-4d69-8c46-cc1cd58793d1":{"5ae09e24-6724-4227-aa2c-a41ff95c9d53":{"key":{}}}},"outputs":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{"06f47813-60ef-40d1-9f9b-b31940f27820":{"773e3764-85ca-4882-ad5a-4a8fcfdcbe9d":{}}},"3e1b4eaf-6e2c-44f4-80bc-d685af75dbb7":{"06f47813-60ef-40d1-9f9b-b31940f27820":{"c1a88321-b05f-4ef4-8ae1-a3527b419c92":{}}}}}}},"name":"data/dictionary/Item getter","keywords":{"dictionary":null,"dict":null,"get":null,"value":null},"iconId":"88cb21a8-d088-476e-8a3a-fb62c6a5fd58","attributes":{"locked":true}},"78639337-d706-4a1a-b612-ba170e83b8e2":{"description":"","interface":{"inputs":{"50395fef-5d23-4f22-ad85-ac41ce728ca8":{"type":"{\"dict\":{string:any},\"key\":string}","name":"dict & key"}},"outputs":{"773e3764-85ca-4882-ad5a-4a8fcfdcbe9d":{"type":"(typeof `dict & key`)[\"dict\"][string]","name":"value"},"c1a88321-b05f-4ef4-8ae1-a3527b419c92":{"type":"any","name":"not found"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"50395fef-5d23-4f22-ad85-ac41ce728ca8":"const value = data.dict[data.key];\n\nif (value !== undefined) {\n  outputs.value(value, tag);\n} else {\n  outputs[\"not found\"](data, tag); \n}"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"50395fef-5d23-4f22-ad85-ac41ce728ca8":"const value = data.dict[data.key];\n\nif (value !== undefined) {\n  outputs.value(value, tag);\n} else {\n  outputs[\"not found\"](data, tag); \n}"}}},"name":"data/dictionary/Item getter/Internal","attributes":{"internal":true,"locked":true}},"0829c503-2486-4c90-9901-52439492c17e":{"name":"blockchain/ethereum/Uniswap/v2/Router deployer","description":"Deployes UniswapV2Router02 contract to the chain","interface":{"inputs":{"ae906061-5695-4e79-aa79-a30b6ab50ca3":{"type":"string","name":"factory address","description":"Address of the deployed UniswapV2Factory contract"},"1be1c7f6-ec26-496e-98a6-10b5a8b9b3f9":{"type":"string","name":"WETH address","description":"Address of the WETH token on the targetet network"},"c6f7b167-e6a9-490e-95a5-509caa485269":{"type":"typeof `connect credentials` of `deploy router contract`","name":"config"},"a6645263-ae6f-4a41-825f-cf10bad0e98c":{"type":"any","name":"router contract","description":"The compiled UniswapV2Router02 contract"}},"outputs":{"ff61a589-bab9-48de-997f-300f29073deb":{"type":"typeof `events` of `deploy router contract`","name":"events","description":"Muliplexed events.\nUse a Demultiplexer to separate them if needed."},"43026ea7-55a5-4af6-a937-272c8bfaba2a":{"type":"typeof `error` of `deploy router contract`","name":"error"},"7863188d-de92-41cc-b5c3-f5326b24ec02":{"type":"{\n\"confirmationNumber\": number\n}","name":"confirmation"}}},"implementations":{"cranq":{"nodes":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"coordinates":[158,36],"name":"deploy router contract","prototype":"cf8402d8-2801-4b12-9d91-c0edf557f2d9","params":{"9c78c7d9-7aee-4e04-92d6-5342e133d6b5":"{\"gas\": 6000000}","6a44b0aa-dd80-42a5-ba19-15a130f0206a":"false"}},"6772e7a4-b7d6-42fc-abd2-21f32fdf3681":{"coordinates":[-138.8046875,-147.90625],"name":"wrapper","prototype":"46f037ec-7586-4653-bcc8-363b7e769c41"},"5f82a8dc-297d-4ebc-b82c-85f0fa5a300a":{"coordinates":[-25.8046875,-70.90625],"name":"item appender","prototype":"9882ea6b-43da-4a1f-b660-689da949c8f2"}},"connections":{"6772e7a4-b7d6-42fc-abd2-21f32fdf3681":{"51232407-ba2f-430d-b3fe-883a465cedd0":{"5f82a8dc-297d-4ebc-b82c-85f0fa5a300a":{"5cbbb232-d9b4-4d06-9db0-e548e44e43b6":{}}}},"5f82a8dc-297d-4ebc-b82c-85f0fa5a300a":{"092ca265-7614-4182-9d9f-bd325c094abb":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"0618062e-aa1f-4a81-9727-fa078f93332f":{}}}}},"forwards":{"inputs":{"c6f7b167-e6a9-490e-95a5-509caa485269":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"21dc533c-92b5-4354-9d81-1cfd46f095c8":{}}},"a6645263-ae6f-4a41-825f-cf10bad0e98c":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"ca45ccd6-b1fb-4bb7-86ca-b9e774f899bb":{}}},"ae906061-5695-4e79-aa79-a30b6ab50ca3":{"6772e7a4-b7d6-42fc-abd2-21f32fdf3681":{"3e97c47b-9e13-48f3-b6a9-95cd8b676a8e":{}}},"1be1c7f6-ec26-496e-98a6-10b5a8b9b3f9":{"5f82a8dc-297d-4ebc-b82c-85f0fa5a300a":{"2d02022b-c114-4207-935e-11490a6c2926":{}}}},"outputs":{"43026ea7-55a5-4af6-a937-272c8bfaba2a":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"c8505107-dfeb-4ad6-a08c-2543a30b2887":{}}},"7863188d-de92-41cc-b5c3-f5326b24ec02":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"a6fdcbf5-7937-47f1-89db-2807b758842f":{}}},"ff61a589-bab9-48de-997f-300f29073deb":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"3483ab3b-5295-4761-8832-ec968f7399d9":{}}}}}}},"iconId":"89f4fde2-5391-4f4c-b55a-55ada280f89c","original":"1977f20f-6789-411a-a898-1de7a530a08a","attributes":{"locked":true}},"cf8402d8-2801-4b12-9d91-c0edf557f2d9":{"name":"blockchain/ethereum/Contract deployer","interface":{"inputs":{"ca45ccd6-b1fb-4bb7-86ca-b9e774f899bb":{"type":"typeof `parameters` of `deploy contract`[\"contract\"]","name":"contract","description":""},"21dc533c-92b5-4354-9d81-1cfd46f095c8":{"type":"{\n    \"providerUrl\": string, \n    \"privateKey\": string\n}","name":"connect credentials","description":""},"0618062e-aa1f-4a81-9727-fa078f93332f":{"type":"string[]","name":"contract params","description":""},"6a44b0aa-dd80-42a5-ba19-15a130f0206a":{"type":"boolean","name":"only estimate gas"},"9c78c7d9-7aee-4e04-92d6-5342e133d6b5":{"type":" {\n    \"gas\": number, \n    optional \"gasPrice\": string\n  }","name":"settings"}},"outputs":{"3483ab3b-5295-4761-8832-ec968f7399d9":{"type":"{ \n  \"field\": (\n    \"transaction hash\" or \"receipt\" or \"confirmation\" or \"contract\" or \"error\"\n  ),\n\"data\": any\n}","name":"events","description":"Multiplexed events. Useful for monitoring progress.\nUse Demultiplexer to separate them."},"a6fdcbf5-7937-47f1-89db-2807b758842f":{"type":"typeof `confirmation` of `deploy contract`","name":"confirmation"},"b94ccca9-9434-47e1-8382-6b615b5f3f47":{"type":"typeof `estimated gas` of `deploy contract`","name":"estimated gas"},"c8505107-dfeb-4ad6-a08c-2543a30b2887":{"type":"typeof `error` of `deploy contract`","name":"error"}}},"implementations":{"cranq":{"nodes":{"523f713b-c414-43f6-9179-db27247c01af":{"coordinates":[148.75,-25.75],"name":"deploy contract","prototype":"c635f5fd-7397-4f0e-8c99-609257c430ab"},"f7c0d38f-e3a0-41f0-8764-b7cb93ec8fab":{"coordinates":[-89,-30],"name":"build parameters","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"contract\",\"settings\", \"contractParams\", \"estimateGas\"]"}},"2b93ff24-0dc3-41d8-8f34-13b5556a492e":{"coordinates":[-284,50],"name":"merger","prototype":"b7a6187f-2d42-4e0c-b0b7-8e1ec0f45301"},"333f5c4c-6c23-47c4-8b0b-cef235c7eaa2":{"coordinates":[388,-127],"name":"multiplexer","prototype":"69f0d61a-989b-45f0-a2ca-a148c5e58323","params":{"812fd3c6-a75b-486e-9bd1-3f2a1ee28f0c":"[\"transaction hash\", \"receipt\", \"confirmation\", \"contract\", \"error\"]"}}},"connections":{"f7c0d38f-e3a0-41f0-8764-b7cb93ec8fab":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"523f713b-c414-43f6-9179-db27247c01af":{"d4d6f2e9-1a7a-4bc8-8d8c-c0c8d0eacc68":{}}}},"2b93ff24-0dc3-41d8-8f34-13b5556a492e":{"8357d165-4753-4d32-8c61-e3baff88d8ba":{"f7c0d38f-e3a0-41f0-8764-b7cb93ec8fab":{"settings":{}}}},"523f713b-c414-43f6-9179-db27247c01af":{"e7f5a7aa-c9d8-48d5-a248-3b2cac4262f1":{"333f5c4c-6c23-47c4-8b0b-cef235c7eaa2":{"transaction hash":{}}},"b81cd0dc-f7c4-43c4-8579-7e2c38cff351":{"333f5c4c-6c23-47c4-8b0b-cef235c7eaa2":{"receipt":{}}},"64e1ca3c-3e06-4ed5-9563-d71098ea99f4":{"333f5c4c-6c23-47c4-8b0b-cef235c7eaa2":{"confirmation":{}}},"dc68467f-bdb9-4d16-9eb7-0d4d366b95ff":{"333f5c4c-6c23-47c4-8b0b-cef235c7eaa2":{"contract":{}}},"0eb501ee-6d8f-4ef6-bdb9-95d3ebdce818":{"333f5c4c-6c23-47c4-8b0b-cef235c7eaa2":{"error":{}}}}},"forwards":{"inputs":{"ca45ccd6-b1fb-4bb7-86ca-b9e774f899bb":{"f7c0d38f-e3a0-41f0-8764-b7cb93ec8fab":{"contract":{}}},"0618062e-aa1f-4a81-9727-fa078f93332f":{"f7c0d38f-e3a0-41f0-8764-b7cb93ec8fab":{"contractParams":{}}},"6a44b0aa-dd80-42a5-ba19-15a130f0206a":{"f7c0d38f-e3a0-41f0-8764-b7cb93ec8fab":{"estimateGas":{}}},"9c78c7d9-7aee-4e04-92d6-5342e133d6b5":{"2b93ff24-0dc3-41d8-8f34-13b5556a492e":{"d694bd76-84f6-465f-9c8e-8b9570cc8e69":{}}},"21dc533c-92b5-4354-9d81-1cfd46f095c8":{"2b93ff24-0dc3-41d8-8f34-13b5556a492e":{"545a5e1a-9807-4456-b557-dfa8aa8ef28a":{}}}},"outputs":{"a6fdcbf5-7937-47f1-89db-2807b758842f":{"523f713b-c414-43f6-9179-db27247c01af":{"64e1ca3c-3e06-4ed5-9563-d71098ea99f4":{}}},"b94ccca9-9434-47e1-8382-6b615b5f3f47":{"523f713b-c414-43f6-9179-db27247c01af":{"96043b1f-6b74-408f-a93b-c6b7abc603d5":{}}},"c8505107-dfeb-4ad6-a08c-2543a30b2887":{"523f713b-c414-43f6-9179-db27247c01af":{"0eb501ee-6d8f-4ef6-bdb9-95d3ebdce818":{}}},"3483ab3b-5295-4761-8832-ec968f7399d9":{"333f5c4c-6c23-47c4-8b0b-cef235c7eaa2":{"b20b339d-6c7a-4f30-87c4-d600b4452103":{}}}}}}},"original":"f4ae07d3-ca68-4c27-840c-b388162834c6","attributes":{"locked":true},"description":"Deploys a smart contract on an ethereum network","iconId":"6876e900-c9f1-44f9-a00a-83df8456d721"},"c635f5fd-7397-4f0e-8c99-609257c430ab":{"implementations":{"es6-node":{"dependencies":{"npm":{"web3":{"description":""}}},"inputFunctions":{"d4d6f2e9-1a7a-4bc8-8d8c-c0c8d0eacc68":"const Web3 = require(\"web3\");\r\nconst {TransactionReceipt} = require(\"web3-core\");\r\nconst {contract, contractParams, settings, estimateGas} = data;\r\nconst {providerUrl, privateKey, gas, gasPrice} = settings;\r\n\r\nconst abi = contract.abi;\r\nconst bytecode = contract.evm.bytecode.object;\r\n\r\nconst web3 = new Web3(new Web3.providers.HttpProvider(providerUrl));\r\nconst signer = web3.eth.accounts.privateKeyToAccount(privateKey);\r\nweb3.eth.accounts.wallet.add(signer);\r\nconst ethContract = new web3.eth.Contract(abi, {from: signer.address});\r\nethContract.options.data = bytecode;\r\n\r\nconst deployTx = ethContract.deploy({data: bytecode, arguments: contractParams});\r\n\r\nasync function main() {\r\n\r\n  if (estimateGas === true) {\r\n    outputs[\"estimated gas\"](await deployTx.estimateGas(), tag);\r\n  } else {\r\n    try {\r\n      shared.nonces = shared.nonces || {};\r\n      const observedNonce = await web3.eth.getTransactionCount(signer.address);\r\n      const stateNonce = shared.nonces[signer.address];\r\n      const nonce = (stateNonce) ? Math.max(stateNonce, observedNonce) : observedNonce;\r\n      shared.nonces[signer.address] = nonce + 1;\r\n      const newContractInstance = await deploy(nonce);\r\n      outputs[\"contract\"](newContractInstance, tag);\r\n    } catch (error) {\r\n      outputs[\"error\"](error.message, tag);\r\n    }\r\n  }\r\n}\r\n\r\nasync function deploy(nonce) {\r\n  return deployTx.send({\r\n    gas: gas,\r\n    gasPrice: gasPrice,\r\n    nonce: nonce\r\n  })\r\n  .once(\"transactionHash\", (txhash) => {\r\n    outputs[\"transaction hash\"](txhash, tag);\r\n  })\r\n  .once(\"receipt\", (receipt) => {\r\n    outputs[\"receipt\"](receipt, tag);\r\n  })\r\n  .on(\"confirmation\", (confirmationNumber, receipt, latestBlockHash) => {\r\n    outputs[\"confirmation\"](\r\n      {\r\n        confirmationNumber: confirmationNumber,\r\n        receipt: receipt,\r\n        latestBlockHash: latestBlockHash\r\n      },\r\n      tag\r\n    );\r\n  });\r\n}\r\n\r\nmain();"}}},"interface":{"inputs":{"d4d6f2e9-1a7a-4bc8-8d8c-c0c8d0eacc68":{"type":"{\n  \"contract\": {\n    \"abi\": any[],\n    \"evm\": {\n      \"bytecode\": {\n        \"object\": string\n      }\n    }\n  }\n}","name":"parameters"}},"outputs":{"e7f5a7aa-c9d8-48d5-a248-3b2cac4262f1":{"type":"any","name":"transaction hash"},"b81cd0dc-f7c4-43c4-8579-7e2c38cff351":{"type":"any","name":"receipt"},"64e1ca3c-3e06-4ed5-9563-d71098ea99f4":{"type":"any","name":"confirmation"},"dc68467f-bdb9-4d16-9eb7-0d4d366b95ff":{"type":"any","name":"contract"},"96043b1f-6b74-408f-a93b-c6b7abc603d5":{"type":"any","name":"estimated gas"},"0eb501ee-6d8f-4ef6-bdb9-95d3ebdce818":{"type":"any","name":"error"}}},"name":"blockchain/ethereum/Contract deployer/Internal","attributes":{"internal":true}},"b7a6187f-2d42-4e0c-b0b7-8e1ec0f45301":{"description":"Merges dictionary `b` to dictionary `a`. Values of `a` will be ignored on key conflict.\n\nFrequently used to apply default values to record fields.\n\nExample:\n1. { \"first\": 1, \"third\": 0 }@0 received via `a`\n2. { \"third\": 3, \"fifth\": 5 }@0 received via `b`\n3. `merged` sends { \"first\": 1, \"third\": 3, \"fifth\": 5 }@0\n\nMore:\nhttps://github.com/Cranq-io/cranq-tutorials/tree/main/reference/2_constructing_data/2_4_merge_concat","interface":{"inputs":{"545a5e1a-9807-4456-b557-dfa8aa8ef28a":{"type":"{string:any}","name":"a","description":"Receives the dictionary to merge onto.\n\nExample:\n{ \"first\": 1, \"third\": 0 }"},"d694bd76-84f6-465f-9c8e-8b9570cc8e69":{"type":"{string:any}","name":"b","description":"Receives the dictionary to merge with.\n\nExample:\n{ \"third\": 3, \"fifth\": 5 }"}},"outputs":{"8357d165-4753-4d32-8c61-e3baff88d8ba":{"type":"(typeof `a` and typeof `b`)","name":"merged","description":"Sends the resulting merged dictionary.\n\nExample:\n{ \"first\": 1, \"third\": 3, \"fifth\": 5 }"}}},"implementations":{"cranq":{"nodes":{"65eb02b8-d090-4120-b2dc-6c01baefd46a":{"coordinates":[-38,58],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"a\",\"b\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync a & b"},"a96a53ad-a84b-4f4c-8f3d-41f892d50073":{"coordinates":[32,-65],"description":"","params":{},"prototype":"7fcb969e-7720-4a1c-b656-8f0a16f26188","name":"merge"}},"connections":{"65eb02b8-d090-4120-b2dc-6c01baefd46a":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"a96a53ad-a84b-4f4c-8f3d-41f892d50073":{"ca5090ac-fdf0-4efd-a672-e66c52507873":{"description":""}}}}},"forwards":{"inputs":{"545a5e1a-9807-4456-b557-dfa8aa8ef28a":{"65eb02b8-d090-4120-b2dc-6c01baefd46a":{"a":{}}},"d694bd76-84f6-465f-9c8e-8b9570cc8e69":{"65eb02b8-d090-4120-b2dc-6c01baefd46a":{"b":{}}}},"outputs":{"8357d165-4753-4d32-8c61-e3baff88d8ba":{"a96a53ad-a84b-4f4c-8f3d-41f892d50073":{"ca5f3c12-33fa-4548-997c-d8e006c5dc0b":{}}}}}}},"name":"data/dictionary/Merger","keywords":{"dictionary":null,"dict":null,"merge":null,"union":null},"iconId":"7341443a-8a0a-4a83-b302-effdb497c0f3","attributes":{"featured":true,"locked":true}},"7fcb969e-7720-4a1c-b656-8f0a16f26188":{"description":"","interface":{"inputs":{"ca5090ac-fdf0-4efd-a672-e66c52507873":{"type":"{\"a\":{string:any},\"b\":{string:any}}","name":"a & b"}},"outputs":{"ca5f3c12-33fa-4548-997c-d8e006c5dc0b":{"type":"{\nstring: (typeof `a & b`[\"a\"][string] or typeof `a & b`[\"b\"][string])\n}","name":"merged"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"ca5090ac-fdf0-4efd-a672-e66c52507873":"outputs.merged({...data.a, ...data.b}, tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"ca5090ac-fdf0-4efd-a672-e66c52507873":"outputs.merged({...data.a, ...data.b}, tag);"}}},"name":"data/dictionary/Merger/Internal","attributes":{"internal":true,"locked":true}},"69f0d61a-989b-45f0-a2ca-a148c5e58323":{"description":"Forwards data received via dynamic inputs to `multiplexed`, wrapped in a record which carries both the data and the ID of the port (field) that it was received through.\n\nExample:\n1. `fields` is set to [\"a\", \"b\"]\n2. Input ports `a` and `b` get created\n3. The number 5 received via `b`\n4. {\"field\": \"b\", \"data\": 5} will be sent via `multiplexed`.","interface":{"inputs":{"812fd3c6-a75b-486e-9bd1-3f2a1ee28f0c":{"description":"Receives a list of input port names to accept data payload through.","type":"(string[] or number[])","name":"fields"},"7bf13909-e44b-4f6a-9fc5-153cf3c2d286":{"description":"Receives data payload for multiplexing.","paramId":"812fd3c6-a75b-486e-9bd1-3f2a1ee28f0c","type":"any","name":"demultiplexed"}},"outputs":{"b20b339d-6c7a-4f30-87c4-d600b4452103":{"description":"Sends multiplexed data.","type":"{\"field\": string, \"data\": typeof `demultiplexed`}","name":"multiplexed"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"7bf13909-e44b-4f6a-9fc5-153cf3c2d286":"outputs.multiplexed({data, field: input}, tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"7bf13909-e44b-4f6a-9fc5-153cf3c2d286":"outputs.multiplexed({data, field: input}, tag);"}}},"name":"flow/Multiplexer","keywords":{"collect":null,"bundle":null},"iconId":"cbb85c56-3c8f-4e5e-afdd-a9dd9e84385d","attributes":{"locked":true}},"46f037ec-7586-4653-bcc8-363b7e769c41":{"name":"data/array/Wrapper","description":"Wraps input in a 1-element array","interface":{"inputs":{"3e97c47b-9e13-48f3-b6a9-95cd8b676a8e":{"type":"any","name":"data"}},"outputs":{"51232407-ba2f-430d-b3fe-883a465cedd0":{"type":"[typeof `data`]","name":"array"}}},"implementations":{"cranq":{"nodes":{"7890d318-1ed9-4fe9-a7b6-6d6e7e683adf":{"coordinates":[0,0],"name":"syncer B","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[0]"}}},"connections":{},"forwards":{"inputs":{"3e97c47b-9e13-48f3-b6a9-95cd8b676a8e":{"7890d318-1ed9-4fe9-a7b6-6d6e7e683adf":{"0":{}}}},"outputs":{"51232407-ba2f-430d-b3fe-883a465cedd0":{"7890d318-1ed9-4fe9-a7b6-6d6e7e683adf":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{}}}}}}},"keywords":{"wrap":null,"element":null,"item":null,"array":null,"tuple":null},"iconId":"cbb85c56-3c8f-4e5e-afdd-a9dd9e84385d","attributes":{"locked":true}},"9882ea6b-43da-4a1f-b660-689da949c8f2":{"implementations":{"cranq":{"nodes":{"492cdba8-ab4f-4428-8339-5ab70efa576f":{"coordinates":[28,-63],"name":"append item","prototype":"9efd883d-58f1-4091-8d4e-1b8585feaf37","params":{}},"39d7325b-1323-4def-9dad-195c95c002e1":{"coordinates":[-27,49],"name":"sync array & item","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"array\", \"item\"]"}}},"connections":{"39d7325b-1323-4def-9dad-195c95c002e1":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"492cdba8-ab4f-4428-8339-5ab70efa576f":{"313b183a-6816-45e9-abb7-dd5319a48fbd":{}}}}},"forwards":{"inputs":{"5cbbb232-d9b4-4d06-9db0-e548e44e43b6":{"39d7325b-1323-4def-9dad-195c95c002e1":{"array":{}}},"2d02022b-c114-4207-935e-11490a6c2926":{"39d7325b-1323-4def-9dad-195c95c002e1":{"item":{}}}},"outputs":{"092ca265-7614-4182-9d9f-bd325c094abb":{"492cdba8-ab4f-4428-8339-5ab70efa576f":{"5de10da8-d82e-4757-9e51-fd1815c2e57b":{}}}}}}},"interface":{"inputs":{"5cbbb232-d9b4-4d06-9db0-e548e44e43b6":{"type":"any[]","name":"array","description":"Receives array to append item to.\n\nExample:\n[1,2,3]"},"2d02022b-c114-4207-935e-11490a6c2926":{"type":"any","name":"item","description":"Receives item to append to the array.\n\nExample:\n1"}},"outputs":{"092ca265-7614-4182-9d9f-bd325c094abb":{"type":"typeof `array`","name":"array","description":"Sends the new array with the appended item.\n\nExample:\n[1,2,3,1]"}}},"name":"data/array/Item appender","keywords":{"add":null,"insert":null},"description":"Appends item to the array.\n\nExample: \n1. [1,2,3]@0 recieved via `array` \n2. 1@0 recieved via `item` \n3. [1,2,3,1]@0 sent via `array`","iconId":"89f4fde2-5391-4f4c-b55a-55ada280f89c","attributes":{"locked":true}},"9efd883d-58f1-4091-8d4e-1b8585feaf37":{"implementations":{"es6":{"inputFunctions":{"313b183a-6816-45e9-abb7-dd5319a48fbd":"outputs.array([...data.array, data.item], tag);"}},"es6-node":{"inputFunctions":{"313b183a-6816-45e9-abb7-dd5319a48fbd":"outputs.array([...data.array, data.item], tag);"}}},"interface":{"inputs":{"313b183a-6816-45e9-abb7-dd5319a48fbd":{"type":"{\"array\": any[], \"item\": any}","name":"array & item"}},"outputs":{"5de10da8-d82e-4757-9e51-fd1815c2e57b":{"type":"(typeof `array & item`)[\"array\"]","name":"array"}}},"name":"data/array/Item appender/Internal","attributes":{"internal":true,"locked":true},"description":"See data/array/Item appender"},"8ad9e182-95f3-4e99-94d9-c9489eead7c4":{"name":"blockchain/ethereum/Uniswap/v2/Init code pair hash requester","interface":{"inputs":{"14a6e991-cb90-4f42-b1df-3ea7d58d895b":{"type":"any","name":"factory ABI"},"202dbb68-350c-4df4-a992-85352f7e692c":{"type":"string","name":"factory address"},"9cd53ac0-f4b8-4082-9f7e-0d509cf18101":{"type":"string","name":"web3 provider URL"}},"outputs":{"a42c8f8d-11c4-4b8b-96b9-3a801f3e7fb6":{"type":"any","name":"init hash"}}},"implementations":{"cranq":{"nodes":{"55a4cf2e-74c6-4b5a-8593-cd9650bdadd4":{"coordinates":[142,-6],"name":"query init hash","prototype":"f05fe3a9-cade-486b-b421-e814bac7e4d1","params":{}},"c14af7ee-f774-48d9-ac23-95dd3fd3f0ae":{"coordinates":[-64,-23],"name":"syncer","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"V2Factory Abi\", \"contract address\", \"providerUrl\"]"}}},"connections":{"c14af7ee-f774-48d9-ac23-95dd3fd3f0ae":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"55a4cf2e-74c6-4b5a-8593-cd9650bdadd4":{"2513d1ad-d856-4c98-9e44-7ac1aab94fb4":{}}}}},"forwards":{"inputs":{"9cd53ac0-f4b8-4082-9f7e-0d509cf18101":{"c14af7ee-f774-48d9-ac23-95dd3fd3f0ae":{"providerUrl":{}}},"202dbb68-350c-4df4-a992-85352f7e692c":{"c14af7ee-f774-48d9-ac23-95dd3fd3f0ae":{"contract address":{}}},"14a6e991-cb90-4f42-b1df-3ea7d58d895b":{"c14af7ee-f774-48d9-ac23-95dd3fd3f0ae":{"V2Factory Abi":{}}}},"outputs":{"a42c8f8d-11c4-4b8b-96b9-3a801f3e7fb6":{"55a4cf2e-74c6-4b5a-8593-cd9650bdadd4":{"420181c4-34a5-4a36-aa50-7de8a799af90":{}}}}}}},"original":"4fa819d8-9949-442e-84f5-00d890224c0c","description":"Queries the init code hash from the deployed UniswapV2Factory","iconId":"88cb21a8-d088-476e-8a3a-fb62c6a5fd58","attributes":{"locked":true}},"f05fe3a9-cade-486b-b421-e814bac7e4d1":{"implementations":{"es6-node":{"inputFunctions":{"2513d1ad-d856-4c98-9e44-7ac1aab94fb4":"const Web3 = require(\"web3\");\r\n  const providerUrl = data[\"providerUrl\"];\r\n  const provider = new Web3.providers.HttpProvider(providerUrl);\r\n  const web3 = new Web3(provider);\r\n\r\n  const contractAddress = data[\"contract address\"];\r\n  const factoryAbi = data[\"V2Factory Abi\"];\r\n\r\n  const factory = new web3.eth.Contract(factoryAbi, contractAddress);\r\n\r\n  async function queryInitHash(){\r\n    let initHash = await factory.methods.INIT_CODE_PAIR_HASH().call();\r\n    \r\n    if (initHash.startsWith('0x')){\r\n      initHash = initHash.substring(2);\r\n    }\r\n    \r\n    outputs[\"init hash\"](initHash, tag);\r\n  }\r\n  \r\n  queryInitHash();"}}},"interface":{"inputs":{"2513d1ad-d856-4c98-9e44-7ac1aab94fb4":{"type":"{\n   \"providerUrl\": string,\n  \"contract address\": string,\n  \"V2Factory Abi\": any\n}","name":"V2Factory data"}},"outputs":{"420181c4-34a5-4a36-aa50-7de8a799af90":{"type":"any","name":"init hash"}}},"name":"blockchain/ethereum/Uniswap/v2/Init code pair hash requester/Internal","attributes":{"internal":true}},"d016a834-c89f-414d-b3d4-48e6b5d924ef":{"name":"blockchain/ethereum/Uniswap/v2/WETH addresses","description":"Holds WETH addresses on different supported networks","interface":{"inputs":{"b398713c-c8ff-4a98-9d77-5ad8023a43a5":{"type":"(\n  \"mainnet\" \n  or \"ropsten\" \n  or   \"rinkeby\" \n  or  \"goerli\" \n  or  \"kovan\"\n)","name":"network","description":"The name of the Ethereum network to use"}},"outputs":{"f5711708-f236-47e0-b84a-aa3bc1b88196":{"type":"string","name":"WETH address","description":"Sends out the WETH address on the specified network."}}},"implementations":{"cranq":{"nodes":{"084622c0-5d4b-4aca-a257-9b19a9256b3b":{"coordinates":[-98,-85],"name":"WETH address","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f","params":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"{\n  \"mainnet\": \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n  \"ropsten\": \"0xc778417E063141139Fce010982780140Aa0cD5Ab\",\n  \"rinkeby\": \"0xc778417E063141139Fce010982780140Aa0cD5Ab\",\n  \"goerli\":\t\"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\",\n  \"kovan\": \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\"\n}"}},"b473d654-fc0c-46d7-97bf-3aa0b0896b1f":{"coordinates":[78.1953125,-3.90625],"name":"item getter","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f"}},"connections":{"084622c0-5d4b-4aca-a257-9b19a9256b3b":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{"b473d654-fc0c-46d7-97bf-3aa0b0896b1f":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}}}}},"forwards":{"inputs":{"b398713c-c8ff-4a98-9d77-5ad8023a43a5":{"084622c0-5d4b-4aca-a257-9b19a9256b3b":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}},"b473d654-fc0c-46d7-97bf-3aa0b0896b1f":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":{}}}},"outputs":{"f5711708-f236-47e0-b84a-aa3bc1b88196":{"b473d654-fc0c-46d7-97bf-3aa0b0896b1f":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{}}}}}}},"iconId":"11e997ab-33d0-473a-aa56-1e2fe4d30d5c","attributes":{"locked":true}},"1e99c75f-d21c-41de-a79c-7080ab8a2883":{"implementations":{"cranq":{"nodes":{"3a804a8b-9202-4993-b998-8714f0cd2b2e":{"coordinates":[-147,102],"name":"is confirmation is enough","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f","params":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":"\"confirmationNumber\""}},"93e7e84f-1e55-4c1b-b1d9-fbd4ba848f87":{"coordinates":[127,-2],"name":"gate","prototype":"40a2e145-0193-461f-978a-d6aaf4a7ea09"},"12d9ad6d-4b4c-4a5a-b014-82fd94938c53":{"coordinates":[35,146],"name":"equality tester","prototype":"0497ba12-7946-4103-b58b-5e24cee0d46a","params":{}},"5d06bee6-4f6b-411f-a9c5-91894a8b3af8":{"coordinates":[293,11],"name":"get receipt","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f","params":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":"\"receipt\""}},"21054f2f-6b39-4989-bf2c-9e172a48783a":{"coordinates":[452,6],"name":"get contract address","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f","params":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":"\"contractAddress\""}},"6f38a834-1679-4350-8034-b5dfbdc1c209":{"coordinates":[-179,200],"name":"parameter with default","prototype":"a6599b7b-502d-437b-9c84-0f504921bb41","params":{"5d570fcf-b8db-4a62-8b84-4953a92d517f":"24"}},"7b899f7c-3ea1-45bf-af7d-99ec6cd6b373":{"coordinates":[8,279],"name":"cap value at 24","prototype":"018aabfe-8e71-4e63-b09d-d5b2a0c71836","params":{"4f9a7be2-f54a-4447-bc3c-c813adf0051b":"24"}}},"forwards":{"inputs":{"67c68864-f37a-4967-9ddd-3a87617ac325":{"93e7e84f-1e55-4c1b-b1d9-fbd4ba848f87":{"87d3064e-5a44-4029-bea8-ba632449f2f5":{}},"3a804a8b-9202-4993-b998-8714f0cd2b2e":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}},"6f38a834-1679-4350-8034-b5dfbdc1c209":{"dae97765-6472-42e4-b129-749784e976f6":{}}},"465fe590-d79e-4987-b1c6-a414e01773e2":{"6f38a834-1679-4350-8034-b5dfbdc1c209":{"01ef7f62-ecc9-4fd2-8f70-980a2d25795a":{}}}},"outputs":{"eadf732a-e84a-47e0-a825-95574d2f25ee":{"21054f2f-6b39-4989-bf2c-9e172a48783a":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{}}}}},"connections":{"3a804a8b-9202-4993-b998-8714f0cd2b2e":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{"12d9ad6d-4b4c-4a5a-b014-82fd94938c53":{"50e32f24-30af-4721-9e0a-89e85a9ee240":{}}}},"12d9ad6d-4b4c-4a5a-b014-82fd94938c53":{"66ea4495-b5be-4650-9448-c802141b82cd":{"93e7e84f-1e55-4c1b-b1d9-fbd4ba848f87":{"0e7419a5-ec56-4a97-8f11-6add5ff3ae1e":{}}}},"93e7e84f-1e55-4c1b-b1d9-fbd4ba848f87":{"7fe23af1-29bf-4cc5-810c-5b91dea1b61a":{"5d06bee6-4f6b-411f-a9c5-91894a8b3af8":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}}}},"5d06bee6-4f6b-411f-a9c5-91894a8b3af8":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{"21054f2f-6b39-4989-bf2c-9e172a48783a":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}}}},"6f38a834-1679-4350-8034-b5dfbdc1c209":{"9da98005-545d-4036-a36e-0f354a84cb50":{"7b899f7c-3ea1-45bf-af7d-99ec6cd6b373":{"aa1f8f2f-1676-4be6-a8e1-e74acffbeffd":{}}}},"7b899f7c-3ea1-45bf-af7d-99ec6cd6b373":{"0c5489c9-f28d-4ca4-b93f-3c2bb821a2ae":{"12d9ad6d-4b4c-4a5a-b014-82fd94938c53":{"2a91d8d8-a748-4135-9f8f-a7f200d97e6d":{}}}}}}},"interface":{"inputs":{"67c68864-f37a-4967-9ddd-3a87617ac325":{"type":"any","name":"confirmation"},"465fe590-d79e-4987-b1c6-a414e01773e2":{"type":"number","name":"number required","description":"Optional. The number of confirmations required to accept the contract as deployed."}},"outputs":{"eadf732a-e84a-47e0-a825-95574d2f25ee":{"type":"any","name":"contract address"}}},"name":"blockchain/ethereum/Contract deployment waiter","original":"8cbb443e-0aef-405a-9327-8bbade4446dc","iconId":"5e431e82-f53c-441f-8721-f5b6e0257a4d","description":"Waits for the specified number of confirmation events after a contract deployment then emits the deployed contract address.","keywords":{"confirmation":null,"deploy":null,"smart contract":null},"attributes":{"locked":true}},"40a2e145-0193-461f-978a-d6aaf4a7ea09":{"description":"Forwards signal received via `data` when corresponding signal received via `open` is true.\n\nExample A:\n1. \"A\"@0 received via `data`\n2. false@0 received via `open`\n3. No signal is sent via `data` (output)\n\nExample B:\n1. true@0 received via `open`\n2. \"B\"@0  received via `data`\n3. \"B\"@0 is sent via `data` (output)","interface":{"inputs":{"87d3064e-5a44-4029-bea8-ba632449f2f5":{"description":"Receives the signal to be forwarded / filtered.","type":"any","name":"data"},"0e7419a5-ec56-4a97-8f11-6add5ff3ae1e":{"description":"Whether to forward the signal received via `data`.","type":"boolean","name":"open"}},"outputs":{"7fe23af1-29bf-4cc5-810c-5b91dea1b61a":{"description":"Forwarded / filtered signal","type":"typeof `data`","name":"data"}}},"implementations":{"cranq":{"nodes":{"5d63b3df-ade9-499d-818e-24a8a803c480":{"coordinates":[25,-57],"description":"","params":{},"prototype":"f0b0801e-69ec-413a-a39e-c2658f08e6b6","name":"gate"},"fbc970a3-a2f5-4552-abae-b023e86a4633":{"coordinates":[-22,73],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"data\", \"open\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync data & open"}},"connections":{"fbc970a3-a2f5-4552-abae-b023e86a4633":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"5d63b3df-ade9-499d-818e-24a8a803c480":{"98485573-47d4-418c-8005-be19cff54d6a":{"description":""}}}}},"forwards":{"inputs":{"87d3064e-5a44-4029-bea8-ba632449f2f5":{"fbc970a3-a2f5-4552-abae-b023e86a4633":{"data":{}}},"0e7419a5-ec56-4a97-8f11-6add5ff3ae1e":{"fbc970a3-a2f5-4552-abae-b023e86a4633":{"open":{}}}},"outputs":{"7fe23af1-29bf-4cc5-810c-5b91dea1b61a":{"5d63b3df-ade9-499d-818e-24a8a803c480":{"ff977c1f-7317-4ae9-b0d5-4c0e308a7f2c":{}}}}}}},"name":"flow/Gate","keywords":{"filter":null,"stop":null},"iconId":"7341443a-8a0a-4a83-b302-effdb497c0f3","attributes":{"locked":true}},"f0b0801e-69ec-413a-a39e-c2658f08e6b6":{"description":"See `flow/Gate`","interface":{"inputs":{"98485573-47d4-418c-8005-be19cff54d6a":{"description":"","type":"{\"data\": any, \"open\": boolean}","name":"data & open"}},"outputs":{"ff977c1f-7317-4ae9-b0d5-4c0e308a7f2c":{"description":"","type":"typeof `data & open`[\"data\"]","name":"data"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"98485573-47d4-418c-8005-be19cff54d6a":"if (data.open) outputs.data(data.data, tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"98485573-47d4-418c-8005-be19cff54d6a":"if (data.open) outputs.data(data.data, tag);"}}},"name":"flow/Gate (internal)","attributes":{"internal":true,"locked":true}},"0497ba12-7946-4103-b58b-5e24cee0d46a":{"description":"Checks the received numbers for equality.\n\nExample:\n\n1. 23@0 is received via `a`\n2. 23@0 is received via `b`\n3. true@0 is sent via `equal`","interface":{"inputs":{"50e32f24-30af-4721-9e0a-89e85a9ee240":{"type":"number","name":"a","description":"The first number"},"2a91d8d8-a748-4135-9f8f-a7f200d97e6d":{"type":"number","name":"b","description":"The second number"}},"outputs":{"66ea4495-b5be-4650-9448-c802141b82cd":{"type":"boolean","name":"equal","description":"Sends true if the received numbers are equal, false otherwise."}}},"implementations":{"cranq":{"nodes":{"76d82260-8c8d-4e7b-ba36-27d7fc3ad649":{"coordinates":[0,0],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"a\",\"b\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync a & b"},"97ca1c28-365c-4dd3-8126-810fdb73d644":{"coordinates":[0,0],"description":"","params":{},"prototype":"ff7354f4-497d-4023-9e2a-db697ca1b35b","name":"equal"}},"connections":{"76d82260-8c8d-4e7b-ba36-27d7fc3ad649":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"97ca1c28-365c-4dd3-8126-810fdb73d644":{"229e784b-52e2-4b64-9338-0babdf91b09a":{"description":""}}}}},"forwards":{"inputs":{"50e32f24-30af-4721-9e0a-89e85a9ee240":{"76d82260-8c8d-4e7b-ba36-27d7fc3ad649":{"a":{}}},"2a91d8d8-a748-4135-9f8f-a7f200d97e6d":{"76d82260-8c8d-4e7b-ba36-27d7fc3ad649":{"b":{}}}},"outputs":{"66ea4495-b5be-4650-9448-c802141b82cd":{"97ca1c28-365c-4dd3-8126-810fdb73d644":{"5b0ac3ea-ca4b-40c4-a8b7-21add78630d4":{}}}}}}},"name":"number/Equality tester","attributes":{"featured":true,"locked":true},"keywords":{"number":null,"equality":null,"compare":null}},"ff7354f4-497d-4023-9e2a-db697ca1b35b":{"description":"","interface":{"inputs":{"229e784b-52e2-4b64-9338-0babdf91b09a":{"type":"{\"a\":number,\"b\":number}","name":"a & b"}},"outputs":{"5b0ac3ea-ca4b-40c4-a8b7-21add78630d4":{"type":"boolean","name":"equal"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"229e784b-52e2-4b64-9338-0babdf91b09a":"outputs.equal(data.a === data.b, tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"229e784b-52e2-4b64-9338-0babdf91b09a":"outputs.equal(data.a === data.b, tag);"}}},"name":"number/Equality tester/Internal","attributes":{"internal":true,"locked":true}},"a6599b7b-502d-437b-9c84-0f504921bb41":{"name":"flow/Parameter with default","description":"Stores a parameter and sends it out on receiving a signal to `read`.\n\nSends the default value when `data` is not set.\n\nExample A:\n1. \"foo\" is set or received on `data`\n2. \"bar\" is set on `default`\n3. null@1 received via `read`\n4. \"foo\"@1 sent via `data` (output)\n\nExample B:\n1. no value is set on `data`\n2. \"bar\" is set on `default`\n3. null@1 received via `read`\n4. \"bar\" is sent via `data` (output)","interface":{"inputs":{"01ef7f62-ecc9-4fd2-8f70-980a2d25795a":{"type":"any","name":"data","description":"Sets the parameter value."},"5d570fcf-b8db-4a62-8b84-4953a92d517f":{"type":"typeof `data`","name":"default","description":"Sets the default value for the parameter. \n\nWorks as static parameter only."},"dae97765-6472-42e4-b129-749784e976f6":{"type":"any","name":"read","description":"Receives signal that triggers sending out the stored parameter value or the default in case the prior is not set."}},"outputs":{"9da98005-545d-4036-a36e-0f354a84cb50":{"type":"any","name":"data","description":"Sends the stored parameter data or the default in case the prior is not set."}}},"implementations":{"cranq":{"nodes":{"85cd0e81-1f9c-4a27-a32f-c0397133409b":{"coordinates":[11,-101],"name":"store","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f"},"be8ed238-12f0-4326-8d68-0b912f7657ee":{"coordinates":[-38,68],"name":"default","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f"},"80e986d3-2297-4f5a-a8a0-da569beb2e7d":{"coordinates":[132,51],"name":"depot","prototype":"62c8e48b-0926-4fa7-8322-02975bf4dc41"}},"connections":{"be8ed238-12f0-4326-8d68-0b912f7657ee":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{"80e986d3-2297-4f5a-a8a0-da569beb2e7d":{"72a73ffe-8319-4427-878e-3e67f2d150ff":{}}}},"85cd0e81-1f9c-4a27-a32f-c0397133409b":{"e3876be5-e8c8-4983-b770-81fc8cdf5ff5":{"80e986d3-2297-4f5a-a8a0-da569beb2e7d":{"f58efe33-f70e-4570-ac54-670aaf844385":{}}}}},"forwards":{"inputs":{"01ef7f62-ecc9-4fd2-8f70-980a2d25795a":{"85cd0e81-1f9c-4a27-a32f-c0397133409b":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":{}}},"dae97765-6472-42e4-b129-749784e976f6":{"85cd0e81-1f9c-4a27-a32f-c0397133409b":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}},"be8ed238-12f0-4326-8d68-0b912f7657ee":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}}},"5d570fcf-b8db-4a62-8b84-4953a92d517f":{"be8ed238-12f0-4326-8d68-0b912f7657ee":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":{}}}},"outputs":{"9da98005-545d-4036-a36e-0f354a84cb50":{"85cd0e81-1f9c-4a27-a32f-c0397133409b":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{}},"80e986d3-2297-4f5a-a8a0-da569beb2e7d":{"eb4c2873-890f-4780-a895-53e321f3739e":{}}}}}}},"iconId":"11e997ab-33d0-473a-aa56-1e2fe4d30d5c","keywords":{"fallback":null,"default":null,"parameter":null,"constant":null,"value":null,"store":null,"variable":null},"attributes":{"locked":true}},"62c8e48b-0926-4fa7-8322-02975bf4dc41":{"name":"flow/Depot","interface":{"inputs":{"72a73ffe-8319-4427-878e-3e67f2d150ff":{"type":"any","name":"data","description":"Receives data to be forwarded on trigger signal."},"f58efe33-f70e-4570-ac54-670aaf844385":{"description":"Receives a signal indicating that the corresponding `data` input signal may be forwarded.","type":"any","name":"trigger"}},"outputs":{"eb4c2873-890f-4780-a895-53e321f3739e":{"description":"Sends signal as received through `data` (input).","type":"typeof `data`","name":"data"}}},"implementations":{"cranq":{"connections":{"d0227f18-3f30-44b3-ba97-3a632066ff5c":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"d43f830c-9821-4442-911b-ee7d9447b55b":{"6ad86184-6890-4323-8021-3496a682c98e":{}}}}},"forwards":{"inputs":{"72a73ffe-8319-4427-878e-3e67f2d150ff":{"d0227f18-3f30-44b3-ba97-3a632066ff5c":{"data":{}}},"f58efe33-f70e-4570-ac54-670aaf844385":{"d0227f18-3f30-44b3-ba97-3a632066ff5c":{"trigger":{}}}},"outputs":{"eb4c2873-890f-4780-a895-53e321f3739e":{"d43f830c-9821-4442-911b-ee7d9447b55b":{"data":{}}}}},"nodes":{"d0227f18-3f30-44b3-ba97-3a632066ff5c":{"coordinates":[-53,22.5],"name":"syncer","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"data\", \"trigger\"]"}},"d43f830c-9821-4442-911b-ee7d9447b55b":{"coordinates":[53,-22.5],"name":"splitter","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"data\"]"}}}}},"description":"Forwards signal received through `data` when corresponding signal was received via `trigger`.\n\nExample:\n1. \"A\"@0 received via `data` (input)\n2. Wait 1s\n3. null@0 received via `trigger`\n4. \"A\"@0 is sent through `data` (output)","keywords":{"wait":null,"hold":null,"gate":null},"iconId":"7341443a-8a0a-4a83-b302-effdb497c0f3","attributes":{"locked":true}},"018aabfe-8e71-4e63-b09d-d5b2a0c71836":{"description":"Picks the minimum out of two numbers.\n\nExample:\n\n1. 12@0 is received via `a`\n2. 22@0 is received via `b`\n3. 12@0 is sent via `min`","interface":{"inputs":{"aa1f8f2f-1676-4be6-a8e1-e74acffbeffd":{"type":"number","name":"a","description":"The first value to pick the minimum from"},"4f9a7be2-f54a-4447-bc3c-c813adf0051b":{"type":"number","name":"b","description":"The second value to pick the minimum from"}},"outputs":{"0c5489c9-f28d-4ca4-b93f-3c2bb821a2ae":{"type":"number","name":"min","description":"Sends the minimum of the provided values."}}},"implementations":{"cranq":{"nodes":{"0a44b540-dec5-4a19-a41c-187250c73055":{"coordinates":[0,0],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"a\",\"b\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync a & b"},"828dbd6d-ae34-480d-82d3-fd7abc514372":{"coordinates":[0,0],"description":"","params":{},"prototype":"cbe46428-c283-488f-b491-90f0e0023122","name":"pick min"}},"connections":{"0a44b540-dec5-4a19-a41c-187250c73055":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"828dbd6d-ae34-480d-82d3-fd7abc514372":{"bd6d3a45-6800-4f99-89bf-355e3740c104":{"description":""}}}}},"forwards":{"inputs":{"aa1f8f2f-1676-4be6-a8e1-e74acffbeffd":{"0a44b540-dec5-4a19-a41c-187250c73055":{"a":{}}},"4f9a7be2-f54a-4447-bc3c-c813adf0051b":{"0a44b540-dec5-4a19-a41c-187250c73055":{"b":{}}}},"outputs":{"0c5489c9-f28d-4ca4-b93f-3c2bb821a2ae":{"828dbd6d-ae34-480d-82d3-fd7abc514372":{"4328a906-3097-42a8-b056-7e8f951eef65":{}}}}}}},"name":"number/Min picker","attributes":{"locked":true},"keywords":{"number":null,"min":null,"minimum":null}},"cbe46428-c283-488f-b491-90f0e0023122":{"description":"","interface":{"inputs":{"bd6d3a45-6800-4f99-89bf-355e3740c104":{"type":"{\"a\":number,\"b\":number}","name":"a & b"}},"outputs":{"4328a906-3097-42a8-b056-7e8f951eef65":{"type":"number","name":"min"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"bd6d3a45-6800-4f99-89bf-355e3740c104":"outputs.min(Math.min(data.a, data.b), tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"bd6d3a45-6800-4f99-89bf-355e3740c104":"outputs.min(Math.min(data.a, data.b), tag);"}}},"name":"number/Min picker/Internal","attributes":{"internal":true,"locked":true}},"688cd841-e7b1-4e13-a40b-1bb1dec413f6":{"name":"#workspace/Uniswap v2 clone/Group 3","interface":{"inputs":{"b4a42586-39a2-4221-8fd8-673b6177a389":{"type":"typeof `start` of `factory compiler`","name":"start"},"fc7c8edc-22f7-4f9d-b5ee-72e155409e8d":{"type":"typeof `config` of `factory deployer B`","name":"config"}},"outputs":{"daa4f3d3-2740-484d-8a07-0f0072306f2c":{"type":"typeof `error` of `factory deployer B`","name":"error"},"6b8d3b0d-4d59-4b9d-87b6-5682692cdb0d":{"type":"string","name":"factory address"},"aa325adc-6920-45e6-9b96-13cd43d6c551":{"type":"typeof `events` of `factory deployer B`","name":"events","description":"[Inherited from port `events` of `factory deployer B`] \nMuliplexed events.\nUse a Demultiplexer to separate them if needed."},"a0a5ca88-b262-4dc6-82e8-5e7bfe825bf4":{"type":"any","name":"factory ABI"}}},"implementations":{"cranq":{"nodes":{"523bcb55-9683-4c42-b8ce-56533357dfe3":{"coordinates":[-117,42.5],"name":"factory compiler","prototype":"d595dd66-f2dc-4e96-b13c-d398b142a9bb"},"0578f4e4-0771-48b4-bcef-de91b22af598":{"coordinates":[64,-25.5],"name":"factory deployer B","prototype":"b821b2e7-fa0d-4c28-a4f0-0b5953931815"},"ba58a0fb-28e3-43ba-b008-9023a0a3e94f":{"coordinates":[129,108.5],"name":"contract deployment waiter","prototype":"1e99c75f-d21c-41de-a79c-7080ab8a2883","params":{"465fe590-d79e-4987-b1c6-a414e01773e2":"2"}},"8868bf64-1fa3-400d-9fc8-5451c1ecf978":{"coordinates":[40,221.5],"name":"item getter","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f","params":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":"\"abi\""}}},"connections":{"523bcb55-9683-4c42-b8ce-56533357dfe3":{"2b7af6d6-aa19-4c89-9cba-5c8b4a8f6fb0":{"0578f4e4-0771-48b4-bcef-de91b22af598":{"1be1c7f6-ec26-496e-98a6-10b5a8b9b3f9":{}},"8868bf64-1fa3-400d-9fc8-5451c1ecf978":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}}}},"0578f4e4-0771-48b4-bcef-de91b22af598":{"7863188d-de92-41cc-b5c3-f5326b24ec02":{"ba58a0fb-28e3-43ba-b008-9023a0a3e94f":{"67c68864-f37a-4967-9ddd-3a87617ac325":{}}}}},"forwards":{"inputs":{"b4a42586-39a2-4221-8fd8-673b6177a389":{"523bcb55-9683-4c42-b8ce-56533357dfe3":{"3dd8b80c-d01f-4d47-abff-104f98782ec6":{}}},"fc7c8edc-22f7-4f9d-b5ee-72e155409e8d":{"0578f4e4-0771-48b4-bcef-de91b22af598":{"3d76105d-d387-4ebf-8751-5060aadc4c54":{}}}},"outputs":{"aa325adc-6920-45e6-9b96-13cd43d6c551":{"0578f4e4-0771-48b4-bcef-de91b22af598":{"ff61a589-bab9-48de-997f-300f29073deb":{}}},"daa4f3d3-2740-484d-8a07-0f0072306f2c":{"0578f4e4-0771-48b4-bcef-de91b22af598":{"43026ea7-55a5-4af6-a937-272c8bfaba2a":{}}},"6b8d3b0d-4d59-4b9d-87b6-5682692cdb0d":{"ba58a0fb-28e3-43ba-b008-9023a0a3e94f":{"eadf732a-e84a-47e0-a825-95574d2f25ee":{}}},"a0a5ca88-b262-4dc6-82e8-5e7bfe825bf4":{"8868bf64-1fa3-400d-9fc8-5451c1ecf978":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{}}}}}}},"iconId":"89f4fde2-5391-4f4c-b55a-55ada280f89c","attributes":{"internal":true}},"d595dd66-f2dc-4e96-b13c-d398b142a9bb":{"name":"blockchain/ethereum/Uniswap/v2/Factory compiler","description":"Compiles UniswapV2Factory contract","interface":{"inputs":{"3dd8b80c-d01f-4d47-abff-104f98782ec6":{"type":"typeof `start` of `core compiler`","name":"start"}},"outputs":{"2b7af6d6-aa19-4c89-9cba-5c8b4a8f6fb0":{"type":"typeof `compile core-compiled contracts` of `core compiler`[string]","name":"compiled Factory contract"},"86c83cbf-ac3a-4a4e-bab8-1578bbdcb5ba":{"type":"typeof `error` of `core compiler`","name":"error"}}},"implementations":{"cranq":{"nodes":{"9e4aeeba-4b6a-4a93-8d0a-58480fdcea3f":{"coordinates":[0,12],"name":"core compiler","prototype":"e0f819d4-ec36-45a0-a772-252e08986fdd"},"eb643b73-30d8-4ff9-a1f9-be0e01289d0b":{"coordinates":[117,-68],"name":"item getter","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f","params":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":"\"UniswapV2Factory\""}}},"connections":{"9e4aeeba-4b6a-4a93-8d0a-58480fdcea3f":{"2b981481-b683-4dfd-9738-febe673b08fa":{"eb643b73-30d8-4ff9-a1f9-be0e01289d0b":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}}}}},"forwards":{"inputs":{"3dd8b80c-d01f-4d47-abff-104f98782ec6":{"9e4aeeba-4b6a-4a93-8d0a-58480fdcea3f":{"6847d4a5-3a0a-429b-bf8f-410f4da7e1ab":{}}}},"outputs":{"2b7af6d6-aa19-4c89-9cba-5c8b4a8f6fb0":{"eb643b73-30d8-4ff9-a1f9-be0e01289d0b":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{}}},"86c83cbf-ac3a-4a4e-bab8-1578bbdcb5ba":{"9e4aeeba-4b6a-4a93-8d0a-58480fdcea3f":{"c56db654-2db7-4cb2-ac28-2213dae50128":{}}}}}}},"iconId":"abac34e3-c832-4c7b-b045-62f82ebc3ddb","attributes":{"locked":true}},"e0f819d4-ec36-45a0-a772-252e08986fdd":{"name":"blockchain/ethereum/Uniswap/v2/Core compiler","interface":{"inputs":{"6847d4a5-3a0a-429b-bf8f-410f4da7e1ab":{"type":"any","name":"start","description":""}},"outputs":{"2b981481-b683-4dfd-9738-febe673b08fa":{"type":"typeof `compiled contracts` of `compile`","name":"compile core-compiled contracts"},"c56db654-2db7-4cb2-ac28-2213dae50128":{"type":"any","name":"error"}}},"implementations":{"cranq":{"nodes":{"c4bd90e6-58a3-4311-860d-c393b02014a2":{"coordinates":[-215.81696428571433,10.696428571428555],"name":"output list core","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f","params":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"[\n  \"v2-core/contracts/UniswapV2Factory.sol\",\n  \"v2-core/contracts/UniswapV2ERC20.sol\",\n  \"v2-core/contracts/UniswapV2Pair.sol\",\n  \"v2-core/contracts/interfaces/IERC20.sol\",\n  \"v2-core/contracts/interfaces/IUniswapV2Callee.sol\",\n  \"v2-core/contracts/interfaces/IUniswapV2ERC20.sol\",\n  \"v2-core/contracts/interfaces/IUniswapV2Factory.sol\",\n  \"v2-core/contracts/interfaces/IUniswapV2Pair.sol\",\n  \"v2-core/contracts/libraries/Math.sol\",\n  \"v2-core/contracts/libraries/SafeMath.sol\",\n  \"v2-core/contracts/libraries/UQ112x112.sol\"\n]"}},"80e26d21-bc67-4e97-aca2-078911414e45":{"coordinates":[-213.81696428571433,-93.30357142857144],"name":"compile settings","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f","params":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"{\n  \"includeRoots\": [\n    \"v2-core/contracts\",\n    \"libs\"\n  ],\n  \"solidityVersion\": \"v0.5.16+commit.9c3226ce\",\n    \"compileOptions\": {\n      \"evmVersion\": \"istanbul\",\n      \"optimizer\": {\"enabled\": true, \"runs\": 999999}\n    }\n}"}},"d7171c51-e89b-4504-bc72-6b1edbad818b":{"coordinates":[160.68303571428567,-9.803571428571445],"name":"compile","prototype":"8b0df39b-8337-4107-8211-565d56429b0f","params":{}},"3f5ab142-e534-4422-818d-a21322798476":{"coordinates":[-212.51227678571433,155.10267857142856],"name":"core-v2 sources clone","prototype":"d68f7858-17ef-4a8b-8cde-008cf54de6af"}},"connections":{"c4bd90e6-58a3-4311-860d-c393b02014a2":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{"d7171c51-e89b-4504-bc72-6b1edbad818b":{"60fd9fa4-1462-4c91-915b-11b325c0d479":{}}}},"80e26d21-bc67-4e97-aca2-078911414e45":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{"d7171c51-e89b-4504-bc72-6b1edbad818b":{"eb554de7-b398-413f-8ff0-99dd34a7580a":{}}}},"3f5ab142-e534-4422-818d-a21322798476":{"8db497a4-cf26-4b44-bb99-0a6266736222":{"d7171c51-e89b-4504-bc72-6b1edbad818b":{"7654e398-a401-4115-98b8-c2b8eba66ed4":{}}}}},"forwards":{"inputs":{"6847d4a5-3a0a-429b-bf8f-410f4da7e1ab":{"80e26d21-bc67-4e97-aca2-078911414e45":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}},"c4bd90e6-58a3-4311-860d-c393b02014a2":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}},"3f5ab142-e534-4422-818d-a21322798476":{"858f2cdf-e216-49be-9910-aa483d782f62":{}}}},"outputs":{"2b981481-b683-4dfd-9738-febe673b08fa":{"d7171c51-e89b-4504-bc72-6b1edbad818b":{"58f95201-dc73-469a-8503-ce955c514032":{}}},"c56db654-2db7-4cb2-ac28-2213dae50128":{"d7171c51-e89b-4504-bc72-6b1edbad818b":{"d00232d5-3801-4820-92ed-43ae75ccb626":{}}}}}}},"original":"8a9dd936-b46f-49bf-b886-cd336ef4c867","description":"Compiles Uniswap V2 core contracts","attributes":{"locked":true}},"d68f7858-17ef-4a8b-8cde-008cf54de6af":{"name":"blockchain/ethereum/Uniswap/v2/Core source code","interface":{"inputs":{"858f2cdf-e216-49be-9910-aa483d782f62":{"type":"any","name":"start","description":""}},"outputs":{"8db497a4-cf26-4b44-bb99-0a6266736222":{"type":"typeof `data` of `uniswap v2-core instrumented source`","name":"v2-core sources","description":"[Inherited from port `data` of `uniswap v2-core sources`] \nSends store contents."}}},"implementations":{"cranq":{"nodes":{"0830922f-ebb7-4894-b9e3-e5edb69ae3f0":{"coordinates":[2.5,2],"name":"uniswap v2-core instrumented source","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f","params":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"{\n  \"v2-core\": {\n    \"contracts\": {\n      \"interfaces\": {\n        \"IERC20.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n    function symbol() external view returns (string memory);\\r\\n    function decimals() external view returns (uint8);\\r\\n    function totalSupply() external view returns (uint);\\r\\n    function balanceOf(address owner) external view returns (uint);\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool);\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n}\\r\\n\",\n        \"IUniswapV2Callee.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Callee {\\r\\n    function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) external;\\r\\n}\\r\\n\",\n        \"IUniswapV2ERC20.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2ERC20 {\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    function name() external pure returns (string memory);\\r\\n    function symbol() external pure returns (string memory);\\r\\n    function decimals() external pure returns (uint8);\\r\\n    function totalSupply() external view returns (uint);\\r\\n    function balanceOf(address owner) external view returns (uint);\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool);\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n    function nonces(address owner) external view returns (uint);\\r\\n\\r\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n}\\r\\n\",\n        \"IUniswapV2Factory.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n    function feeToSetter() external view returns (address);\\r\\n\\r\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n    function allPairs(uint) external view returns (address pair);\\r\\n    function allPairsLength() external view returns (uint);\\r\\n\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n    function setFeeTo(address) external;\\r\\n    function setFeeToSetter(address) external;\\r\\n}\\r\\n\",\n        \"IUniswapV2Pair.sol\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Pair {\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    function name() external pure returns (string memory);\\r\\n    function symbol() external pure returns (string memory);\\r\\n    function decimals() external pure returns (uint8);\\r\\n    function totalSupply() external view returns (uint);\\r\\n    function balanceOf(address owner) external view returns (uint);\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool);\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n    function nonces(address owner) external view returns (uint);\\r\\n\\r\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n    event Swap(\\r\\n        address indexed sender,\\r\\n        uint amount0In,\\r\\n        uint amount1In,\\r\\n        uint amount0Out,\\r\\n        uint amount1Out,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n    function factory() external view returns (address);\\r\\n    function token0() external view returns (address);\\r\\n    function token1() external view returns (address);\\r\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n    function price0CumulativeLast() external view returns (uint);\\r\\n    function price1CumulativeLast() external view returns (uint);\\r\\n    function kLast() external view returns (uint);\\r\\n\\r\\n    function mint(address to) external returns (uint liquidity);\\r\\n    function burn(address to) external returns (uint amount0, uint amount1);\\r\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n    function skim(address to) external;\\r\\n    function sync() external;\\r\\n\\r\\n    function initialize(address, address) external;\\r\\n}\\r\\n\"\n      },\n      \"libraries\": {\n        \"Math.sol\": \"pragma solidity =0.5.16;\\r\\n\\r\\n// a library for performing various math operations\\r\\n\\r\\nlibrary Math {\\r\\n    function min(uint x, uint y) internal pure returns (uint z) {\\r\\n        z = x < y ? x : y;\\r\\n    }\\r\\n\\r\\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\\r\\n    function sqrt(uint y) internal pure returns (uint z) {\\r\\n        if (y > 3) {\\r\\n            z = y;\\r\\n            uint x = y / 2 + 1;\\r\\n            while (x < z) {\\r\\n                z = x;\\r\\n                x = (y / x + x) / 2;\\r\\n            }\\r\\n        } else if (y != 0) {\\r\\n            z = 1;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\n        \"SafeMath.sol\": \"pragma solidity =0.5.16;\\r\\n\\r\\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint x, uint y) internal pure returns (uint z) {\\r\\n        require((z = x + y) >= x, 'ds-math-add-overflow');\\r\\n    }\\r\\n\\r\\n    function sub(uint x, uint y) internal pure returns (uint z) {\\r\\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\\r\\n    }\\r\\n\\r\\n    function mul(uint x, uint y) internal pure returns (uint z) {\\r\\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\\r\\n    }\\r\\n}\\r\\n\",\n        \"UQ112x112.sol\": \"pragma solidity =0.5.16;\\r\\n\\r\\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\\r\\n\\r\\n// range: [0, 2**112 - 1]\\r\\n// resolution: 1 / 2**112\\r\\n\\r\\nlibrary UQ112x112 {\\r\\n    uint224 constant Q112 = 2**112;\\r\\n\\r\\n    // encode a uint112 as a UQ112x112\\r\\n    function encode(uint112 y) internal pure returns (uint224 z) {\\r\\n        z = uint224(y) * Q112; // never overflows\\r\\n    }\\r\\n\\r\\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\\r\\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\\r\\n        z = x / uint224(y);\\r\\n    }\\r\\n}\\r\\n\"\n      },\n      \"test\": {\n        \"ERC20.sol\": \"pragma solidity =0.5.16;\\r\\n\\r\\nimport '../UniswapV2ERC20.sol';\\r\\n\\r\\ncontract ERC20 is UniswapV2ERC20 {\\r\\n    constructor(uint _totalSupply) public {\\r\\n        _mint(msg.sender, _totalSupply);\\r\\n    }\\r\\n}\\r\\n\"\n      },\n      \"UniswapV2ERC20.sol\": \"pragma solidity =0.5.16;\\r\\n\\r\\nimport './interfaces/IUniswapV2ERC20.sol';\\r\\nimport './libraries/SafeMath.sol';\\r\\n\\r\\ncontract UniswapV2ERC20 is IUniswapV2ERC20 {\\r\\n    using SafeMath for uint;\\r\\n\\r\\n    string public constant name = 'Uniswap V2';\\r\\n    string public constant symbol = 'UNI-V2';\\r\\n    uint8 public constant decimals = 18;\\r\\n    uint  public totalSupply;\\r\\n    mapping(address => uint) public balanceOf;\\r\\n    mapping(address => mapping(address => uint)) public allowance;\\r\\n\\r\\n    bytes32 public DOMAIN_SEPARATOR;\\r\\n    // keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\r\\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\\r\\n    mapping(address => uint) public nonces;\\r\\n\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    constructor() public {\\r\\n        uint chainId;\\r\\n        assembly {\\r\\n            chainId := chainid\\r\\n        }\\r\\n        DOMAIN_SEPARATOR = keccak256(\\r\\n            abi.encode(\\r\\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\\r\\n                keccak256(bytes(name)),\\r\\n                keccak256(bytes('1')),\\r\\n                chainId,\\r\\n                address(this)\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function _mint(address to, uint value) internal {\\r\\n        totalSupply = totalSupply.add(value);\\r\\n        balanceOf[to] = balanceOf[to].add(value);\\r\\n        emit Transfer(address(0), to, value);\\r\\n    }\\r\\n\\r\\n    function _burn(address from, uint value) internal {\\r\\n        balanceOf[from] = balanceOf[from].sub(value);\\r\\n        totalSupply = totalSupply.sub(value);\\r\\n        emit Transfer(from, address(0), value);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint value) private {\\r\\n        allowance[owner][spender] = value;\\r\\n        emit Approval(owner, spender, value);\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint value) private {\\r\\n        balanceOf[from] = balanceOf[from].sub(value);\\r\\n        balanceOf[to] = balanceOf[to].add(value);\\r\\n        emit Transfer(from, to, value);\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool) {\\r\\n        _approve(msg.sender, spender, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transfer(address to, uint value) external returns (bool) {\\r\\n        _transfer(msg.sender, to, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool) {\\r\\n        if (allowance[from][msg.sender] != uint(-1)) {\\r\\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\\r\\n        }\\r\\n        _transfer(from, to, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\\r\\n        require(deadline >= block.timestamp, 'UniswapV2: EXPIRED');\\r\\n        bytes32 digest = keccak256(\\r\\n            abi.encodePacked(\\r\\n                '\\\\x19\\\\x01',\\r\\n                DOMAIN_SEPARATOR,\\r\\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\r\\n            )\\r\\n        );\\r\\n        address recoveredAddress = ecrecover(digest, v, r, s);\\r\\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE');\\r\\n        _approve(owner, spender, value);\\r\\n    }\\r\\n}\\r\\n\",\n      \"UniswapV2Factory.sol\": \"pragma solidity =0.5.16;\\r\\n\\r\\nimport './interfaces/IUniswapV2Factory.sol';\\r\\nimport './UniswapV2Pair.sol';\\r\\n\\r\\ncontract UniswapV2Factory is IUniswapV2Factory {\\r\\n\\tbytes32 public constant INIT_CODE_PAIR_HASH = keccak256(abi.encodePacked(type(UniswapV2Pair).creationCode));\\r\\n    address public feeTo;\\r\\n    address public feeToSetter;\\r\\n\\r\\n    mapping(address => mapping(address => address)) public getPair;\\r\\n    address[] public allPairs;\\r\\n\\r\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n    constructor(address _feeToSetter) public {\\r\\n        feeToSetter = _feeToSetter;\\r\\n    }\\r\\n\\r\\n    function allPairsLength() external view returns (uint) {\\r\\n        return allPairs.length;\\r\\n    }\\r\\n\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\\r\\n        require(tokenA != tokenB, 'UniswapV2: IDENTICAL_ADDRESSES');\\r\\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\\r\\n        require(token0 != address(0), 'UniswapV2: ZERO_ADDRESS');\\r\\n        require(getPair[token0][token1] == address(0), 'UniswapV2: PAIR_EXISTS'); // single check is sufficient\\r\\n        bytes memory bytecode = type(UniswapV2Pair).creationCode;\\r\\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\\r\\n        assembly {\\r\\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\\r\\n        }\\r\\n        IUniswapV2Pair(pair).initialize(token0, token1);\\r\\n        getPair[token0][token1] = pair;\\r\\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\\r\\n        allPairs.push(pair);\\r\\n        emit PairCreated(token0, token1, pair, allPairs.length);\\r\\n    }\\r\\n\\r\\n    function setFeeTo(address _feeTo) external {\\r\\n        require(msg.sender == feeToSetter, 'UniswapV2: FORBIDDEN');\\r\\n        feeTo = _feeTo;\\r\\n    }\\r\\n\\r\\n    function setFeeToSetter(address _feeToSetter) external {\\r\\n        require(msg.sender == feeToSetter, 'UniswapV2: FORBIDDEN');\\r\\n        feeToSetter = _feeToSetter;\\r\\n    }\\r\\n}\\r\\n\",\n      \"UniswapV2Pair.sol\": \"pragma solidity =0.5.16;\\r\\n\\r\\nimport './interfaces/IUniswapV2Pair.sol';\\r\\nimport './UniswapV2ERC20.sol';\\r\\nimport './libraries/Math.sol';\\r\\nimport './libraries/UQ112x112.sol';\\r\\nimport './interfaces/IERC20.sol';\\r\\nimport './interfaces/IUniswapV2Factory.sol';\\r\\nimport './interfaces/IUniswapV2Callee.sol';\\r\\n\\r\\ncontract UniswapV2Pair is IUniswapV2Pair, UniswapV2ERC20 {\\r\\n    using SafeMath  for uint;\\r\\n    using UQ112x112 for uint224;\\r\\n\\r\\n    uint public constant MINIMUM_LIQUIDITY = 10**3;\\r\\n    bytes4 private constant SELECTOR = bytes4(keccak256(bytes('transfer(address,uint256)')));\\r\\n\\r\\n    address public factory;\\r\\n    address public token0;\\r\\n    address public token1;\\r\\n\\r\\n    uint112 private reserve0;           // uses single storage slot, accessible via getReserves\\r\\n    uint112 private reserve1;           // uses single storage slot, accessible via getReserves\\r\\n    uint32  private blockTimestampLast; // uses single storage slot, accessible via getReserves\\r\\n\\r\\n    uint public price0CumulativeLast;\\r\\n    uint public price1CumulativeLast;\\r\\n    uint public kLast; // reserve0 * reserve1, as of immediately after the most recent liquidity event\\r\\n\\r\\n    uint private unlocked = 1;\\r\\n    modifier lock() {\\r\\n        require(unlocked == 1, 'UniswapV2: LOCKED');\\r\\n        unlocked = 0;\\r\\n        _;\\r\\n        unlocked = 1;\\r\\n    }\\r\\n\\r\\n    function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {\\r\\n        _reserve0 = reserve0;\\r\\n        _reserve1 = reserve1;\\r\\n        _blockTimestampLast = blockTimestampLast;\\r\\n    }\\r\\n\\r\\n    function _safeTransfer(address token, address to, uint value) private {\\r\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value));\\r\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'UniswapV2: TRANSFER_FAILED');\\r\\n    }\\r\\n\\r\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n    event Swap(\\r\\n        address indexed sender,\\r\\n        uint amount0In,\\r\\n        uint amount1In,\\r\\n        uint amount0Out,\\r\\n        uint amount1Out,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n    constructor() public {\\r\\n        factory = msg.sender;\\r\\n    }\\r\\n\\r\\n    // called once by the factory at time of deployment\\r\\n    function initialize(address _token0, address _token1) external {\\r\\n        require(msg.sender == factory, 'UniswapV2: FORBIDDEN'); // sufficient check\\r\\n        token0 = _token0;\\r\\n        token1 = _token1;\\r\\n    }\\r\\n\\r\\n    // update reserves and, on the first call per block, price accumulators\\r\\n    function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\\r\\n        require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');\\r\\n        uint32 blockTimestamp = uint32(block.timestamp % 2**32);\\r\\n        uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\\r\\n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\\r\\n            // * never overflows, and + overflow is desired\\r\\n            price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\\r\\n            price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\\r\\n        }\\r\\n        reserve0 = uint112(balance0);\\r\\n        reserve1 = uint112(balance1);\\r\\n        blockTimestampLast = blockTimestamp;\\r\\n        emit Sync(reserve0, reserve1);\\r\\n    }\\r\\n\\r\\n    // if fee is on, mint liquidity equivalent to 1/6th of the growth in sqrt(k)\\r\\n    function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\\r\\n        address feeTo = IUniswapV2Factory(factory).feeTo();\\r\\n        feeOn = feeTo != address(0);\\r\\n        uint _kLast = kLast; // gas savings\\r\\n        if (feeOn) {\\r\\n            if (_kLast != 0) {\\r\\n                uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\\r\\n                uint rootKLast = Math.sqrt(_kLast);\\r\\n                if (rootK > rootKLast) {\\r\\n                    uint numerator = totalSupply.mul(rootK.sub(rootKLast));\\r\\n                    uint denominator = rootK.mul(5).add(rootKLast);\\r\\n                    uint liquidity = numerator / denominator;\\r\\n                    if (liquidity > 0) _mint(feeTo, liquidity);\\r\\n                }\\r\\n            }\\r\\n        } else if (_kLast != 0) {\\r\\n            kLast = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // this low-level function should be called from a contract which performs important safety checks\\r\\n    function mint(address to) external lock returns (uint liquidity) {\\r\\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\\r\\n        uint balance0 = IERC20(token0).balanceOf(address(this));\\r\\n        uint balance1 = IERC20(token1).balanceOf(address(this));\\r\\n        uint amount0 = balance0.sub(_reserve0);\\r\\n        uint amount1 = balance1.sub(_reserve1);\\r\\n\\r\\n        bool feeOn = _mintFee(_reserve0, _reserve1);\\r\\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\\r\\n        if (_totalSupply == 0) {\\r\\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\\r\\n           _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\\r\\n        } else {\\r\\n            liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\\r\\n        }\\r\\n        require(liquidity > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');\\r\\n        _mint(to, liquidity);\\r\\n\\r\\n        _update(balance0, balance1, _reserve0, _reserve1);\\r\\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\\r\\n        emit Mint(msg.sender, amount0, amount1);\\r\\n    }\\r\\n\\r\\n    // this low-level function should be called from a contract which performs important safety checks\\r\\n    function burn(address to) external lock returns (uint amount0, uint amount1) {\\r\\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\\r\\n        address _token0 = token0;                                // gas savings\\r\\n        address _token1 = token1;                                // gas savings\\r\\n        uint balance0 = IERC20(_token0).balanceOf(address(this));\\r\\n        uint balance1 = IERC20(_token1).balanceOf(address(this));\\r\\n        uint liquidity = balanceOf[address(this)];\\r\\n\\r\\n        bool feeOn = _mintFee(_reserve0, _reserve1);\\r\\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\\r\\n        amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\\r\\n        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\\r\\n        require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\\r\\n        _burn(address(this), liquidity);\\r\\n        _safeTransfer(_token0, to, amount0);\\r\\n        _safeTransfer(_token1, to, amount1);\\r\\n        balance0 = IERC20(_token0).balanceOf(address(this));\\r\\n        balance1 = IERC20(_token1).balanceOf(address(this));\\r\\n\\r\\n        _update(balance0, balance1, _reserve0, _reserve1);\\r\\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\\r\\n        emit Burn(msg.sender, amount0, amount1, to);\\r\\n    }\\r\\n\\r\\n    // this low-level function should be called from a contract which performs important safety checks\\r\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\\r\\n        require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');\\r\\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\\r\\n        require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY');\\r\\n\\r\\n        uint balance0;\\r\\n        uint balance1;\\r\\n        { // scope for _token{0,1}, avoids stack too deep errors\\r\\n        address _token0 = token0;\\r\\n        address _token1 = token1;\\r\\n        require(to != _token0 && to != _token1, 'UniswapV2: INVALID_TO');\\r\\n        if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\\r\\n        if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\\r\\n        if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\\r\\n        balance0 = IERC20(_token0).balanceOf(address(this));\\r\\n        balance1 = IERC20(_token1).balanceOf(address(this));\\r\\n        }\\r\\n        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\\r\\n        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\\r\\n        require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\\r\\n        { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\\r\\n        uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\\r\\n        uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3));\\r\\n        require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(1000**2), 'UniswapV2: K');\\r\\n        }\\r\\n\\r\\n        _update(balance0, balance1, _reserve0, _reserve1);\\r\\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\\r\\n    }\\r\\n\\r\\n    // force balances to match reserves\\r\\n    function skim(address to) external lock {\\r\\n        address _token0 = token0; // gas savings\\r\\n        address _token1 = token1; // gas savings\\r\\n        _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0));\\r\\n        _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1));\\r\\n    }\\r\\n\\r\\n    // force reserves to match balances\\r\\n    function sync() external lock {\\r\\n        _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1);\\r\\n    }\\r\\n}\\r\\n\"\n    }\n  }\n}"}}},"connections":{},"forwards":{"inputs":{"858f2cdf-e216-49be-9910-aa483d782f62":{"0830922f-ebb7-4894-b9e3-e5edb69ae3f0":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}}}},"outputs":{"8db497a4-cf26-4b44-bb99-0a6266736222":{"0830922f-ebb7-4894-b9e3-e5edb69ae3f0":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{}}}}}}},"iconId":"11e997ab-33d0-473a-aa56-1e2fe4d30d5c","original":"27f1c9dd-20b0-43f7-b088-85f4afbc52d0","description":"Holds the Uniswap V2 Core source code in a structured way.","attributes":{"locked":true}},"b821b2e7-fa0d-4c28-a4f0-0b5953931815":{"name":"blockchain/ethereum/Uniswap/v2/Factory deployer","description":"Deployes UniswapV2Factory contract to the chain","interface":{"inputs":{"ae906061-5695-4e79-aa79-a30b6ab50ca3":{"type":"string","name":"fee setter address","description":"Optional. Account address of fee setter.\n\nSee: https://ethereum.org/en/developers/tutorials/uniswap-v2-annotated-code/#UniswapV2Factory"},"3d76105d-d387-4ebf-8751-5060aadc4c54":{"type":"{\n    \"providerUrl\": string, \n    \"privateKey\": string,\n    \"accountAddress\": string\n}","name":"config"},"1be1c7f6-ec26-496e-98a6-10b5a8b9b3f9":{"type":"typeof `contract` of `deploy factory contract`","name":"factory contract"}},"outputs":{"ff61a589-bab9-48de-997f-300f29073deb":{"type":"typeof `events` of `deploy factory contract`","name":"events","description":"Muliplexed events.\nUse a Demultiplexer to separate them if needed."},"43026ea7-55a5-4af6-a937-272c8bfaba2a":{"type":"typeof `error` of `deploy factory contract`","name":"error"},"7863188d-de92-41cc-b5c3-f5326b24ec02":{"type":"{\n\"confirmationNumber\": number\n}","name":"confirmation"}}},"implementations":{"cranq":{"nodes":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"coordinates":[128,-2],"name":"deploy factory contract","prototype":"cf8402d8-2801-4b12-9d91-c0edf557f2d9","params":{"9c78c7d9-7aee-4e04-92d6-5342e133d6b5":"{\"gas\": 3150623}","6a44b0aa-dd80-42a5-ba19-15a130f0206a":"false"}},"b3f8212b-2d52-42de-b3bf-2e6f4612c407":{"coordinates":[-309.8046875,-218.90625],"name":"item getter","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f","params":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":"\"accountAddress\""}},"0cc6ed66-8a7c-428c-b9c2-98eee354bff6":{"coordinates":[-26.8046875,-110.90625],"name":"wrapper","prototype":"46f037ec-7586-4653-bcc8-363b7e769c41"},"657b8bbb-65eb-4111-9f13-dd8fdc14c678":{"coordinates":[-147,-146],"name":"parameter with default","prototype":"a6599b7b-502d-437b-9c84-0f504921bb41"}},"connections":{"0cc6ed66-8a7c-428c-b9c2-98eee354bff6":{"51232407-ba2f-430d-b3fe-883a465cedd0":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"0618062e-aa1f-4a81-9727-fa078f93332f":{}}}},"b3f8212b-2d52-42de-b3bf-2e6f4612c407":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{"657b8bbb-65eb-4111-9f13-dd8fdc14c678":{"5d570fcf-b8db-4a62-8b84-4953a92d517f":{}}}},"657b8bbb-65eb-4111-9f13-dd8fdc14c678":{"9da98005-545d-4036-a36e-0f354a84cb50":{"0cc6ed66-8a7c-428c-b9c2-98eee354bff6":{"3e97c47b-9e13-48f3-b6a9-95cd8b676a8e":{}}}}},"forwards":{"inputs":{"3d76105d-d387-4ebf-8751-5060aadc4c54":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"21dc533c-92b5-4354-9d81-1cfd46f095c8":{}},"b3f8212b-2d52-42de-b3bf-2e6f4612c407":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}},"657b8bbb-65eb-4111-9f13-dd8fdc14c678":{"dae97765-6472-42e4-b129-749784e976f6":{}}},"1be1c7f6-ec26-496e-98a6-10b5a8b9b3f9":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"ca45ccd6-b1fb-4bb7-86ca-b9e774f899bb":{}}},"ae906061-5695-4e79-aa79-a30b6ab50ca3":{"657b8bbb-65eb-4111-9f13-dd8fdc14c678":{"01ef7f62-ecc9-4fd2-8f70-980a2d25795a":{}}}},"outputs":{"43026ea7-55a5-4af6-a937-272c8bfaba2a":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"c8505107-dfeb-4ad6-a08c-2543a30b2887":{}}},"7863188d-de92-41cc-b5c3-f5326b24ec02":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"a6fdcbf5-7937-47f1-89db-2807b758842f":{}}},"ff61a589-bab9-48de-997f-300f29073deb":{"9d688e36-c761-45b7-b5a6-156c56048fa0":{"3483ab3b-5295-4761-8832-ec968f7399d9":{}}}}}}},"iconId":"89f4fde2-5391-4f4c-b55a-55ada280f89c","attributes":{"locked":true}},"1d2a6438-e4bd-4105-b491-cebbb4cae348":{"description":"Logs received data and tag to the output. Formats data as JSON.","interface":{"inputs":{"73758fba-7b0c-4ea6-8fec-0b56982d5451":{"description":"","type":"any","name":"data"}},"outputs":{}},"implementations":{"cranq":{"nodes":{"178673a4-37db-4ff2-bade-7b2673a85704":{"coordinates":[24,81],"description":"","params":{},"prototype":"8992956b-cea7-4b73-8f30-d40f49893f9a","name":"log"},"bb5d26bd-66e5-460e-a815-b2fb0e043c7e":{"coordinates":[-21,-63],"description":"","params":{"deb0a917-b393-4326-b573-ec6a6f82ffec":"true"},"prototype":"3820f096-6216-4049-b374-c98684387fea","name":"serialize"}},"connections":{"bb5d26bd-66e5-460e-a815-b2fb0e043c7e":{"25650a4f-7e35-4754-bc8f-1a57f538166f":{"178673a4-37db-4ff2-bade-7b2673a85704":{"f6458629-a8b7-4338-b8c1-94eee78f7af5":{"description":""}}}}},"forwards":{"inputs":{"73758fba-7b0c-4ea6-8fec-0b56982d5451":{"bb5d26bd-66e5-460e-a815-b2fb0e043c7e":{"cc00cc18-d6ce-4661-8dd5-eb3140a3acae":{}}}},"outputs":{}}}},"name":"debug/Logger","iconId":"6e06ed83-301e-41ca-bae9-1257efb8e703","attributes":{"locked":true}},"7bbbdf92-502d-470b-84ec-5efbd61d44fd":{"name":"#workspace/Uniswap v2 clone/Group 4","interface":{"inputs":{"6f7ec5a1-7049-45d6-867c-14d8b522ffaf":{"type":"any","name":"pairs"},"3a8d9830-3642-42ae-af03-055c099aeb0a":{"type":"any","name":"config"},"cdbbece1-c5db-4481-83c0-b2101e03fe45":{"type":"typeof `router contract` of `liquidities adder`","name":"router contract"}},"outputs":{"320e50f1-a96f-4f21-b3d5-6ac93f7b31d7":{"type":"any","name":"result"},"f49d6af9-9ab4-4546-8faa-c597546de3a7":{"type":"any","name":"error"}}},"implementations":{"cranq":{"nodes":{"e0728891-a259-47aa-bdfb-3067e1d32416":{"coordinates":[260,-54],"name":"liquidities adder","prototype":"5ed430d1-bb98-4b36-a351-969af7585e46"},"abca443d-4129-4259-bcfd-f9810d6b44b5":{"coordinates":[101,-250],"name":"adder","prototype":"172e2a79-6dd8-450d-9c60-99073c933eeb"},"5ba3799d-ae18-456c-b22c-281999d15068":{"coordinates":[-72.5,-259.5],"name":"calculate deadline","prototype":"147c702a-db38-4570-b875-ab166ae1319c"},"f0cf53b8-8cc7-46b0-863c-7e814ab04283":{"coordinates":[-62,-136],"name":"item getter","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f","params":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":"\"accountAddress\""}}},"connections":{"abca443d-4129-4259-bcfd-f9810d6b44b5":{"3157073c-40d2-44fd-a94b-ea3adcce3440":{"e0728891-a259-47aa-bdfb-3067e1d32416":{"b8628829-12f1-4e72-8d6f-c49372d6a081":{}}}},"5ba3799d-ae18-456c-b22c-281999d15068":{"6b7f4fea-9e9c-4026-9bf9-1405591400ca":{"abca443d-4129-4259-bcfd-f9810d6b44b5":{"f8db2394-8b73-41b1-8cee-570acf0ca976":{}}},"943705ad-e7cc-4633-a8cf-008f165bd16e":{"abca443d-4129-4259-bcfd-f9810d6b44b5":{"824b46d4-6dad-4859-939f-376702e84adb":{}}}},"f0cf53b8-8cc7-46b0-863c-7e814ab04283":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{"e0728891-a259-47aa-bdfb-3067e1d32416":{"3c09e73b-ae71-4668-95fc-8fb9041ab544":{}}}}},"forwards":{"inputs":{"6f7ec5a1-7049-45d6-867c-14d8b522ffaf":{"e0728891-a259-47aa-bdfb-3067e1d32416":{"a710bb66-7d75-4a4b-8a7a-657cb4328897":{}}},"3a8d9830-3642-42ae-af03-055c099aeb0a":{"e0728891-a259-47aa-bdfb-3067e1d32416":{"0cea3ff4-443d-449c-9db2-05fb3815264b":{}},"f0cf53b8-8cc7-46b0-863c-7e814ab04283":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}}},"cdbbece1-c5db-4481-83c0-b2101e03fe45":{"e0728891-a259-47aa-bdfb-3067e1d32416":{"1a3a20cd-3619-4f71-80e3-991b67aa633c":{}},"5ba3799d-ae18-456c-b22c-281999d15068":{"ab9f3927-d793-46eb-9813-48684812bd65":{}}}},"outputs":{"320e50f1-a96f-4f21-b3d5-6ac93f7b31d7":{"e0728891-a259-47aa-bdfb-3067e1d32416":{"b69fb11c-5508-4a80-837d-3976f69f9cd2":{}}},"f49d6af9-9ab4-4546-8faa-c597546de3a7":{"e0728891-a259-47aa-bdfb-3067e1d32416":{"0f7509cf-9bf3-4774-b97a-35ad0bc0904d":{}}}}}}},"iconId":"6e06ed83-301e-41ca-bae9-1257efb8e703","attributes":{"internal":true}},"5ed430d1-bb98-4b36-a351-969af7585e46":{"name":"blockchain/ethereum/Uniswap/v2/Liquidities adder","description":"Add liquidity to multiple pools.","interface":{"inputs":{"a710bb66-7d75-4a4b-8a7a-657cb4328897":{"type":"[typeof `tokenA` of `add liquidity`, typeof `tokenB or ETH` of `add liquidity`][]","name":"pairs"},"3c09e73b-ae71-4668-95fc-8fb9041ab544":{"type":"string","name":"to address"},"b8628829-12f1-4e72-8d6f-c49372d6a081":{"type":"number","name":"deadline"},"1a3a20cd-3619-4f71-80e3-991b67aa633c":{"type":"typeof `router contract` of `add liquidity`","name":"router contract"},"0cea3ff4-443d-449c-9db2-05fb3815264b":{"type":"typeof `credentials` of `add liquidity`","name":"credentials"}},"outputs":{"b69fb11c-5508-4a80-837d-3976f69f9cd2":{"type":"typeof `result` of `add liquidity`","name":"result"},"0f7509cf-9bf3-4774-b97a-35ad0bc0904d":{"type":"typeof `error` of `add liquidity`","name":"error"}}},"implementations":{"cranq":{"nodes":{"d9a30d41-2946-4cb3-a3b7-23cb197db9fe":{"coordinates":[35,-19],"name":"add liquidity","prototype":"5cc08991-9e11-460e-bbbd-82b4d4b685f4"},"c7ad3b00-3c53-4fbe-8d3f-b2a50b16fb71":{"coordinates":[-78.5,-86.5],"name":"splitter","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[0,1]"}},"1b19ef0f-612d-4130-91be-ad385babbc37":{"coordinates":[-230.5,-23.5],"name":"repeater","prototype":"384a63e5-dbde-4312-99d1-257fa935c2fe"},"4e19d8fa-49f6-480f-aa06-e21ddce741db":{"coordinates":[-334.5,-59.5],"name":"forwarder","prototype":"420bb3c5-79a9-4b4d-934e-ee04d07f92b0"},"ae2166c0-60cb-4583-b23c-7c334eb588bc":{"coordinates":[-342.5,3.5],"name":"syncer","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[0,1,2,3]"}},"4dc742fa-11d3-41b7-b97b-c22c22af8a87":{"coordinates":[-108.5,-24.5],"name":"splitter B","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[0,1,2,3]"}},"f15b0853-85a0-49f1-ad88-0f063d6f39b2":{"coordinates":[136.5,-276.5],"name":"step iterator","prototype":"efbace8a-a0c1-4495-932c-7752fcc212d3"}},"connections":{"c7ad3b00-3c53-4fbe-8d3f-b2a50b16fb71":{"0":{"d9a30d41-2946-4cb3-a3b7-23cb197db9fe":{"ca036788-5f7a-4d08-a4cf-f4223b4ce604":{}}},"1":{"d9a30d41-2946-4cb3-a3b7-23cb197db9fe":{"78d8f5a9-17e7-45e2-b778-f46cda29a80a":{}}}},"4e19d8fa-49f6-480f-aa06-e21ddce741db":{"0a9cd5b0-6de6-4c69-aa04-2816de994173":{"1b19ef0f-612d-4130-91be-ad385babbc37":{"eacfcdd3-c907-40b3-86a5-15855a7b4caf":{}}}},"ae2166c0-60cb-4583-b23c-7c334eb588bc":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"1b19ef0f-612d-4130-91be-ad385babbc37":{"c2471c2d-1ad7-4738-a3d8-87ebc566aa64":{}}}},"1b19ef0f-612d-4130-91be-ad385babbc37":{"987cc1f0-ddda-4f01-8358-d32676a0861e":{"4dc742fa-11d3-41b7-b97b-c22c22af8a87":{"6ad86184-6890-4323-8021-3496a682c98e":{}}}},"4dc742fa-11d3-41b7-b97b-c22c22af8a87":{"0":{"d9a30d41-2946-4cb3-a3b7-23cb197db9fe":{"7de50776-c33c-49fd-ae41-bb85b3da0501":{}}},"1":{"d9a30d41-2946-4cb3-a3b7-23cb197db9fe":{"76512fec-78df-43fd-a9fd-20e33817bb49":{}}},"2":{"d9a30d41-2946-4cb3-a3b7-23cb197db9fe":{"a1a9f3b2-f3b9-4917-b77a-bf507b19f47f":{}}},"3":{"d9a30d41-2946-4cb3-a3b7-23cb197db9fe":{"77827705-1577-47c3-904c-8dff54475e8d":{}}}},"f15b0853-85a0-49f1-ad88-0f063d6f39b2":{"da78f0ed-be96-41f5-90e5-bf31ef6fd262":{"c7ad3b00-3c53-4fbe-8d3f-b2a50b16fb71":{"6ad86184-6890-4323-8021-3496a682c98e":{}}}},"d9a30d41-2946-4cb3-a3b7-23cb197db9fe":{"ca296aaa-e80e-4141-8a2c-2be8aad5dec2":{"f15b0853-85a0-49f1-ad88-0f063d6f39b2":{"6724a763-9749-41bb-a3dc-2ec659c8b72b":{}}}}},"forwards":{"inputs":{"a710bb66-7d75-4a4b-8a7a-657cb4328897":{"4e19d8fa-49f6-480f-aa06-e21ddce741db":{"b0fb4a37-09d5-462e-952a-c3ab29a47e82":{}},"f15b0853-85a0-49f1-ad88-0f063d6f39b2":{"d079a46d-16a1-4019-b037-eb25ff63b344":{}}},"3c09e73b-ae71-4668-95fc-8fb9041ab544":{"ae2166c0-60cb-4583-b23c-7c334eb588bc":{"0":{}}},"b8628829-12f1-4e72-8d6f-c49372d6a081":{"ae2166c0-60cb-4583-b23c-7c334eb588bc":{"1":{}}},"1a3a20cd-3619-4f71-80e3-991b67aa633c":{"ae2166c0-60cb-4583-b23c-7c334eb588bc":{"2":{}}},"0cea3ff4-443d-449c-9db2-05fb3815264b":{"ae2166c0-60cb-4583-b23c-7c334eb588bc":{"3":{}}}},"outputs":{"0f7509cf-9bf3-4774-b97a-35ad0bc0904d":{"d9a30d41-2946-4cb3-a3b7-23cb197db9fe":{"4fbce32e-7012-4bde-bdc5-052501a3efde":{}}},"b69fb11c-5508-4a80-837d-3976f69f9cd2":{"f15b0853-85a0-49f1-ad88-0f063d6f39b2":{"ed7be79a-f008-4d37-8d43-faf2607e6ef5":{}}}}}}},"iconId":"6e06ed83-301e-41ca-bae9-1257efb8e703","attributes":{"locked":true}},"5cc08991-9e11-460e-bbbd-82b4d4b685f4":{"name":"blockchain/ethereum/Uniswap/v2/Liquidity adder","description":"Add liquidity to the pool.\nIf pool doesn't exist it will be created.\nTokenB can be ETH also.","interface":{"inputs":{"ca036788-5f7a-4d08-a4cf-f4223b4ce604":{"type":"{\n  \"address\": string,\n  \"desiredAmount\": number,\n  optional \"minimalAmount\": number\n}","name":"tokenA"},"78d8f5a9-17e7-45e2-b778-f46cda29a80a":{"type":"{\n  \"address\": (string or \"ETH\"),\n  \"desiredAmount\": number,\n  optional \"minimalAmount\": number\n}","name":"tokenB or ETH"},"7de50776-c33c-49fd-ae41-bb85b3da0501":{"type":"string","name":"to addres"},"76512fec-78df-43fd-a9fd-20e33817bb49":{"type":"number","name":"deadline"},"a1a9f3b2-f3b9-4917-b77a-bf507b19f47f":{"type":"{\n\"address\": string,\n\"abi\": {string: any}\n}","name":"router contract"},"77827705-1577-47c3-904c-8dff54475e8d":{"type":"{\n    \"providerUrl\": string,\n    \"privateKey\": string\n}","name":"credentials"}},"outputs":{"ca296aaa-e80e-4141-8a2c-2be8aad5dec2":{"type":"any","name":"result"},"4fbce32e-7012-4bde-bdc5-052501a3efde":{"type":"any","name":"error"}}},"implementations":{"cranq":{"nodes":{"2e379074-d1a2-45d3-b8a6-8f0d1c900838":{"coordinates":[209.5,114.5],"name":"liquidity adder","prototype":"0979c75a-e817-4ed7-83a3-bb2570613cac"},"353417a4-ceb9-46aa-9d38-1bfdcb794220":{"coordinates":[206.5,-49.5],"name":"liquidity adder eth","prototype":"b646dd6e-2ec9-4caa-a611-a0bd7906308b"},"2d481479-6d1b-42bc-83b1-d8543e9150e7":{"coordinates":[-336.5,-39.5],"name":"contract parameters","prototype":"761a7cff-0ef3-4630-88ed-2e644a17ab3b"},"abfddba8-b87f-401c-a5ef-b1477ad429ec":{"coordinates":[-343.5,67.5],"name":"operation parameters","prototype":"9067c53e-399e-4f28-a6ed-26e987ab2418"},"85bbd70b-bfe5-4d5a-8643-c7cb4055e9ad":{"coordinates":[-259.5,-168.5],"name":"get \"address\"","prototype":"857aacdb-326e-4b2e-a261-5197b667e14f","params":{"23142cc5-6b71-4d69-8c46-cc1cd58793d1":"\"address\""}},"439ba717-afcf-4844-aba4-830279e33b17":{"coordinates":[34.5,-189.5],"name":"if \"ETH\"","prototype":"567a3cd3-24f4-4fb1-86cd-35abfcda96ce"},"fb076c2f-8805-4fc1-96e1-3da223d1887b":{"coordinates":[-113,-278],"name":"is \"ETH\"?","prototype":"ff69726b-734e-4fb7-ac51-72c8eea8bdd6","params":{"3a93b0f5-d7ce-4dfd-bc70-f46c768bf142":"\"ETH\""}}},"connections":{"2d481479-6d1b-42bc-83b1-d8543e9150e7":{"34f942cc-96a7-4278-a931-d9194e89dfe1":{"85bbd70b-bfe5-4d5a-8643-c7cb4055e9ad":{"47c56035-5bed-4f91-b7a9-606dedd7a13c":{}},"439ba717-afcf-4844-aba4-830279e33b17":{"8dae1988-d752-4c9b-b8c5-f9222e776dec":{}}},"8ee51005-e876-4db5-88b5-c9e148feba3f":{"353417a4-ceb9-46aa-9d38-1bfdcb794220":{"4602e6ff-ae72-46bd-bddb-2065b4f4895a":{}},"2e379074-d1a2-45d3-b8a6-8f0d1c900838":{"4602e6ff-ae72-46bd-bddb-2065b4f4895a":{}}},"da773107-7a7f-4fc2-b67d-bb9b76e361eb":{"353417a4-ceb9-46aa-9d38-1bfdcb794220":{"46368936-c937-4d59-9cf5-943b756ace58":{}},"2e379074-d1a2-45d3-b8a6-8f0d1c900838":{"46368936-c937-4d59-9cf5-943b756ace58":{}}},"a5a46e47-dacb-477b-b823-398e570fe259":{"353417a4-ceb9-46aa-9d38-1bfdcb794220":{"642a80c9-e59e-4e40-98e0-842ce385e544":{}},"2e379074-d1a2-45d3-b8a6-8f0d1c900838":{"642a80c9-e59e-4e40-98e0-842ce385e544":{}}}},"85bbd70b-bfe5-4d5a-8643-c7cb4055e9ad":{"ebb678af-2bc0-4d06-99dd-6dbb5647ad6a":{"fb076c2f-8805-4fc1-96e1-3da223d1887b":{"a0934373-43a4-4cd5-83eb-860bc20d790a":{}}}},"439ba717-afcf-4844-aba4-830279e33b17":{"26b011f0-6b5a-45a3-a4b6-a90d93ce7046":{"353417a4-ceb9-46aa-9d38-1bfdcb794220":{"e971b0f8-3982-4b6e-98d7-22f8409f3817":{}}},"8c42e25b-e7f1-421a-90f5-cd88a4674cf0":{"2e379074-d1a2-45d3-b8a6-8f0d1c900838":{"e971b0f8-3982-4b6e-98d7-22f8409f3817":{}}}},"abfddba8-b87f-401c-a5ef-b1477ad429ec":{"069a212d-9cea-4987-be45-e0079a13d96f":{"2e379074-d1a2-45d3-b8a6-8f0d1c900838":{"9ab46954-d296-43b4-a18a-377cc168128d":{}},"353417a4-ceb9-46aa-9d38-1bfdcb794220":{"9ab46954-d296-43b4-a18a-377cc168128d":{}}},"d1295197-1962-4680-a037-5890f2175bb9":{"2e379074-d1a2-45d3-b8a6-8f0d1c900838":{"8c3157b3-36b1-4b1f-a20d-202a622dc38c":{}},"353417a4-ceb9-46aa-9d38-1bfdcb794220":{"8c3157b3-36b1-4b1f-a20d-202a622dc38c":{}}}},"fb076c2f-8805-4fc1-96e1-3da223d1887b":{"61410efe-0096-4bd0-8169-30b254646910":{"439ba717-afcf-4844-aba4-830279e33b17":{"8e1a5f69-ca43-484d-8099-ef265bedda62":{}}}}},"forwards":{"inputs":{"ca036788-5f7a-4d08-a4cf-f4223b4ce604":{"2d481479-6d1b-42bc-83b1-d8543e9150e7":{"b9f6ade5-9bdd-46ef-99d2-616f1cb608c4":{}}},"78d8f5a9-17e7-45e2-b778-f46cda29a80a":{"2d481479-6d1b-42bc-83b1-d8543e9150e7":{"f1aff635-6110-419c-81b3-ea2bd8b5f791":{}}},"7de50776-c33c-49fd-ae41-bb85b3da0501":{"2d481479-6d1b-42bc-83b1-d8543e9150e7":{"cbfbd020-ce7f-4fb5-aa15-d63e33d10941":{}}},"76512fec-78df-43fd-a9fd-20e33817bb49":{"2d481479-6d1b-42bc-83b1-d8543e9150e7":{"4fcb135a-9c6c-497b-a96e-526c4727a64a":{}}},"a1a9f3b2-f3b9-4917-b77a-bf507b19f47f":{"abfddba8-b87f-401c-a5ef-b1477ad429ec":{"e76062c0-e298-4443-a187-94cbd4b3bc74":{}}},"77827705-1577-47c3-904c-8dff54475e8d":{"abfddba8-b87f-401c-a5ef-b1477ad429ec":{"7af76a3e-ed65-41b9-9f9d-1a4593c5bf69":{}}}},"outputs":{"ca296aaa-e80e-4141-8a2c-2be8aad5dec2":{"353417a4-ceb9-46aa-9d38-1bfdcb794220":{"60a037e1-67e3-4d3b-9606-3398163f27af":{}},"2e379074-d1a2-45d3-b8a6-8f0d1c900838":{"60a037e1-67e3-4d3b-9606-3398163f27af":{}}},"4fbce32e-7012-4bde-bdc5-052501a3efde":{"353417a4-ceb9-46aa-9d38-1bfdcb794220":{"193c7b18-8f27-4b68-878f-2c2d0bc1b8c4":{}},"2e379074-d1a2-45d3-b8a6-8f0d1c900838":{"193c7b18-8f27-4b68-878f-2c2d0bc1b8c4":{}}}}}}},"iconId":"6e06ed83-301e-41ca-bae9-1257efb8e703","attributes":{"locked":true}},"0979c75a-e817-4ed7-83a3-bb2570613cac":{"implementations":{"cranq":{"nodes":{"bab278f9-92f3-4313-9363-6ad084394c0c":{"coordinates":[-253,-303],"name":"tokenA data","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"address\",\"desiredAmount\", \"minimalAmount\"]"}},"0b6ed1c2-ac5a-46dd-b36e-8b0c2f04ca5d":{"coordinates":[-230,-158],"name":"tokenB data","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"address\",\"desiredAmount\", \"minimalAmount\"]"}},"2505b99d-e535-49cf-8793-02ff8c957157":{"coordinates":[203.33333333333326,-279.3333333333333],"name":"approve tokenA","prototype":"55c96c0b-170d-4b6a-93a2-d56894a89afc"},"131b7957-e555-4d92-8f81-d86c2ebf2874":{"coordinates":[408.33333333333326,-141.33333333333326],"name":"approve tokenB","prototype":"55c96c0b-170d-4b6a-93a2-d56894a89afc"},"55ca1580-e573-4f63-bb8f-2306a0776468":{"coordinates":[361.4000000000001,-8],"name":"add liquidity","prototype":"634d2024-2796-4288-b986-d6fb62336270"},"f96fee45-39d2-4f55-b5c5-f8dc6ecdbbed":{"coordinates":[506,-232.375],"name":"sync approvals","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[0,1]"}},"c3a856a1-4bff-48dd-8683-4e5300f0a987":{"coordinates":[-405,-51],"name":"addLiquidity params","prototype":"761a7cff-0ef3-4630-88ed-2e644a17ab3b"},"9598eafb-20d4-4a27-8513-aba3797511b1":{"coordinates":[-402,62],"name":"operation params","prototype":"9067c53e-399e-4f28-a6ed-26e987ab2418"},"23a03b65-cf8a-483a-8f9b-692e1472b900":{"coordinates":[2,-235],"name":"router address, credentials","prototype":"9067c53e-399e-4f28-a6ed-26e987ab2418"},"6a229973-3f50-4f6d-ab83-c2ec02f8ae5d":{"coordinates":[-244,-9],"name":"router contract data","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"address\", \"abi\"]"}},"6f4a6090-083a-4df4-a8af-67978a7a5ff9":{"coordinates":[183,123],"name":"wait for approvals","prototype":"62c8e48b-0926-4fa7-8322-02975bf4dc41"},"608be892-0175-40f5-9f6a-3381250199d8":{"coordinates":[302,-210],"name":"wait for tokenA approval","prototype":"40a2e145-0193-461f-978a-d6aaf4a7ea09"},"a4bc94d2-1fe9-48cb-8340-d5288766e521":{"coordinates":[679,-265],"name":"errors","prototype":"420bb3c5-79a9-4b4d-934e-ee04d07f92b0"}},"forwards":{"inputs":{"4602e6ff-ae72-46bd-bddb-2065b4f4895a":{"c3a856a1-4bff-48dd-8683-4e5300f0a987":{"b9f6ade5-9bdd-46ef-99d2-616f1cb608c4":{}}},"e971b0f8-3982-4b6e-98d7-22f8409f3817":{"c3a856a1-4bff-48dd-8683-4e5300f0a987":{"f1aff635-6110-419c-81b3-ea2bd8b5f791":{}}},"46368936-c937-4d59-9cf5-943b756ace58":{"c3a856a1-4bff-48dd-8683-4e5300f0a987":{"cbfbd020-ce7f-4fb5-aa15-d63e33d10941":{}}},"642a80c9-e59e-4e40-98e0-842ce385e544":{"c3a856a1-4bff-48dd-8683-4e5300f0a987":{"4fcb135a-9c6c-497b-a96e-526c4727a64a":{}}},"9ab46954-d296-43b4-a18a-377cc168128d":{"9598eafb-20d4-4a27-8513-aba3797511b1":{"e76062c0-e298-4443-a187-94cbd4b3bc74":{}}},"8c3157b3-36b1-4b1f-a20d-202a622dc38c":{"9598eafb-20d4-4a27-8513-aba3797511b1":{"7af76a3e-ed65-41b9-9f9d-1a4593c5bf69":{}}}},"outputs":{"60a037e1-67e3-4d3b-9606-3398163f27af":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"44d775fe-b109-427a-8d30-2fb70ec3b250":{}}},"193c7b18-8f27-4b68-878f-2c2d0bc1b8c4":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"6dacdfe2-fc10-4f08-9919-2f198cda89f4":{}},"a4bc94d2-1fe9-48cb-8340-d5288766e521":{"0a9cd5b0-6de6-4c69-aa04-2816de994173":{}}}}},"connections":{"bab278f9-92f3-4313-9363-6ad084394c0c":{"address":{"2505b99d-e535-49cf-8793-02ff8c957157":{"3eb6ccfa-35e8-4704-947b-89c795ea6871":{}}},"desiredAmount":{"2505b99d-e535-49cf-8793-02ff8c957157":{"86a67e4f-9f7d-4924-b1b8-9e9b17c5c8cf":{}}}},"0b6ed1c2-ac5a-46dd-b36e-8b0c2f04ca5d":{"desiredAmount":{"131b7957-e555-4d92-8f81-d86c2ebf2874":{"86a67e4f-9f7d-4924-b1b8-9e9b17c5c8cf":{}}},"address":{"131b7957-e555-4d92-8f81-d86c2ebf2874":{"3eb6ccfa-35e8-4704-947b-89c795ea6871":{}}}},"c3a856a1-4bff-48dd-8683-4e5300f0a987":{"8ee51005-e876-4db5-88b5-c9e148feba3f":{"bab278f9-92f3-4313-9363-6ad084394c0c":{"6ad86184-6890-4323-8021-3496a682c98e":{}},"55ca1580-e573-4f63-bb8f-2306a0776468":{"3988660b-8398-4a78-8889-e5cc8506394e":{}}},"34f942cc-96a7-4278-a931-d9194e89dfe1":{"0b6ed1c2-ac5a-46dd-b36e-8b0c2f04ca5d":{"6ad86184-6890-4323-8021-3496a682c98e":{}},"55ca1580-e573-4f63-bb8f-2306a0776468":{"8d57999d-148b-4eff-9e4d-ca00f36e10ea":{}}},"da773107-7a7f-4fc2-b67d-bb9b76e361eb":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"78fb26c0-e46e-490b-a5d7-ff880ac745da":{}}},"a5a46e47-dacb-477b-b823-398e570fe259":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"04df0153-0ab3-410d-9054-44b0965cfce2":{}}}},"9598eafb-20d4-4a27-8513-aba3797511b1":{"069a212d-9cea-4987-be45-e0079a13d96f":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"4e3e4f4a-2e69-4af0-9799-b0a12f0a9499":{}},"6a229973-3f50-4f6d-ab83-c2ec02f8ae5d":{"6ad86184-6890-4323-8021-3496a682c98e":{}}},"d1295197-1962-4680-a037-5890f2175bb9":{"23a03b65-cf8a-483a-8f9b-692e1472b900":{"7af76a3e-ed65-41b9-9f9d-1a4593c5bf69":{}},"6f4a6090-083a-4df4-a8af-67978a7a5ff9":{"72a73ffe-8319-4427-878e-3e67f2d150ff":{}}}},"23a03b65-cf8a-483a-8f9b-692e1472b900":{"069a212d-9cea-4987-be45-e0079a13d96f":{"2505b99d-e535-49cf-8793-02ff8c957157":{"8af36cde-8a26-4e21-938d-066a5e5742bd":{}},"608be892-0175-40f5-9f6a-3381250199d8":{"87d3064e-5a44-4029-bea8-ba632449f2f5":{}}},"d1295197-1962-4680-a037-5890f2175bb9":{"2505b99d-e535-49cf-8793-02ff8c957157":{"82b16f00-66eb-49b7-8f6d-afa56a77f4c9":{}},"131b7957-e555-4d92-8f81-d86c2ebf2874":{"82b16f00-66eb-49b7-8f6d-afa56a77f4c9":{}}}},"6a229973-3f50-4f6d-ab83-c2ec02f8ae5d":{"address":{"23a03b65-cf8a-483a-8f9b-692e1472b900":{"e76062c0-e298-4443-a187-94cbd4b3bc74":{}}}},"2505b99d-e535-49cf-8793-02ff8c957157":{"74f19ab3-291b-479d-98b0-52ac9cd6affe":{"f96fee45-39d2-4f55-b5c5-f8dc6ecdbbed":{"0":{}},"608be892-0175-40f5-9f6a-3381250199d8":{"0e7419a5-ec56-4a97-8f11-6add5ff3ae1e":{}}},"91b4a65a-6da8-4469-a63e-bc64c18b0d78":{"a4bc94d2-1fe9-48cb-8340-d5288766e521":{"b0fb4a37-09d5-462e-952a-c3ab29a47e82":{}}}},"131b7957-e555-4d92-8f81-d86c2ebf2874":{"74f19ab3-291b-479d-98b0-52ac9cd6affe":{"f96fee45-39d2-4f55-b5c5-f8dc6ecdbbed":{"1":{}}},"91b4a65a-6da8-4469-a63e-bc64c18b0d78":{"a4bc94d2-1fe9-48cb-8340-d5288766e521":{"b0fb4a37-09d5-462e-952a-c3ab29a47e82":{}}}},"f96fee45-39d2-4f55-b5c5-f8dc6ecdbbed":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"6f4a6090-083a-4df4-a8af-67978a7a5ff9":{"f58efe33-f70e-4570-ac54-670aaf844385":{}}}},"6f4a6090-083a-4df4-a8af-67978a7a5ff9":{"eb4c2873-890f-4780-a895-53e321f3739e":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"48cc93ef-ab76-4081-8f58-3fbcc626599c":{}}}},"608be892-0175-40f5-9f6a-3381250199d8":{"7fe23af1-29bf-4cc5-810c-5b91dea1b61a":{"131b7957-e555-4d92-8f81-d86c2ebf2874":{"8af36cde-8a26-4e21-938d-066a5e5742bd":{}}}}}}},"interface":{"inputs":{"4602e6ff-ae72-46bd-bddb-2065b4f4895a":{"type":"{\n  \"address\": string,\n  \"desiredAmount\": number,\n  optional \"minimalAmount\": number\n}","name":"tokenA","description":""},"e971b0f8-3982-4b6e-98d7-22f8409f3817":{"type":"{\n\"address\": string,\n\"desiredAmount\": number,\noptional \"minimalAmount\": number\n}","name":"tokenB","description":""},"46368936-c937-4d59-9cf5-943b756ace58":{"type":"string","name":"to address","description":"The address that will get the minted liquidity token."},"642a80c9-e59e-4e40-98e0-842ce385e544":{"type":"number","name":"deadline","description":"Unix timestamp of the deadline until the operation should be completed or will be reverted."},"9ab46954-d296-43b4-a18a-377cc168128d":{"type":"typeof `router contract` of `add liquidity`","name":"router contract"},"8c3157b3-36b1-4b1f-a20d-202a622dc38c":{"type":"typeof `credentials` of `add liquidity`","name":"credentials"}},"outputs":{"60a037e1-67e3-4d3b-9606-3398163f27af":{"type":"any","name":"result"},"193c7b18-8f27-4b68-878f-2c2d0bc1b8c4":{"type":"((typeof `data` of `errors`) or (typeof `error` of `add liquidity`))","name":"error"}}},"name":"blockchain/ethereum/Uniswap/v2/Liquidity adder token","description":"Add liquidity to a pool.\nIf the pool doesn't exists it will be created.","iconId":"6e06ed83-301e-41ca-bae9-1257efb8e703","attributes":{"locked":true}},"55c96c0b-170d-4b6a-93a2-d56894a89afc":{"name":"blockchain/ethereum/contracts/ERC20/Approve","interface":{"inputs":{"8af36cde-8a26-4e21-938d-066a5e5742bd":{"type":"string","name":"router address","description":"The address of a router contract that receives the approval for the given token."},"86a67e4f-9f7d-4924-b1b8-9e9b17c5c8cf":{"type":"typeof `units` of `unit parser`","name":"amount","description":"The amount of the selected token that should be added to the liquidity pool."},"3eb6ccfa-35e8-4704-947b-89c795ea6871":{"type":"typeof `contract address` of `contract executor`","name":"token address"},"82b16f00-66eb-49b7-8f6d-afa56a77f4c9":{"type":"any","name":"typeof `credentials` of `contract executor`"}},"outputs":{"74f19ab3-291b-479d-98b0-52ac9cd6affe":{"type":"any","name":"result"},"91b4a65a-6da8-4469-a63e-bc64c18b0d78":{"type":"any","name":"error"}}},"implementations":{"cranq":{"nodes":{"868ee981-e9cc-4677-a04b-cd8ab1b12053":{"coordinates":[-65.33333333333334,100.33333333333333],"name":"ERC20","prototype":"5ef2bbbc-fcfb-4573-8e12-e414dd5968c9"},"c5b4fef7-6cc6-4424-b37c-c1d9c1488fb3":{"coordinates":[-226.33333333333326,-0.6666666666666856],"name":"forwarder (quadruple)","prototype":"761a7cff-0ef3-4630-88ed-2e644a17ab3b"},"85bc5fb8-b3ca-4a5f-a4fa-3cc4d3552792":{"coordinates":[41.66666666666674,-155.66666666666669],"name":"build parameters","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[0,1]"}},"5be21e78-dfb5-4901-b015-91030d73ccb7":{"coordinates":[211.66666666666674,12.333333333333258],"name":"contract executor","prototype":"228b10ab-9b15-4317-8700-f5ddac476c25","params":{"1c54037b-03d2-447f-8e10-41c1f3ebfbfe":"\"approve\"","a1d2a03b-c119-442d-b464-d3aeeab20f1e":"{\n  \"gas\": 2000000\n}"}},"105c12ac-463a-47f8-98be-669d614d3ca5":{"coordinates":[-46.83333333333326,-71.66666666666674],"name":"unit parser","prototype":"eb3f5e07-27f3-42dc-9ac1-60f747d6c1b5"}},"connections":{"c5b4fef7-6cc6-4424-b37c-c1d9c1488fb3":{"8ee51005-e876-4db5-88b5-c9e148feba3f":{"85bc5fb8-b3ca-4a5f-a4fa-3cc4d3552792":{"0":{}}},"a5a46e47-dacb-477b-b823-398e570fe259":{"868ee981-e9cc-4677-a04b-cd8ab1b12053":{"6760b665-131e-4ec5-b2f7-12bbfa1f60d9":{}},"5be21e78-dfb5-4901-b015-91030d73ccb7":{"5e721c7e-2b06-494f-a65e-6b527531cddc":{}}},"da773107-7a7f-4fc2-b67d-bb9b76e361eb":{"5be21e78-dfb5-4901-b015-91030d73ccb7":{"e62bb3b3-e749-4e85-b789-51e33a3fbe82":{}}},"34f942cc-96a7-4278-a931-d9194e89dfe1":{"105c12ac-463a-47f8-98be-669d614d3ca5":{"0d455460-c659-44c5-afd7-bdba5211c32d":{}}}},"85bc5fb8-b3ca-4a5f-a4fa-3cc4d3552792":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"5be21e78-dfb5-4901-b015-91030d73ccb7":{"9ff09a73-b892-48f2-b976-2cd7de67dcbd":{}}}},"868ee981-e9cc-4677-a04b-cd8ab1b12053":{"a7efbc77-d51f-43df-9c45-273de73aafb7":{"5be21e78-dfb5-4901-b015-91030d73ccb7":{"39a06197-ca9b-4ada-ab8e-6de9bd241529":{}}}},"105c12ac-463a-47f8-98be-669d614d3ca5":{"aaa7049a-c2b9-4257-a583-eaf68de2c346":{"85bc5fb8-b3ca-4a5f-a4fa-3cc4d3552792":{"1":{}}}}},"forwards":{"inputs":{"8af36cde-8a26-4e21-938d-066a5e5742bd":{"c5b4fef7-6cc6-4424-b37c-c1d9c1488fb3":{"b9f6ade5-9bdd-46ef-99d2-616f1cb608c4":{}}},"86a67e4f-9f7d-4924-b1b8-9e9b17c5c8cf":{"c5b4fef7-6cc6-4424-b37c-c1d9c1488fb3":{"f1aff635-6110-419c-81b3-ea2bd8b5f791":{}}},"3eb6ccfa-35e8-4704-947b-89c795ea6871":{"c5b4fef7-6cc6-4424-b37c-c1d9c1488fb3":{"cbfbd020-ce7f-4fb5-aa15-d63e33d10941":{}}},"82b16f00-66eb-49b7-8f6d-afa56a77f4c9":{"c5b4fef7-6cc6-4424-b37c-c1d9c1488fb3":{"4fcb135a-9c6c-497b-a96e-526c4727a64a":{}}}},"outputs":{"74f19ab3-291b-479d-98b0-52ac9cd6affe":{"5be21e78-dfb5-4901-b015-91030d73ccb7":{"87606a66-0567-440c-9686-f02bf52462e4":{}}},"91b4a65a-6da8-4469-a63e-bc64c18b0d78":{"5be21e78-dfb5-4901-b015-91030d73ccb7":{"21d246f0-67a7-4b2e-984a-94cf1f7d21e8":{}}}}}}},"description":"Calls the \"approve\" method on the ERC20 token contract","iconId":"f7d13a1a-3ec0-4bdd-8d61-e449c79398da","keywords":{"erc20":null,"smart contract":null,"token":null,"swap":null},"attributes":{"locked":true}},"5ef2bbbc-fcfb-4573-8e12-e414dd5968c9":{"name":"blockchain/ethereum/contracts/ERC20","interface":{"inputs":{"6760b665-131e-4ec5-b2f7-12bbfa1f60d9":{"type":"any","name":"read"}},"outputs":{"a7efbc77-d51f-43df-9c45-273de73aafb7":{"type":"{string: any}","name":"abi"}}},"implementations":{"cranq":{"nodes":{"1884d640-c3e3-4e07-b325-229996f11bec":{"coordinates":[12,-47],"name":"abi","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f","params":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"[\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"_amount\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"constructor\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"value\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Approval\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"from\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": true,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"to\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"value\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"Transfer\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"owner\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"allowance\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"approve\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"account\",\r\n        \"type\": \"address\"\r\n      }\r\n    ],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"decimals\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint8\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint8\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"subtractedValue\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"decreaseAllowance\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"spender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"addedValue\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"increaseAllowance\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"name\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"symbol\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"totalSupply\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"recipient\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"transfer\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"address\",\r\n        \"name\": \"recipient\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"internalType\": \"uint256\",\r\n        \"name\": \"amount\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"name\": \"transferFrom\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"bool\",\r\n        \"name\": \"\",\r\n        \"type\": \"bool\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  }\r\n]"}}},"connections":{},"forwards":{"inputs":{"6760b665-131e-4ec5-b2f7-12bbfa1f60d9":{"1884d640-c3e3-4e07-b325-229996f11bec":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}}}},"outputs":{"a7efbc77-d51f-43df-9c45-273de73aafb7":{"1884d640-c3e3-4e07-b325-229996f11bec":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{}}}}}}},"iconId":"11e997ab-33d0-473a-aa56-1e2fe4d30d5c","description":"Holds the ABI of the ERC20 token contract","keywords":{"erc20":null,"abi":null,"token":null},"attributes":{"locked":true}},"228b10ab-9b15-4317-8700-f5ddac476c25":{"implementations":{"cranq":{"nodes":{"a8b08540-468f-4bbe-b8dd-47df8ac7273b":{"coordinates":[-269,-40],"name":"build contract parameters","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"alters":"true","ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\n  \"contract address\", \n  \"method name\", \n  \"parameters\", \n  \"alters\",\n  \"abi\"\n]"}},"b9a448ac-f405-4f0e-8c59-1b721cc14472":{"coordinates":[148,4],"name":"method call","prototype":"f700765b-d2d9-4d1c-a668-651a606cbf5b"},"28d8e85d-b1ed-42e2-a385-78eeed02f55e":{"coordinates":[-89.8046875,15.796875],"name":"build data","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"contract parameters\", \"transaction parameters\", \"web3 credentials\"]"}}},"connections":{"28d8e85d-b1ed-42e2-a385-78eeed02f55e":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"b9a448ac-f405-4f0e-8c59-1b721cc14472":{"244fb79b-f74f-4ba9-ad9b-9d4bbfb66d96":{}}}},"a8b08540-468f-4bbe-b8dd-47df8ac7273b":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"28d8e85d-b1ed-42e2-a385-78eeed02f55e":{"contract parameters":{}}}}},"forwards":{"inputs":{"e62bb3b3-e749-4e85-b789-51e33a3fbe82":{"a8b08540-468f-4bbe-b8dd-47df8ac7273b":{"contract address":{}}},"1c54037b-03d2-447f-8e10-41c1f3ebfbfe":{"a8b08540-468f-4bbe-b8dd-47df8ac7273b":{"method name":{}}},"9ff09a73-b892-48f2-b976-2cd7de67dcbd":{"a8b08540-468f-4bbe-b8dd-47df8ac7273b":{"parameters":{}}},"39a06197-ca9b-4ada-ab8e-6de9bd241529":{"a8b08540-468f-4bbe-b8dd-47df8ac7273b":{"abi":{}}},"a1d2a03b-c119-442d-b464-d3aeeab20f1e":{"28d8e85d-b1ed-42e2-a385-78eeed02f55e":{"transaction parameters":{}}},"5e721c7e-2b06-494f-a65e-6b527531cddc":{"28d8e85d-b1ed-42e2-a385-78eeed02f55e":{"web3 credentials":{}}}},"outputs":{"87606a66-0567-440c-9686-f02bf52462e4":{"b9a448ac-f405-4f0e-8c59-1b721cc14472":{"a8910f08-11f8-4764-817b-ea55ea851dd5":{}}},"21d246f0-67a7-4b2e-984a-94cf1f7d21e8":{"b9a448ac-f405-4f0e-8c59-1b721cc14472":{"00cbcc07-f756-4b6f-a21e-4e7ddcaa2b9b":{}}}}}}},"interface":{"inputs":{"e62bb3b3-e749-4e85-b789-51e33a3fbe82":{"type":"any","name":"contract address"},"1c54037b-03d2-447f-8e10-41c1f3ebfbfe":{"type":"any","name":"method name"},"9ff09a73-b892-48f2-b976-2cd7de67dcbd":{"type":"any[]","name":"parameters","description":"Parameters as array"},"a1d2a03b-c119-442d-b464-d3aeeab20f1e":{"type":"{string:any}","name":"transaction parameters","description":"Example: \n{\n  \"gas\": 2000000,\n  \"value\": \"foobar\"\n}"},"39a06197-ca9b-4ada-ab8e-6de9bd241529":{"type":"any","name":"abi"},"5e721c7e-2b06-494f-a65e-6b527531cddc":{"type":"typeof `data` of `method call`[\"web3 credentials\"]","name":"credentials"}},"outputs":{"87606a66-0567-440c-9686-f02bf52462e4":{"type":"any","name":"out"},"21d246f0-67a7-4b2e-984a-94cf1f7d21e8":{"type":"typeof `error` of `method call`","name":"error"}}},"name":"blockchain/ethereum/Contract executor","original":"d0c40c17-a70f-46da-b735-5d6fb7a364d9","iconId":"47baa0d3-adcc-4071-8ab3-768676771342","description":"Calls an altering method on a smart contract.","keywords":{"smart contract":null,"call":null,"alters":null},"attributes":{"locked":true}},"f700765b-d2d9-4d1c-a668-651a606cbf5b":{"implementations":{"es6-node":{"inputFunctions":{"244fb79b-f74f-4ba9-ad9b-9d4bbfb66d96":"// Scotty(data, tag, outputs); return;\n\n\nconst contractParameters = data[\"contract parameters\"];\nconst defaultTransactionParameters = { gas: 2200 };\nconst transactionParameters = {\n  ...defaultTransactionParameters,\n  ...data[\"transaction parameters\"]\n};\n\nconst contractAddress = contractParameters[\"contract address\"];\nconst methodName = contractParameters[\"method name\"];\nconst parameters = Array.isArray(contractParameters[\"parameters\"]) \n? contractParameters[\"parameters\"] \n: [contractParameters[\"parameters\"]];\nconst alters = !!contractParameters[\"alters\"];\nconst abi = contractParameters[\"abi\"];\n\nif(\n  !contractAddress \n  || !Array.isArray(parameters) \n  || !abi\n  ) {\n    throw new Error(\"Contract parameters are not complete.\")\n}\nconst web3Credentials = data[\"web3 credentials\"];\nconst providerUrl = web3Credentials[\"providerUrl\"];\nconst privateKey = web3Credentials[\"privateKey\"];\nif(\n  !providerUrl \n  || !privateKey\n  ) {\n    throw new Error(\"Web3 credentials are not complete.\")\n}\n\nconst Web3 = require(\"web3\");\nconst provider = new Web3.providers.HttpProvider(providerUrl);\nconst web3 = new Web3(provider);\nconst signer = web3.eth.accounts.privateKeyToAccount(privateKey);\nweb3.eth.accounts.wallet.add(signer);\nconst contract = new web3.eth.Contract(abi, contractAddress, {from: signer.address});\n\nasync function main() {\n  let res;\n  if (!Array.isArray(parameters))\n    parameters = [parameters];\n\n  if (alters) {\n    //  More sophisticated gas estimation algorythm\n    // FIXME: gas should come from settings\n    res = await contract.methods[methodName](...parameters).send(transactionParameters);\n  } else {\n    res = await contract.methods[methodName](...parameters).call();\n  }\n  outputs[\"result\"](res, tag);\n}\n\nmain().catch((e) => {\n  outputs[\"error\"](\n    {error: e.toString()},\n    tag\n  );\n});"}}},"interface":{"inputs":{"244fb79b-f74f-4ba9-ad9b-9d4bbfb66d96":{"type":"{\n  \"contract parameters\": any[],\n  \"web3_credentials\": {\n    \"providerUrl\": string,\n    \"privateKey\": string\n  },\n  \"transaction parameters\": {string:any}\n}","name":"data"}},"outputs":{"a8910f08-11f8-4764-817b-ea55ea851dd5":{"type":"any","name":"result"},"00cbcc07-f756-4b6f-a21e-4e7ddcaa2b9b":{"type":"{\"error\": string}","name":"error"}}},"name":"blockchain/ethereum/Contract caller/Internal","original":"ca43b3b3-b12a-4bf7-b628-6c1c0524048f","attributes":{"internal":true}},"eb3f5e07-27f3-42dc-9ac1-60f747d6c1b5":{"name":"blockchain/ethereum/Unit parser","description":"Creates BigNumber representation of number units useing the specified amount of decimals.\n\nSee: https://docs.ethers.io/v5/api/utils/display-logic/#utils-parseUnits","interface":{"inputs":{"0d455460-c659-44c5-afd7-bdba5211c32d":{"type":"number","name":"units","description":"The number of units"},"6ffb69e8-3e06-43ed-b449-83880fdcedcf":{"type":"number","name":"decimals","description":"The number of decimals to represent the unit"}},"outputs":{"aaa7049a-c2b9-4257-a583-eaf68de2c346":{"type":"typeof `result` of `convert to BigNumber`","name":"result","description":"The BigNumber representation of value, parsed with unit digits."}}},"implementations":{"cranq":{"nodes":{"ff670edc-99bd-4d12-bf66-b86f0d5ccf3b":{"coordinates":[208,3],"name":"convert to BigNumber","prototype":"d81d132f-a682-42ab-b17e-436701e3974c"},"46a4d777-9d35-452d-95da-5d27eea22923":{"coordinates":[61,-43],"name":"syncer","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"units\", \"decimals\"]"}},"0eee9868-aa74-4170-84e0-f4b73756f378":{"coordinates":[-80,15],"name":"parameter with default","prototype":"a6599b7b-502d-437b-9c84-0f504921bb41","params":{"5d570fcf-b8db-4a62-8b84-4953a92d517f":"18"}}},"connections":{"46a4d777-9d35-452d-95da-5d27eea22923":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"ff670edc-99bd-4d12-bf66-b86f0d5ccf3b":{"b3cea331-0e22-4273-be38-3a574b507611":{}}}},"0eee9868-aa74-4170-84e0-f4b73756f378":{"9da98005-545d-4036-a36e-0f354a84cb50":{"46a4d777-9d35-452d-95da-5d27eea22923":{"decimals":{}}}}},"forwards":{"inputs":{"0d455460-c659-44c5-afd7-bdba5211c32d":{"46a4d777-9d35-452d-95da-5d27eea22923":{"units":{}},"0eee9868-aa74-4170-84e0-f4b73756f378":{"dae97765-6472-42e4-b129-749784e976f6":{}}},"6ffb69e8-3e06-43ed-b449-83880fdcedcf":{"0eee9868-aa74-4170-84e0-f4b73756f378":{"01ef7f62-ecc9-4fd2-8f70-980a2d25795a":{}}}},"outputs":{"aaa7049a-c2b9-4257-a583-eaf68de2c346":{"ff670edc-99bd-4d12-bf66-b86f0d5ccf3b":{"9efa481d-63ea-4735-b8df-06add0d6d1bc":{}}}}}}},"iconId":"cbb85c56-3c8f-4e5e-afdd-a9dd9e84385d","keywords":{"ethers":null,"decimals":null,"BigNumber":null},"attributes":{"locked":true}},"d81d132f-a682-42ab-b17e-436701e3974c":{"implementations":{"es6-node":{"dependencies":{"npm":{"ethers":{"description":""}}},"inputFunctions":{"b3cea331-0e22-4273-be38-3a574b507611":"const ethers = require(\"ethers\");\nconst {units, decimals = 18} = data;\n\nconst result = ethers.utils.parseUnits(units.toString(), decimals);\n\noutputs[\"result\"](result, tag);"}}},"interface":{"inputs":{"b3cea331-0e22-4273-be38-3a574b507611":{"type":"number","name":"units & deximals","description":"The number to convert to BigNumber"}},"outputs":{"9efa481d-63ea-4735-b8df-06add0d6d1bc":{"type":"{string: any}","name":"result","description":"The number converted to BigNumber"}}},"name":"blockchain/ethereum/Unit parser/Internal","description":"Creates BigNumber representation of number units useing the specified amount of decimals.\n\n","iconId":"cbb85c56-3c8f-4e5e-afdd-a9dd9e84385d","attributes":{"internal":true,"locked":true}},"634d2024-2796-4288-b986-d6fb62336270":{"name":"blockchain/ethereum/Uniswap/v2/Router/AddLiquidity","interface":{"inputs":{"3988660b-8398-4a78-8889-e5cc8506394e":{"type":"{\n  \"address\": string,\n  \"desiredAmount\": number\n}","name":"tokenA","description":"Parameters for tokenA"},"8d57999d-148b-4eff-9e4d-ca00f36e10ea":{"type":"{\n  \"address\": string,\n  \"desiredAmount\": number\n}","name":"tokenB","description":"Parameters for tokenB"},"78fb26c0-e46e-490b-a5d7-ff880ac745da":{"type":"string","name":"liquidity token to","description":"Address to send liquidity tokens to"},"04df0153-0ab3-410d-9054-44b0965cfce2":{"type":"number","name":"deadline","description":"Deadline for the transaction (future unix timestamp)"},"4e3e4f4a-2e69-4af0-9799-b0a12f0a9499":{"type":"{\n\"address\": string,\n\"abi\": {string:any}\n}","name":"router contract","description":"Parameters of the Uniswap V2 Router contract to interact with"},"48cc93ef-ab76-4081-8f58-3fbcc626599c":{"type":"typeof `credentials` of `contract executor`","name":"credentials","description":"Credentials for the operation"}},"outputs":{"44d775fe-b109-427a-8d30-2fb70ec3b250":{"type":"any","name":"result"},"6dacdfe2-fc10-4f08-9919-2f198cda89f4":{"type":"typeof `error` of `contract executor`","name":"error"}}},"implementations":{"cranq":{"nodes":{"6a46d9ee-484c-4644-a7e9-8e7ded5e2d22":{"coordinates":[-150.4000000000001,-119],"name":"tokenA min amount with default","prototype":"a6599b7b-502d-437b-9c84-0f504921bb41","params":{"5d570fcf-b8db-4a62-8b84-4953a92d517f":"0"}},"66275e94-414c-4fba-883f-5fc59fa26be2":{"coordinates":[-146.4000000000001,-22],"name":"tokenaB min amount with default","prototype":"a6599b7b-502d-437b-9c84-0f504921bb41","params":{"5d570fcf-b8db-4a62-8b84-4953a92d517f":"0"}},"c835bdca-271b-4e71-86f8-ab72f5efd377":{"coordinates":[-335.4,-340.375],"name":"tokenA info","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"address\",\"desiredAmount\", \"minimalAmount\"]"}},"e3e81fb6-1f53-4199-896b-5ceedf297c97":{"coordinates":[-320.4,-231.375],"name":"tokenB info","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"address\",\"desiredAmount\", \"minimalAmount\"]"}},"4bffa1d2-efc3-4fe0-a9aa-693fda567d9e":{"coordinates":[71.59999999999991,220.625],"name":"router contract data","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"address\", \"abi\"]"}},"9d66d7a8-2928-441d-8586-0d10834887aa":{"coordinates":[265.5999999999999,-180.375],"name":"build parameters","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[0,1,2,3,4,5,6,7]"},"description":"addLiquidity parameters as array:\n  address tokenA,\n  address tokenB,\n  uint amountADesired,\n  uint amountBDesired,\n  uint amountAMin,\n  uint amountBMin,\n  address to,\n  uint deadline"},"38b4e4ae-3fc7-4dfa-99e5-ea74d2a379f1":{"coordinates":[-469.4000000000001,-30],"name":"contract call params","prototype":"761a7cff-0ef3-4630-88ed-2e644a17ab3b"},"29dbff4f-9603-4f57-b51c-65207e8c8b7c":{"coordinates":[-463.4000000000001,70],"name":"operation params","prototype":"9067c53e-399e-4f28-a6ed-26e987ab2418"},"56c1fe60-e438-44c5-b719-25ba23097ed0":{"coordinates":[62.59999999999991,116],"name":"liquidity to & deadline","prototype":"9067c53e-399e-4f28-a6ed-26e987ab2418"},"5053c784-80b1-47ed-acf8-3c128b464911":{"coordinates":[73.59999999999991,333],"name":"credentials","prototype":"420bb3c5-79a9-4b4d-934e-ee04d07f92b0"},"45c6dc20-b4b7-44c1-b3cd-122da513973b":{"coordinates":[462.5999999999999,-3],"name":"contract executor","prototype":"228b10ab-9b15-4317-8700-f5ddac476c25","params":{"1c54037b-03d2-447f-8e10-41c1f3ebfbfe":"\"addLiquidity\"","a1d2a03b-c119-442d-b464-d3aeeab20f1e":"{\n  \"gas\": 9999999\n}"}},"a605a6e6-3188-48b6-b2ef-c8137eb2ee99":{"coordinates":[-102.90000000000009,-291],"name":"to units tokenA amount","prototype":"eb3f5e07-27f3-42dc-9ac1-60f747d6c1b5"},"217bb35c-f4d5-4cde-8012-eb0cc8f57832":{"coordinates":[-82.90000000000009,-200],"name":"to units tokenB amount","prototype":"eb3f5e07-27f3-42dc-9ac1-60f747d6c1b5"},"a01f5b1b-fa4d-47cb-9143-fb868e472b11":{"coordinates":[5.099999999999909,-126],"name":"to unit tokenA min amount","prototype":"eb3f5e07-27f3-42dc-9ac1-60f747d6c1b5"},"a2943213-f51f-4fad-a615-1753c8b0743f":{"coordinates":[10.099999999999909,-28],"name":"to units tokenB min amount","prototype":"eb3f5e07-27f3-42dc-9ac1-60f747d6c1b5"}},"connections":{"e3e81fb6-1f53-4199-896b-5ceedf297c97":{"minimalAmount":{"66275e94-414c-4fba-883f-5fc59fa26be2":{"01ef7f62-ecc9-4fd2-8f70-980a2d25795a":{}}},"address":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"1":{}}},"desiredAmount":{"66275e94-414c-4fba-883f-5fc59fa26be2":{"dae97765-6472-42e4-b129-749784e976f6":{}},"217bb35c-f4d5-4cde-8012-eb0cc8f57832":{"0d455460-c659-44c5-afd7-bdba5211c32d":{}}}},"c835bdca-271b-4e71-86f8-ab72f5efd377":{"minimalAmount":{"6a46d9ee-484c-4644-a7e9-8e7ded5e2d22":{"01ef7f62-ecc9-4fd2-8f70-980a2d25795a":{}}},"address":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"0":{}}},"desiredAmount":{"6a46d9ee-484c-4644-a7e9-8e7ded5e2d22":{"dae97765-6472-42e4-b129-749784e976f6":{}},"a605a6e6-3188-48b6-b2ef-c8137eb2ee99":{"0d455460-c659-44c5-afd7-bdba5211c32d":{}}}},"38b4e4ae-3fc7-4dfa-99e5-ea74d2a379f1":{"8ee51005-e876-4db5-88b5-c9e148feba3f":{"c835bdca-271b-4e71-86f8-ab72f5efd377":{"6ad86184-6890-4323-8021-3496a682c98e":{}}},"34f942cc-96a7-4278-a931-d9194e89dfe1":{"e3e81fb6-1f53-4199-896b-5ceedf297c97":{"6ad86184-6890-4323-8021-3496a682c98e":{}}},"da773107-7a7f-4fc2-b67d-bb9b76e361eb":{"56c1fe60-e438-44c5-b719-25ba23097ed0":{"e76062c0-e298-4443-a187-94cbd4b3bc74":{}}},"a5a46e47-dacb-477b-b823-398e570fe259":{"56c1fe60-e438-44c5-b719-25ba23097ed0":{"7af76a3e-ed65-41b9-9f9d-1a4593c5bf69":{}}}},"29dbff4f-9603-4f57-b51c-65207e8c8b7c":{"069a212d-9cea-4987-be45-e0079a13d96f":{"4bffa1d2-efc3-4fe0-a9aa-693fda567d9e":{"6ad86184-6890-4323-8021-3496a682c98e":{}}},"d1295197-1962-4680-a037-5890f2175bb9":{"5053c784-80b1-47ed-acf8-3c128b464911":{"b0fb4a37-09d5-462e-952a-c3ab29a47e82":{}}}},"56c1fe60-e438-44c5-b719-25ba23097ed0":{"069a212d-9cea-4987-be45-e0079a13d96f":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"6":{}}},"d1295197-1962-4680-a037-5890f2175bb9":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"7":{}}}},"9d66d7a8-2928-441d-8586-0d10834887aa":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"45c6dc20-b4b7-44c1-b3cd-122da513973b":{"9ff09a73-b892-48f2-b976-2cd7de67dcbd":{}}}},"4bffa1d2-efc3-4fe0-a9aa-693fda567d9e":{"address":{"45c6dc20-b4b7-44c1-b3cd-122da513973b":{"e62bb3b3-e749-4e85-b789-51e33a3fbe82":{}}},"abi":{"45c6dc20-b4b7-44c1-b3cd-122da513973b":{"39a06197-ca9b-4ada-ab8e-6de9bd241529":{}}}},"5053c784-80b1-47ed-acf8-3c128b464911":{"0a9cd5b0-6de6-4c69-aa04-2816de994173":{"45c6dc20-b4b7-44c1-b3cd-122da513973b":{"5e721c7e-2b06-494f-a65e-6b527531cddc":{}}}},"a605a6e6-3188-48b6-b2ef-c8137eb2ee99":{"aaa7049a-c2b9-4257-a583-eaf68de2c346":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"2":{}}}},"217bb35c-f4d5-4cde-8012-eb0cc8f57832":{"aaa7049a-c2b9-4257-a583-eaf68de2c346":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"3":{}}}},"6a46d9ee-484c-4644-a7e9-8e7ded5e2d22":{"9da98005-545d-4036-a36e-0f354a84cb50":{"a01f5b1b-fa4d-47cb-9143-fb868e472b11":{"0d455460-c659-44c5-afd7-bdba5211c32d":{}}}},"a01f5b1b-fa4d-47cb-9143-fb868e472b11":{"aaa7049a-c2b9-4257-a583-eaf68de2c346":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"4":{}}}},"66275e94-414c-4fba-883f-5fc59fa26be2":{"9da98005-545d-4036-a36e-0f354a84cb50":{"a2943213-f51f-4fad-a615-1753c8b0743f":{"0d455460-c659-44c5-afd7-bdba5211c32d":{}}}},"a2943213-f51f-4fad-a615-1753c8b0743f":{"aaa7049a-c2b9-4257-a583-eaf68de2c346":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"5":{}}}}},"forwards":{"inputs":{"3988660b-8398-4a78-8889-e5cc8506394e":{"38b4e4ae-3fc7-4dfa-99e5-ea74d2a379f1":{"b9f6ade5-9bdd-46ef-99d2-616f1cb608c4":{}}},"8d57999d-148b-4eff-9e4d-ca00f36e10ea":{"38b4e4ae-3fc7-4dfa-99e5-ea74d2a379f1":{"f1aff635-6110-419c-81b3-ea2bd8b5f791":{}}},"78fb26c0-e46e-490b-a5d7-ff880ac745da":{"38b4e4ae-3fc7-4dfa-99e5-ea74d2a379f1":{"cbfbd020-ce7f-4fb5-aa15-d63e33d10941":{}}},"04df0153-0ab3-410d-9054-44b0965cfce2":{"38b4e4ae-3fc7-4dfa-99e5-ea74d2a379f1":{"4fcb135a-9c6c-497b-a96e-526c4727a64a":{}}},"4e3e4f4a-2e69-4af0-9799-b0a12f0a9499":{"29dbff4f-9603-4f57-b51c-65207e8c8b7c":{"e76062c0-e298-4443-a187-94cbd4b3bc74":{}}},"48cc93ef-ab76-4081-8f58-3fbcc626599c":{"29dbff4f-9603-4f57-b51c-65207e8c8b7c":{"7af76a3e-ed65-41b9-9f9d-1a4593c5bf69":{}}}},"outputs":{"44d775fe-b109-427a-8d30-2fb70ec3b250":{"45c6dc20-b4b7-44c1-b3cd-122da513973b":{"87606a66-0567-440c-9686-f02bf52462e4":{}}},"6dacdfe2-fc10-4f08-9919-2f198cda89f4":{"45c6dc20-b4b7-44c1-b3cd-122da513973b":{"21d246f0-67a7-4b2e-984a-94cf1f7d21e8":{}}}}}}},"iconId":"89f4fde2-5391-4f4c-b55a-55ada280f89c","description":"Calls \"addLiquidity\" method on Uniswap V2 Router contract","attributes":{"locked":true}},"b646dd6e-2ec9-4caa-a611-a0bd7906308b":{"implementations":{"cranq":{"nodes":{"bab278f9-92f3-4313-9363-6ad084394c0c":{"coordinates":[-253,-303],"name":"tokenA data","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"address\",\"desiredAmount\", \"minimalAmount\"]"}},"2505b99d-e535-49cf-8793-02ff8c957157":{"coordinates":[202.33333333333326,-252.33333333333326],"name":"approve tokenA","prototype":"55c96c0b-170d-4b6a-93a2-d56894a89afc"},"55ca1580-e573-4f63-bb8f-2306a0776468":{"coordinates":[304.4000000000001,28],"name":"add liquidity ETH","prototype":"1c480aec-b4de-4093-b532-693f2f13a576"},"c3a856a1-4bff-48dd-8683-4e5300f0a987":{"coordinates":[-405,-51],"name":"addLiquidity params","prototype":"761a7cff-0ef3-4630-88ed-2e644a17ab3b"},"9598eafb-20d4-4a27-8513-aba3797511b1":{"coordinates":[-402,62],"name":"operation params","prototype":"9067c53e-399e-4f28-a6ed-26e987ab2418"},"23a03b65-cf8a-483a-8f9b-692e1472b900":{"coordinates":[-25,-183],"name":"router address, credentials","prototype":"9067c53e-399e-4f28-a6ed-26e987ab2418"},"6a229973-3f50-4f6d-ab83-c2ec02f8ae5d":{"coordinates":[-244,-9],"name":"router contract data","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"address\", \"abi\"]"}},"6f4a6090-083a-4df4-a8af-67978a7a5ff9":{"coordinates":[183,123],"name":"wait for approvals","prototype":"62c8e48b-0926-4fa7-8322-02975bf4dc41"}},"forwards":{"inputs":{"4602e6ff-ae72-46bd-bddb-2065b4f4895a":{"c3a856a1-4bff-48dd-8683-4e5300f0a987":{"b9f6ade5-9bdd-46ef-99d2-616f1cb608c4":{}}},"e971b0f8-3982-4b6e-98d7-22f8409f3817":{"c3a856a1-4bff-48dd-8683-4e5300f0a987":{"f1aff635-6110-419c-81b3-ea2bd8b5f791":{}}},"46368936-c937-4d59-9cf5-943b756ace58":{"c3a856a1-4bff-48dd-8683-4e5300f0a987":{"cbfbd020-ce7f-4fb5-aa15-d63e33d10941":{}}},"642a80c9-e59e-4e40-98e0-842ce385e544":{"c3a856a1-4bff-48dd-8683-4e5300f0a987":{"4fcb135a-9c6c-497b-a96e-526c4727a64a":{}}},"9ab46954-d296-43b4-a18a-377cc168128d":{"9598eafb-20d4-4a27-8513-aba3797511b1":{"e76062c0-e298-4443-a187-94cbd4b3bc74":{}}},"8c3157b3-36b1-4b1f-a20d-202a622dc38c":{"9598eafb-20d4-4a27-8513-aba3797511b1":{"7af76a3e-ed65-41b9-9f9d-1a4593c5bf69":{}}}},"outputs":{"60a037e1-67e3-4d3b-9606-3398163f27af":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"44d775fe-b109-427a-8d30-2fb70ec3b250":{}}},"193c7b18-8f27-4b68-878f-2c2d0bc1b8c4":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"6dacdfe2-fc10-4f08-9919-2f198cda89f4":{}},"2505b99d-e535-49cf-8793-02ff8c957157":{"91b4a65a-6da8-4469-a63e-bc64c18b0d78":{}}}}},"connections":{"bab278f9-92f3-4313-9363-6ad084394c0c":{"address":{"2505b99d-e535-49cf-8793-02ff8c957157":{"3eb6ccfa-35e8-4704-947b-89c795ea6871":{}}},"desiredAmount":{"2505b99d-e535-49cf-8793-02ff8c957157":{"86a67e4f-9f7d-4924-b1b8-9e9b17c5c8cf":{}}}},"c3a856a1-4bff-48dd-8683-4e5300f0a987":{"8ee51005-e876-4db5-88b5-c9e148feba3f":{"bab278f9-92f3-4313-9363-6ad084394c0c":{"6ad86184-6890-4323-8021-3496a682c98e":{}},"55ca1580-e573-4f63-bb8f-2306a0776468":{"3988660b-8398-4a78-8889-e5cc8506394e":{}}},"34f942cc-96a7-4278-a931-d9194e89dfe1":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"8d57999d-148b-4eff-9e4d-ca00f36e10ea":{}}},"da773107-7a7f-4fc2-b67d-bb9b76e361eb":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"78fb26c0-e46e-490b-a5d7-ff880ac745da":{}}},"a5a46e47-dacb-477b-b823-398e570fe259":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"04df0153-0ab3-410d-9054-44b0965cfce2":{}}}},"9598eafb-20d4-4a27-8513-aba3797511b1":{"069a212d-9cea-4987-be45-e0079a13d96f":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"4e3e4f4a-2e69-4af0-9799-b0a12f0a9499":{}},"6a229973-3f50-4f6d-ab83-c2ec02f8ae5d":{"6ad86184-6890-4323-8021-3496a682c98e":{}}},"d1295197-1962-4680-a037-5890f2175bb9":{"23a03b65-cf8a-483a-8f9b-692e1472b900":{"7af76a3e-ed65-41b9-9f9d-1a4593c5bf69":{}},"6f4a6090-083a-4df4-a8af-67978a7a5ff9":{"72a73ffe-8319-4427-878e-3e67f2d150ff":{}}}},"23a03b65-cf8a-483a-8f9b-692e1472b900":{"069a212d-9cea-4987-be45-e0079a13d96f":{"2505b99d-e535-49cf-8793-02ff8c957157":{"8af36cde-8a26-4e21-938d-066a5e5742bd":{}}},"d1295197-1962-4680-a037-5890f2175bb9":{"2505b99d-e535-49cf-8793-02ff8c957157":{"82b16f00-66eb-49b7-8f6d-afa56a77f4c9":{}}}},"6a229973-3f50-4f6d-ab83-c2ec02f8ae5d":{"address":{"23a03b65-cf8a-483a-8f9b-692e1472b900":{"e76062c0-e298-4443-a187-94cbd4b3bc74":{}}}},"6f4a6090-083a-4df4-a8af-67978a7a5ff9":{"eb4c2873-890f-4780-a895-53e321f3739e":{"55ca1580-e573-4f63-bb8f-2306a0776468":{"48cc93ef-ab76-4081-8f58-3fbcc626599c":{}}}},"2505b99d-e535-49cf-8793-02ff8c957157":{"74f19ab3-291b-479d-98b0-52ac9cd6affe":{"6f4a6090-083a-4df4-a8af-67978a7a5ff9":{"f58efe33-f70e-4570-ac54-670aaf844385":{}}}}}}},"interface":{"inputs":{"4602e6ff-ae72-46bd-bddb-2065b4f4895a":{"type":"{\n  \"address\": string,\n  \"desiredAmount\": number,\n  optional \"minimalAmount\": number\n}","name":"tokenA","description":""},"e971b0f8-3982-4b6e-98d7-22f8409f3817":{"type":"{\n\"desiredAmount\": number,\noptional \"minimalAmount\": number\n}","name":"ETH","description":""},"46368936-c937-4d59-9cf5-943b756ace58":{"type":"string","name":"to address","description":"The address that will get the minted liquidity token."},"642a80c9-e59e-4e40-98e0-842ce385e544":{"type":"number","name":"deadline","description":"Unix timestamp of the deadline until the operation should be completed or will be reverted."},"9ab46954-d296-43b4-a18a-377cc168128d":{"type":"typeof `router contract` of `add liquidity ETH`","name":"router contract"},"8c3157b3-36b1-4b1f-a20d-202a622dc38c":{"type":"typeof `credentials` of `add liquidity ETH`","name":"credentials"}},"outputs":{"60a037e1-67e3-4d3b-9606-3398163f27af":{"type":"any","name":"result"},"193c7b18-8f27-4b68-878f-2c2d0bc1b8c4":{"type":"typeof `error` of `add liquidity ETH`","name":"error"}}},"name":"blockchain/ethereum/Uniswap/v2/Liquidity adder ETH","description":"Add liquidity to a pool.\nIf the pool doesn't exists it will be created.","iconId":"6e06ed83-301e-41ca-bae9-1257efb8e703","original":"0979c75a-e817-4ed7-83a3-bb2570613cac","attributes":{"locked":true}},"1c480aec-b4de-4093-b532-693f2f13a576":{"name":"blockchain/ethereum/Uniswap/v2/Router/AddLiquidityETH","interface":{"inputs":{"3988660b-8398-4a78-8889-e5cc8506394e":{"type":"{\n  \"address\": string,\n  \"desiredAmount\": number,\n   optional \"minimalAmount\": number\n}","name":"tokenA","description":"[Inherited from port `1` of `tokens`] \nReceives individual item for syncing."},"8d57999d-148b-4eff-9e4d-ca00f36e10ea":{"type":"{\n\"desiredAmount\": number,\noptional \"minimalAmount\": number\n}","name":"ETH","description":"[Inherited from port `2` of `tokens`] \nReceives individual item for syncing."},"78fb26c0-e46e-490b-a5d7-ff880ac745da":{"type":"string","name":"liquidity token to","description":"[Inherited from port `item` of `item appender`] \nReceives item to append to the array.\n\nExample:\n1"},"04df0153-0ab3-410d-9054-44b0965cfce2":{"type":"number","name":"deadline","description":"[Inherited from port `item` of `item appender copy`] \nReceives item to append to the array.\n\nExample:\n1"},"4e3e4f4a-2e69-4af0-9799-b0a12f0a9499":{"type":"{\n\"address\": string,\n\"abi\": {string:any}\n}","name":"router contract"},"48cc93ef-ab76-4081-8f58-3fbcc626599c":{"type":"typeof `credentials` of `execute contract`","name":"credentials"}},"outputs":{"44d775fe-b109-427a-8d30-2fb70ec3b250":{"type":"any","name":"result"},"6dacdfe2-fc10-4f08-9919-2f198cda89f4":{"type":"typeof `error` of `execute contract`","name":"error"}}},"implementations":{"cranq":{"nodes":{"6a46d9ee-484c-4644-a7e9-8e7ded5e2d22":{"coordinates":[-112.40000000000009,-114],"name":"tokenA min amount","prototype":"a6599b7b-502d-437b-9c84-0f504921bb41","params":{"5d570fcf-b8db-4a62-8b84-4953a92d517f":"0"}},"c835bdca-271b-4e71-86f8-ab72f5efd377":{"coordinates":[-256.4,-443.375],"name":"tokenA info","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"address\",\"desiredAmount\", \"minimalAmount\"]"}},"e3e81fb6-1f53-4199-896b-5ceedf297c97":{"coordinates":[-298.4,-212.375],"name":"ETH info","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"desiredAmount\", \"minimalAmount\"]"}},"dffb3e51-6ffc-4a24-875e-79927f4e78e8":{"coordinates":[505.5999999999999,6],"name":"execute contract","prototype":"228b10ab-9b15-4317-8700-f5ddac476c25","params":{"1c54037b-03d2-447f-8e10-41c1f3ebfbfe":"\"addLiquidityETH\""}},"4bffa1d2-efc3-4fe0-a9aa-693fda567d9e":{"coordinates":[14.599999999999909,245.625],"name":"router contract data","prototype":"73303290-6d1e-44cf-9414-66769cbb8e91","params":{"7b39d568-3d5a-46fe-8670-3355f60c2746":"[\"address\", \"abi\"]"}},"9d66d7a8-2928-441d-8586-0d10834887aa":{"coordinates":[341.5999999999999,-261.375],"name":"build contract parameters","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[0,1,2,3,4,5]"},"description":"addLiquidity parameters as array:\n  address tokenA,\n  uint amountADesired,\n  uint amountAMin,\n  uint amountETHMin,\n  address to,\n  uint deadline"},"38b4e4ae-3fc7-4dfa-99e5-ea74d2a379f1":{"coordinates":[-469.4000000000001,-30],"name":"contract call params","prototype":"761a7cff-0ef3-4630-88ed-2e644a17ab3b"},"29dbff4f-9603-4f57-b51c-65207e8c8b7c":{"coordinates":[-463.4000000000001,70],"name":"operation params","prototype":"9067c53e-399e-4f28-a6ed-26e987ab2418"},"56c1fe60-e438-44c5-b719-25ba23097ed0":{"coordinates":[23.59999999999991,102],"name":"liquidity to & deadline","prototype":"9067c53e-399e-4f28-a6ed-26e987ab2418"},"5053c784-80b1-47ed-acf8-3c128b464911":{"coordinates":[8.599999999999909,340],"name":"credentials","prototype":"420bb3c5-79a9-4b4d-934e-ee04d07f92b0"},"dbe3ffd9-aaf6-4b13-a966-960749ec04e3":{"coordinates":[344.5999999999999,-85],"name":"build transaction parameters","prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"gas\", \"value\"]","gas":"9999999"}},"16e4c2b9-c2dc-4262-b6b5-1688865d2b93":{"coordinates":[-114.40000000000009,-10],"name":"ETH min amount","prototype":"a6599b7b-502d-437b-9c84-0f504921bb41","params":{"5d570fcf-b8db-4a62-8b84-4953a92d517f":"0"}},"ce278617-a354-4332-a2f9-e994a8542ec5":{"coordinates":[-80.90000000000009,-382],"name":"convert to units desiredAmountA","prototype":"eb3f5e07-27f3-42dc-9ac1-60f747d6c1b5"},"eac44e68-4316-4f25-8883-4e96d35fd14c":{"coordinates":[-74.90000000000009,-247],"name":"convert  to units desiredAmountEth","prototype":"eb3f5e07-27f3-42dc-9ac1-60f747d6c1b5"},"ff10a3bb-e85d-44b5-b517-fce6ec7a7a98":{"coordinates":[28.09999999999991,-115],"name":"convert  to units tokenA min amount","prototype":"eb3f5e07-27f3-42dc-9ac1-60f747d6c1b5"},"ac1a0c09-9aae-4f23-a038-60da20618b97":{"coordinates":[61.09999999999991,-3],"name":"convert  to units eth min amount","prototype":"eb3f5e07-27f3-42dc-9ac1-60f747d6c1b5"}},"connections":{"4bffa1d2-efc3-4fe0-a9aa-693fda567d9e":{"address":{"dffb3e51-6ffc-4a24-875e-79927f4e78e8":{"e62bb3b3-e749-4e85-b789-51e33a3fbe82":{}}},"abi":{"dffb3e51-6ffc-4a24-875e-79927f4e78e8":{"39a06197-ca9b-4ada-ab8e-6de9bd241529":{}}}},"c835bdca-271b-4e71-86f8-ab72f5efd377":{"minimalAmount":{"6a46d9ee-484c-4644-a7e9-8e7ded5e2d22":{"01ef7f62-ecc9-4fd2-8f70-980a2d25795a":{}}},"desiredAmount":{"6a46d9ee-484c-4644-a7e9-8e7ded5e2d22":{"dae97765-6472-42e4-b129-749784e976f6":{}},"ce278617-a354-4332-a2f9-e994a8542ec5":{"0d455460-c659-44c5-afd7-bdba5211c32d":{}}},"address":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"0":{}}}},"9d66d7a8-2928-441d-8586-0d10834887aa":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"dffb3e51-6ffc-4a24-875e-79927f4e78e8":{"9ff09a73-b892-48f2-b976-2cd7de67dcbd":{}}}},"38b4e4ae-3fc7-4dfa-99e5-ea74d2a379f1":{"8ee51005-e876-4db5-88b5-c9e148feba3f":{"c835bdca-271b-4e71-86f8-ab72f5efd377":{"6ad86184-6890-4323-8021-3496a682c98e":{}}},"34f942cc-96a7-4278-a931-d9194e89dfe1":{"e3e81fb6-1f53-4199-896b-5ceedf297c97":{"6ad86184-6890-4323-8021-3496a682c98e":{}}},"da773107-7a7f-4fc2-b67d-bb9b76e361eb":{"56c1fe60-e438-44c5-b719-25ba23097ed0":{"e76062c0-e298-4443-a187-94cbd4b3bc74":{}}},"a5a46e47-dacb-477b-b823-398e570fe259":{"56c1fe60-e438-44c5-b719-25ba23097ed0":{"7af76a3e-ed65-41b9-9f9d-1a4593c5bf69":{}}}},"29dbff4f-9603-4f57-b51c-65207e8c8b7c":{"069a212d-9cea-4987-be45-e0079a13d96f":{"4bffa1d2-efc3-4fe0-a9aa-693fda567d9e":{"6ad86184-6890-4323-8021-3496a682c98e":{}}},"d1295197-1962-4680-a037-5890f2175bb9":{"5053c784-80b1-47ed-acf8-3c128b464911":{"b0fb4a37-09d5-462e-952a-c3ab29a47e82":{}}}},"5053c784-80b1-47ed-acf8-3c128b464911":{"0a9cd5b0-6de6-4c69-aa04-2816de994173":{"dffb3e51-6ffc-4a24-875e-79927f4e78e8":{"5e721c7e-2b06-494f-a65e-6b527531cddc":{}}}},"56c1fe60-e438-44c5-b719-25ba23097ed0":{"069a212d-9cea-4987-be45-e0079a13d96f":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"4":{}}},"d1295197-1962-4680-a037-5890f2175bb9":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"5":{}}}},"e3e81fb6-1f53-4199-896b-5ceedf297c97":{"minimalAmount":{"16e4c2b9-c2dc-4262-b6b5-1688865d2b93":{"01ef7f62-ecc9-4fd2-8f70-980a2d25795a":{}}},"desiredAmount":{"16e4c2b9-c2dc-4262-b6b5-1688865d2b93":{"dae97765-6472-42e4-b129-749784e976f6":{}},"eac44e68-4316-4f25-8883-4e96d35fd14c":{"0d455460-c659-44c5-afd7-bdba5211c32d":{}}}},"dbe3ffd9-aaf6-4b13-a966-960749ec04e3":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"dffb3e51-6ffc-4a24-875e-79927f4e78e8":{"a1d2a03b-c119-442d-b464-d3aeeab20f1e":{}}}},"ce278617-a354-4332-a2f9-e994a8542ec5":{"aaa7049a-c2b9-4257-a583-eaf68de2c346":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"1":{}}}},"eac44e68-4316-4f25-8883-4e96d35fd14c":{"aaa7049a-c2b9-4257-a583-eaf68de2c346":{"dbe3ffd9-aaf6-4b13-a966-960749ec04e3":{"value":{}}}},"6a46d9ee-484c-4644-a7e9-8e7ded5e2d22":{"9da98005-545d-4036-a36e-0f354a84cb50":{"ff10a3bb-e85d-44b5-b517-fce6ec7a7a98":{"0d455460-c659-44c5-afd7-bdba5211c32d":{}}}},"ff10a3bb-e85d-44b5-b517-fce6ec7a7a98":{"aaa7049a-c2b9-4257-a583-eaf68de2c346":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"2":{}}}},"16e4c2b9-c2dc-4262-b6b5-1688865d2b93":{"9da98005-545d-4036-a36e-0f354a84cb50":{"ac1a0c09-9aae-4f23-a038-60da20618b97":{"0d455460-c659-44c5-afd7-bdba5211c32d":{}}}},"ac1a0c09-9aae-4f23-a038-60da20618b97":{"aaa7049a-c2b9-4257-a583-eaf68de2c346":{"9d66d7a8-2928-441d-8586-0d10834887aa":{"3":{}}}}},"forwards":{"inputs":{"3988660b-8398-4a78-8889-e5cc8506394e":{"38b4e4ae-3fc7-4dfa-99e5-ea74d2a379f1":{"b9f6ade5-9bdd-46ef-99d2-616f1cb608c4":{}}},"8d57999d-148b-4eff-9e4d-ca00f36e10ea":{"38b4e4ae-3fc7-4dfa-99e5-ea74d2a379f1":{"f1aff635-6110-419c-81b3-ea2bd8b5f791":{}}},"78fb26c0-e46e-490b-a5d7-ff880ac745da":{"38b4e4ae-3fc7-4dfa-99e5-ea74d2a379f1":{"cbfbd020-ce7f-4fb5-aa15-d63e33d10941":{}}},"04df0153-0ab3-410d-9054-44b0965cfce2":{"38b4e4ae-3fc7-4dfa-99e5-ea74d2a379f1":{"4fcb135a-9c6c-497b-a96e-526c4727a64a":{}}},"4e3e4f4a-2e69-4af0-9799-b0a12f0a9499":{"29dbff4f-9603-4f57-b51c-65207e8c8b7c":{"e76062c0-e298-4443-a187-94cbd4b3bc74":{}}},"48cc93ef-ab76-4081-8f58-3fbcc626599c":{"29dbff4f-9603-4f57-b51c-65207e8c8b7c":{"7af76a3e-ed65-41b9-9f9d-1a4593c5bf69":{}}}},"outputs":{"44d775fe-b109-427a-8d30-2fb70ec3b250":{"dffb3e51-6ffc-4a24-875e-79927f4e78e8":{"87606a66-0567-440c-9686-f02bf52462e4":{}}},"6dacdfe2-fc10-4f08-9919-2f198cda89f4":{"dffb3e51-6ffc-4a24-875e-79927f4e78e8":{"21d246f0-67a7-4b2e-984a-94cf1f7d21e8":{}}}}}}},"iconId":"89f4fde2-5391-4f4c-b55a-55ada280f89c","original":"634d2024-2796-4288-b986-d6fb62336270","description":"Calls \"addLiquidityETH\" method on Uniswap V2 Router contract","attributes":{"locked":true}},"567a3cd3-24f4-4fb1-86cd-35abfcda96ce":{"description":"Forwards input data to one of two outputs, depending on the condition.\n\nExample:\n1. false@0 received via `condition`\n2. \"A\"@0 received via `data`\n3. \"A\"@0 sent via `on false`\n\nMore:\nhttps://github.com/Cranq-io/cranq-tutorials/blob/main/reference/1_application_flow/1_1_junctions/README.md#example---using-forks","interface":{"inputs":{"8dae1988-d752-4c9b-b8c5-f9222e776dec":{"description":"Receives the data to be forwarded to either output.","type":"any","name":"data"},"8e1a5f69-ca43-484d-8099-ef265bedda62":{"description":"Receives the evaluation of some condition.","type":"boolean","name":"condition"}},"outputs":{"26b011f0-6b5a-45a3-a4b6-a90d93ce7046":{"description":"Sends signal received via `data` when condition was true.","type":"typeof `data`","name":"on true"},"8c42e25b-e7f1-421a-90f5-cd88a4674cf0":{"description":"Sends signal received via `data` when condition was false.","type":"typeof `data`","name":"on false"}}},"implementations":{"cranq":{"nodes":{"dac346f3-5551-4dd1-ac9b-5297b4d303fb":{"coordinates":[-47,-48],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"data\",\"condition\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync data & condition"},"c530f214-0b46-41d4-ab2a-331e97584592":{"coordinates":[35,55],"description":"","params":{},"prototype":"2cf489db-ce63-4548-83bc-42326ce7e50c","name":"fork"}},"connections":{"dac346f3-5551-4dd1-ac9b-5297b4d303fb":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"c530f214-0b46-41d4-ab2a-331e97584592":{"71d40b23-b956-4355-813d-d2c70c81b7f5":{"description":""}}}}},"forwards":{"inputs":{"8dae1988-d752-4c9b-b8c5-f9222e776dec":{"dac346f3-5551-4dd1-ac9b-5297b4d303fb":{"data":{}}},"8e1a5f69-ca43-484d-8099-ef265bedda62":{"dac346f3-5551-4dd1-ac9b-5297b4d303fb":{"condition":{}}}},"outputs":{"26b011f0-6b5a-45a3-a4b6-a90d93ce7046":{"c530f214-0b46-41d4-ab2a-331e97584592":{"bbe6eb8b-a22e-4b23-9063-3cddbe4aafee":{}}},"8c42e25b-e7f1-421a-90f5-cd88a4674cf0":{"c530f214-0b46-41d4-ab2a-331e97584592":{"978a565d-6b67-4198-90a7-c3214ab6ae6a":{}}}}}}},"name":"flow/Fork","keywords":{"if":null,"conditional":null,"ternary":null,"route":null,"routing":null},"iconId":"802b6352-2279-4681-84b8-6558e185fd36","attributes":{"featured":true,"locked":true}},"2cf489db-ce63-4548-83bc-42326ce7e50c":{"description":"See `flow/Fork`.","interface":{"inputs":{"71d40b23-b956-4355-813d-d2c70c81b7f5":{"type":"{\"data\":any,\"condition\":boolean}","name":"data & condition"}},"outputs":{"bbe6eb8b-a22e-4b23-9063-3cddbe4aafee":{"type":"(typeof `data & condition`)[\"data\"]","name":"true"},"978a565d-6b67-4198-90a7-c3214ab6ae6a":{"type":"(typeof `data & condition`)[\"data\"]","name":"false"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"71d40b23-b956-4355-813d-d2c70c81b7f5":"if (data.condition)\n  outputs.true(data.data, tag);\nelse\n  outputs.false(data.data, tag);\n"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"71d40b23-b956-4355-813d-d2c70c81b7f5":"if (data.condition)\n  outputs.true(data.data, tag);\nelse\n  outputs.false(data.data, tag);\n"}}},"name":"flow/Fork (internal)","iconId":"abac34e3-c832-4c7b-b045-62f82ebc3ddb","attributes":{"internal":true,"locked":true}},"ff69726b-734e-4fb7-ac51-72c8eea8bdd6":{"description":"Checks if the string received on `a` is equal to string received via `b`.\n\nExample:\n\n1. \"foo\"@0 is received via `a`\n2. \"bar\"@0 is received via `b`\n3. false@0 is sent via `equal`","interface":{"inputs":{"a0934373-43a4-4cd5-83eb-860bc20d790a":{"type":"string","name":"a","description":"The first string"},"3a93b0f5-d7ce-4dfd-bc70-f46c768bf142":{"type":"string","name":"b","description":"The second string"}},"outputs":{"61410efe-0096-4bd0-8169-30b254646910":{"type":"boolean","name":"equal","description":"Sends true if the two strings are the same, false otherwise."}}},"implementations":{"cranq":{"nodes":{"81f55657-a1f5-47b0-90af-64ef3cfd3612":{"coordinates":[0,0],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"a\",\"b\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync a & b"},"ebea7b0e-dc05-416c-bce2-66b2129b8c91":{"coordinates":[0,0],"description":"","params":{},"prototype":"e0dfb9e0-dd2a-48c4-973b-0f253b294414","name":"equal"}},"connections":{"81f55657-a1f5-47b0-90af-64ef3cfd3612":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"ebea7b0e-dc05-416c-bce2-66b2129b8c91":{"208799e1-a794-4a47-afc0-7fd53a57de00":{"description":""}}}}},"forwards":{"inputs":{"a0934373-43a4-4cd5-83eb-860bc20d790a":{"81f55657-a1f5-47b0-90af-64ef3cfd3612":{"a":{}}},"3a93b0f5-d7ce-4dfd-bc70-f46c768bf142":{"81f55657-a1f5-47b0-90af-64ef3cfd3612":{"b":{}}}},"outputs":{"61410efe-0096-4bd0-8169-30b254646910":{"ebea7b0e-dc05-416c-bce2-66b2129b8c91":{"d4fcc3f9-b12d-4024-8970-2ba54139f651":{}}}}}}},"name":"string/Equality tester","keywords":{"string":null,"equal":null,"sameness":null},"iconId":"c3fdd7fb-1ae3-400a-bf93-30e24b1ea004","attributes":{"locked":true}},"e0dfb9e0-dd2a-48c4-973b-0f253b294414":{"description":"","interface":{"inputs":{"208799e1-a794-4a47-afc0-7fd53a57de00":{"type":"{\"a\":string,\"b\":string}","name":"a & b"}},"outputs":{"d4fcc3f9-b12d-4024-8970-2ba54139f651":{"type":"boolean","name":"equal"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"208799e1-a794-4a47-afc0-7fd53a57de00":"outputs.equal(data.a === data.b, tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"208799e1-a794-4a47-afc0-7fd53a57de00":"outputs.equal(data.a === data.b, tag);"}}},"name":"string/Equality tester/Internal","attributes":{"internal":true,"locked":true}},"384a63e5-dbde-4312-99d1-257fa935c2fe":{"description":"Repeats the input data for each item in the array.\n\nExample:\n1. [1,2,3]@0 receiced via `array`\n2. \"foo\"@0 received via `data`\n3. \"foo\"@0:0\n    \"foo\"@0:1\n    \"foo\"@0:2\nsent via `data`\n    ","interface":{"inputs":{"eacfcdd3-c907-40b3-86a5-15855a7b4caf":{"description":"Recieves array which specifies number of times to repeat data.\n\nExample:\n[1,2,3]","type":"any[]","name":"array"},"c2471c2d-1ad7-4738-a3d8-87ebc566aa64":{"description":"Recieves data to be repeated.\n\nExample:\n\"foo\"","type":"any","name":"data"}},"outputs":{"987cc1f0-ddda-4f01-8358-d32676a0861e":{"description":"Sends repeated data with tag.\n\nExample:\n\"foo\"","type":"typeof`data`","name":"data"}}},"implementations":{"cranq":{"nodes":{"20fba366-3e52-4a3c-89a6-dcc8f28afc5a":{"coordinates":[0,0],"description":"","params":{},"prototype":"ed50d3dd-e850-434d-a4da-90d05fc35e8b","name":"count items"},"1b383f97-809a-4271-9071-3016d4fe986d":{"coordinates":[64,-94],"description":"","params":{},"prototype":"79b67425-0224-45da-bdcd-3adbe2a1812f","name":"repeat data"}},"connections":{"20fba366-3e52-4a3c-89a6-dcc8f28afc5a":{"90dc3844-70bc-4a25-a7f4-3d281c97e5fc":{"1b383f97-809a-4271-9071-3016d4fe986d":{"8e1d3a32-366a-4829-9cad-5559dac5fba1":{"description":""}}}}},"forwards":{"inputs":{"eacfcdd3-c907-40b3-86a5-15855a7b4caf":{"20fba366-3e52-4a3c-89a6-dcc8f28afc5a":{"3796de71-a230-4869-9963-2c1815242213":{}}},"c2471c2d-1ad7-4738-a3d8-87ebc566aa64":{"1b383f97-809a-4271-9071-3016d4fe986d":{"20b11cff-e0f4-415a-9a82-7d5f6d7e4a5f":{}}}},"outputs":{"987cc1f0-ddda-4f01-8358-d32676a0861e":{"1b383f97-809a-4271-9071-3016d4fe986d":{"fda3e580-c396-4439-a59d-f7cf0fac24a8":{}}}}}}},"name":"data/array/Repeater","iconId":"d1c7639e-bdd6-4846-b494-1c303a532da5","keywords":{"repeat":null,"loop":null,"for":null},"attributes":{"featured":true,"locked":true}},"ed50d3dd-e850-434d-a4da-90d05fc35e8b":{"description":"Determines the length of the input array.\n\nExample:\n1. [1,2]@0 received via `array`\n2. 2@0 sent via `length`","interface":{"inputs":{"3796de71-a230-4869-9963-2c1815242213":{"type":"any[]","name":"array","description":"Recieves array to determine length of.\n\nExample:\n[1,2]"}},"outputs":{"90dc3844-70bc-4a25-a7f4-3d281c97e5fc":{"type":"number","name":"length","description":"Sends `array` length.\n\nExample:\n2"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"3796de71-a230-4869-9963-2c1815242213":"outputs.length(data.length, tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"3796de71-a230-4869-9963-2c1815242213":"outputs.length(data.length, tag);"}}},"name":"data/array/Length getter","keywords":{"size":null},"iconId":"c3fdd7fb-1ae3-400a-bf93-30e24b1ea004","attributes":{"locked":true}},"79b67425-0224-45da-bdcd-3adbe2a1812f":{"description":"Repeats the input the specified amount of times.\n\nThe tag on the repeat signals will contain the index of the current iteration.\n\nNote that the repeats will be sent synchronously.\n\nExample:\n1. \"A\"@0 received via `data`\n2. 3@0 received via `count`\n3. \"A\"@\"0:0\" sent via `data`\n4. \"A\"@\"0:1\" sent via `data`\n5. \"A\"@\"0:2\" sent via `data`","interface":{"inputs":{"20b11cff-e0f4-415a-9a82-7d5f6d7e4a5f":{"description":"Receives data to be repeated.","type":"any","name":"data"},"8e1d3a32-366a-4829-9cad-5559dac5fba1":{"description":"Receives the number of times the input is to be repeated.","type":"number","name":"count"}},"outputs":{"fda3e580-c396-4439-a59d-f7cf0fac24a8":{"description":"Sends the repeated signal.","type":"typeof `data`","name":"data"}}},"implementations":{"cranq":{"nodes":{"6b5f63b1-6430-4f52-94be-bb4c87d50929":{"coordinates":[-37,65],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"data\",\"count\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync data & count"},"dea17bc9-3677-4e41-a63a-47683a06c031":{"coordinates":[49,-49],"description":"","params":{},"prototype":"3eff44c5-2016-47e9-bdef-0c86e69ed796","name":"repeat"}},"connections":{"6b5f63b1-6430-4f52-94be-bb4c87d50929":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"dea17bc9-3677-4e41-a63a-47683a06c031":{"152c9d12-556b-4bd4-ba17-e39ac5d72490":{"description":""}}}}},"forwards":{"inputs":{"20b11cff-e0f4-415a-9a82-7d5f6d7e4a5f":{"6b5f63b1-6430-4f52-94be-bb4c87d50929":{"data":{}}},"8e1d3a32-366a-4829-9cad-5559dac5fba1":{"6b5f63b1-6430-4f52-94be-bb4c87d50929":{"count":{}}}},"outputs":{"fda3e580-c396-4439-a59d-f7cf0fac24a8":{"dea17bc9-3677-4e41-a63a-47683a06c031":{"8bf5830c-baef-497f-a1d3-a9acfcf84618":{}}}}}}},"name":"flow/Repeater","iconId":"d1c7639e-bdd6-4846-b494-1c303a532da5","attributes":{"locked":true}},"3eff44c5-2016-47e9-bdef-0c86e69ed796":{"description":"See `flow/Repeater`.","interface":{"inputs":{"152c9d12-556b-4bd4-ba17-e39ac5d72490":{"type":"{\"data\":any,\"count\":number}","name":"data & count"}},"outputs":{"8bf5830c-baef-497f-a1d3-a9acfcf84618":{"type":"typeof `data & count`[\"data\"]","name":"data"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"152c9d12-556b-4bd4-ba17-e39ac5d72490":"const {count, data:item} = data;\nfor (let i=0; i<count; i++)\n  outputs.data(item, `${tag}:${i}`);\n"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"152c9d12-556b-4bd4-ba17-e39ac5d72490":"const {count, data:item} = data;\nfor (let i=0; i<count; i++)\n  outputs.data(item, `${tag}:${i}`);\n"}}},"name":"flow/Repeater (internal)","attributes":{"internal":true,"locked":true}},"efbace8a-a0c1-4495-932c-7752fcc212d3":{"name":"data/array/Step iterator","description":"Iterates over the items of an array, asynchronously.\n\nTags are controlled:\n\nOn receiving the array, the node sends out the first item (if any) using a nested tag. (\":0\" appended to the original tag.)\n\nSubsequent items will be sent out on receiving signals on `next`, with incremented tags.","interface":{"inputs":{"d079a46d-16a1-4019-b037-eb25ff63b344":{"type":"any[]","name":"array","description":"Sets up iteration and sends out the first item and index 0 with an iterable tag based on the original tag.\n\nWhen the array has only one or zero elements, a signal with the same tag will also be sent through `done`.\n\nExample:\n[1,2,3]"},"6724a763-9749-41bb-a3dc-2ec659c8b72b":{"type":"any","name":"next","description":"Triggers sending out the next item and index, or, when there are no more items, the done signal.\n\nTags on signals received through `next` are expected to be iterable, and identical to the tag sent out for the previous item. (This allows for simple loopbacks between `item` and `next`.)\n\nTags on signals sent out on `item` and `index` are incremented versions of what was received through `next`.\n\nExample:\n0"}},"outputs":{"da78f0ed-be96-41f5-90e5-bf31ef6fd262":{"type":"typeof`array`[number]","name":"item","description":"Sends the next item in the array.\n\nTags are iterable, and nested versions of the tag of the received array. (If the array tag was \"start\", item tags will be \"start:0\", \"start:1\", etc.)\n\nExample:\n1"},"0d15a9b9-a708-4b34-b199-51232e59f94b":{"type":"number","name":"index","description":"Sends the next index in the array.\n\nTags are iterable, and nested versions of the tag of the received array. (If the array tag was \"start\", item tags will be \"start:0\", \"start:1\", etc.)\n\nExample:\n0"},"ed7be79a-f008-4d37-8d43-faf2607e6ef5":{"type":"typeof`array`","name":"done","description":"Sends out the iterated array when there are no more items in the array and a signal received through `next`, or, when an array is received through `array` that has one or 0 items.\n\nThe tag of the outgoing signal matches that of he original array.\n\nExample:\n[1,2,3]"},"5f5589df-af99-4cdf-82f7-2e4d99e6962c":{"type":"any","name":"bounced","description":"Sends any `next` signal that didn't satisfy the iterable tag requirement.\n"}}},"implementations":{"cranq":{"nodes":{"494ff0d1-6927-4a1c-88ff-94b9e543b3dd":{"coordinates":[-114.25,-67.25],"name":"nest tag","prototype":"faf21612-e9e1-447b-8afd-b4eae3366676","params":{}},"41e56f76-09a7-448a-b664-8abe89489332":{"coordinates":[-9.25,22.75],"name":"iterate","prototype":"78684ad8-a8de-4eff-b275-04d97c8391d8","params":{}},"6f28b266-027d-49ca-9b50-071c0294ad9d":{"coordinates":[112.75,-94.25],"name":"trim tag","prototype":"d755b98a-18fb-4ca2-8580-7ad8c426f4b2","params":{}},"58b349c6-e113-4592-b7f1-f9a857a46626":{"coordinates":[-6,145],"name":"increment tag","prototype":"34ed5ff2-43d8-46c5-92cb-f25b1ecbfeda","params":{}}},"connections":{"494ff0d1-6927-4a1c-88ff-94b9e543b3dd":{"f61bcb62-2072-41d6-87da-79ccad20f7d2":{"41e56f76-09a7-448a-b664-8abe89489332":{"c1a54d85-36b5-4842-9688-fb2ab8d1cd41":{}}}},"41e56f76-09a7-448a-b664-8abe89489332":{"e159c36b-a301-46ff-92db-64eaeab74d69":{"6f28b266-027d-49ca-9b50-071c0294ad9d":{"ca54dccf-ed97-4731-8eb0-ef76fe19e844":{}}}},"58b349c6-e113-4592-b7f1-f9a857a46626":{"b9ad661b-2879-4b8f-9335-c223ba010a4b":{"41e56f76-09a7-448a-b664-8abe89489332":{"9f2d26e4-7f08-45c0-91bc-b2495b0c4a79":{}}}}},"forwards":{"inputs":{"d079a46d-16a1-4019-b037-eb25ff63b344":{"494ff0d1-6927-4a1c-88ff-94b9e543b3dd":{"f5e0ae76-bfc3-4041-98b7-9fbc6688a148":{}}},"6724a763-9749-41bb-a3dc-2ec659c8b72b":{"58b349c6-e113-4592-b7f1-f9a857a46626":{"4b2b80cb-8d64-40a5-ae06-342257b858cc":{}}}},"outputs":{"da78f0ed-be96-41f5-90e5-bf31ef6fd262":{"41e56f76-09a7-448a-b664-8abe89489332":{"232f9f14-c24e-4f7f-b415-27ccbdfb9dbf":{}}},"ed7be79a-f008-4d37-8d43-faf2607e6ef5":{"6f28b266-027d-49ca-9b50-071c0294ad9d":{"c1927e5c-f5ca-42e1-aedd-78efd6748dfe":{}}},"5f5589df-af99-4cdf-82f7-2e4d99e6962c":{"58b349c6-e113-4592-b7f1-f9a857a46626":{"a5ea47e0-1e3f-4f32-afc4-3f0ebe9c3030":{}}},"0d15a9b9-a708-4b34-b199-51232e59f94b":{"41e56f76-09a7-448a-b664-8abe89489332":{"8e36f0c9-932a-4e31-aa7a-e17ff0fee028":{}}}}}}},"keywords":{"foreach":null},"iconId":"d1c7639e-bdd6-4846-b494-1c303a532da5","attributes":{"locked":true}},"faf21612-e9e1-447b-8afd-b4eae3366676":{"implementations":{"es6":{"inputFunctions":{"f5e0ae76-bfc3-4041-98b7-9fbc6688a148":"outputs.data(data, `${tag}:0`);"}},"es6-node":{"inputFunctions":{"f5e0ae76-bfc3-4041-98b7-9fbc6688a148":"outputs.data(data, `${tag}:0`);"}}},"interface":{"inputs":{"f5e0ae76-bfc3-4041-98b7-9fbc6688a148":{"type":"any","name":"data","description":"Receives the signal to be nested."}},"outputs":{"f61bcb62-2072-41d6-87da-79ccad20f7d2":{"type":"typeof `data`","name":"data","description":"Sends signal with data identical to the one received via `data`, but with nested tag."}}},"name":"flow/Tag nester","description":"Creates a new level of iteration on the received tag, by appending \":0\" to it.\n\nOpposite of `flow/Tag trimmer`.\n\nUsed for lining up signals with iterations. (See eg. `data/array/Iterator`.)\n\nExample:\n1. \"A\"@0 received via `data`\n2. \"A\"@\"0:0\" is sent via `data` (output)\n\nSee also:\n* `flow/Tag incrementer`\n* `flow/Tag trimer`","keywords":{"simulate iteration":null,"fake iteration":null,"synchronization":null,"syncing":null},"iconId":"2c4a8b8d-1580-4a5f-ad00-77936a3e914d","attributes":{"locked":true}},"78684ad8-a8de-4eff-b275-04d97c8391d8":{"implementations":{"es6":{"inputFunctions":{"c1a54d85-36b5-4842-9688-fb2ab8d1cd41":"const {length} = data;\nstate.doneTag = tag;\n\nif (length > 1) {\n  state.array = data;\n  state.index = 1;\n}\nif (length > 0) {\n  outputs.item(data[0], tag);\n  outputs.index(0, tag);\n}\nif (length <= 1) {\n  outputs.done(data, tag);\n}","9f2d26e4-7f08-45c0-91bc-b2495b0c4a79":"const {array, index, doneTag} = state;\nif (array !== undefined) {\n  const {length} = array;\n  if (index < length) {\n    state.index = index + 1;\n    outputs.item(array[index], tag);\n    outputs.index(index, tag);\n  }\n  if (state.index === length) {\n    state.array = undefined;\n    state.index = undefined;\n    state.doneTag = undefined;\n    outputs.done(array, doneTag);\n  }\n}"}},"es6-node":{"inputFunctions":{"c1a54d85-36b5-4842-9688-fb2ab8d1cd41":"const {length} = data;\nstate.doneTag = tag;\n\nif (length > 1) {\n  state.array = data;\n  state.index = 1;\n}\nif (length > 0) {\n  outputs.item(data[0], tag);\n  outputs.index(0, tag);\n}\nif (length <= 1) {\n  outputs.done(data, tag);\n}","9f2d26e4-7f08-45c0-91bc-b2495b0c4a79":"const {array, index, doneTag} = state;\nif (array !== undefined) {\n  const {length} = array;\n  if (index < length) {\n    state.index = index + 1;\n    outputs.item(array[index], tag);\n    outputs.index(index, tag);\n  }\n  if (state.index === length) {\n    state.array = undefined;\n    state.index = undefined;\n    state.doneTag = undefined;\n    outputs.done(array, doneTag);\n  }\n}"}}},"interface":{"inputs":{"c1a54d85-36b5-4842-9688-fb2ab8d1cd41":{"type":"any[]","name":"array","description":"Sets up iteration and sends out the first item and index 0 with the tag associated with the received array.\nWhen the array has only one or zero elements, a signal will also be sent through `done`. \n\nExample:\n[\"A\",\"B\",\"C\"]"},"9f2d26e4-7f08-45c0-91bc-b2495b0c4a79":{"type":"any","name":"next","description":"Triggers sending out the next item and index, or, when there are no more items, the done signal.\n\nSignals sent out on `item` and `index` bear the same tag as the signal received through `next`.\n\nExample:\n0"}},"outputs":{"232f9f14-c24e-4f7f-b415-27ccbdfb9dbf":{"type":"typeof`array`[number]","name":"item","description":"The next item in the array.\n\nThe first item (index 0) bears the tag of the received array, subsequent items bear the tag of the corresponding signals received through `next`.\n\nExample:\n\"A\""},"8e36f0c9-932a-4e31-aa7a-e17ff0fee028":{"type":"number","name":"index","description":"The next index in the array.\n\nThe first index (0) bears the tag of the received array, subsequent indexes bear the tag of the corresponding signals received through `next`.\n\nExample:\n0"},"e159c36b-a301-46ff-92db-64eaeab74d69":{"type":"typeof`array`","name":"done","description":"Sends out the iterated array when there are no more items in the array and a signal was received through `next`, or, when an array was received through `array` that has one or 0 items.\n\nThe tag of the outgoing signal matches that of he original array.\n\nExample:\n[\"A\",\"B\",\"C\"]"}}},"name":"data/array/Step iterator (manual tags)","description":"Iterates over the items of an array asynchronously.\n\nOn receiving the array, the node sends out the first item (if any) using the same tag.\n\nSubsequent items will be sent out on receiving signals on `next`, using the same tag.","iconId":"d1c7639e-bdd6-4846-b494-1c303a532da5","attributes":{"locked":true}},"d755b98a-18fb-4ca2-8580-7ad8c426f4b2":{"description":"Trims the last iterable (colon-separated) section of the tag on the signal received via `data`.\n\nBounces when tag is not iterable.\n\nOpposite of `flow/Tag nester`.\n\nUsed for lining up signals with iterations. (See eg. `data/array/Iterator`.)\n\nExample:\n1. \"A\"@\"x:9\" received via `data`\n2. \"A\"@\"x\" is sent via `data` (output)","interface":{"inputs":{"ca54dccf-ed97-4731-8eb0-ef76fe19e844":{"type":"any","name":"data","description":"Receives signal with iterable tag."}},"outputs":{"c1927e5c-f5ca-42e1-aedd-78efd6748dfe":{"type":"typeof `data`","name":"data","description":"Sends signal with data identical to the one received via `data`, but with the last iterable section removed from the tag."},"490cac9b-c555-40d9-b5b2-06d7e75e84db":{"type":"typeof `data`","name":"bounced","description":"Forwards the signal received through `data` when its tag was not iterable."}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"ca54dccf-ed97-4731-8eb0-ef76fe19e844":"const matches = /^(.*):\\d+$/.exec(tag);\nif (matches !== null)\n  outputs.data(data, matches[1]);\nelse\n  outputs.bounced(data, tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"ca54dccf-ed97-4731-8eb0-ef76fe19e844":"const matches = /^(.*):\\d+$/.exec(tag);\nif (matches !== null)\n  outputs.data(data, matches[1]);\nelse\n  outputs.bounced(data, tag);"}}},"name":"flow/Tag trimmer","keywords":{"simulate iteration":null,"fake iteration":null,"synchronization":null,"syncing":null},"iconId":"2c4a8b8d-1580-4a5f-ad00-77936a3e914d","attributes":{"locked":true}},"34ed5ff2-43d8-46c5-92cb-f25b1ecbfeda":{"description":"Increments the iterable (colon-separated) part of the received signal's tag.\n\nBounces when tag is not iterable.\n\nUsed for lining up signals with iterations. (See eg. `data/array/Iterator`.)\n\nExample A (success):\n1. \"A\"@\"x:1\" received via `data`\n2. \"A\"@\"x:2\" is sent via `data` (output)\n\nExample B (invalid input):\n1. \"A\"@\"x\" received via `data`\n2. \"A\"@\"x\" is sent via `bounced`\n\nSee also:\n* `flow/Tag nester`\n* `flow/Tag trimer`","interface":{"inputs":{"4b2b80cb-8d64-40a5-ae06-342257b858cc":{"type":"any","name":"data","description":"Receives signal with iterable tag.\n\nWhen the tag is not iterable, the signal will be bounced."}},"outputs":{"b9ad661b-2879-4b8f-9335-c223ba010a4b":{"type":"typeof `data`","name":"data","description":"Sends signal with data identical to the one received via `data`, but with incremented tag."},"a5ea47e0-1e3f-4f32-afc4-3f0ebe9c3030":{"type":"typeof `data`","name":"bounced","description":"Forwards the signal received through `data` when its tag was not iterable."}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"4b2b80cb-8d64-40a5-ae06-342257b858cc":"const matches = /^(.*)\\:(\\d+)$/.exec(tag);\nif (matches !== null)\n  outputs.data(data, `${matches[1]}:${+matches[2] + 1}`);\nelse\n  outputs.bounced(data, tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"4b2b80cb-8d64-40a5-ae06-342257b858cc":"const matches = /^(.*)\\:(\\d+)$/.exec(tag);\nif (matches !== null)\n  outputs.data(data, `${matches[1]}:${+matches[2] + 1}`);\nelse\n  outputs.bounced(data, tag);"}}},"name":"flow/Tag incrementer","keywords":{"simulated iteration":null,"fake iteration":null,"synchronization":null,"syncing":null},"iconId":"2c4a8b8d-1580-4a5f-ad00-77936a3e914d","attributes":{"locked":true}},"172e2a79-6dd8-450d-9c60-99073c933eeb":{"description":"Performs an addition operation on the input values.\n\nExample:\n\n1. 19@0 is received via `a`\n2. 2@0 is received via `b`\n3. 21@0 is sent via `sum`","interface":{"inputs":{"f8db2394-8b73-41b1-8cee-570acf0ca976":{"type":"number","name":"a","description":"The first operand"},"824b46d4-6dad-4859-939f-376702e84adb":{"type":"number","name":"b","description":"Second operand"}},"outputs":{"3157073c-40d2-44fd-a94b-ea3adcce3440":{"type":"number","name":"sum","description":"The sum of the two operands."}}},"implementations":{"cranq":{"nodes":{"8734d770-7efb-4328-b75b-c77caeec3221":{"coordinates":[0,0],"description":"","params":{"ef31c1e9-cfd5-458b-8d3a-951e3db9c232":"[\"a\", \"b\"]"},"prototype":"222a7543-3692-4c6d-b027-c422c99b23a1","name":"sync a & b"},"76cad5f1-c028-4287-8bd7-bf7f2d141731":{"coordinates":[0,0],"description":"","params":{},"prototype":"c67401b8-a32e-4898-99f7-23940869944d","name":"add"}},"connections":{"8734d770-7efb-4328-b75b-c77caeec3221":{"75cde7e3-b158-4836-8bcd-a89e72314ee8":{"76cad5f1-c028-4287-8bd7-bf7f2d141731":{"0ad25c87-04a9-47ce-94c5-4b4af15d7e09":{"description":""}}}}},"forwards":{"inputs":{"f8db2394-8b73-41b1-8cee-570acf0ca976":{"8734d770-7efb-4328-b75b-c77caeec3221":{"a":{}}},"824b46d4-6dad-4859-939f-376702e84adb":{"8734d770-7efb-4328-b75b-c77caeec3221":{"b":{}}}},"outputs":{"3157073c-40d2-44fd-a94b-ea3adcce3440":{"76cad5f1-c028-4287-8bd7-bf7f2d141731":{"f3bdd887-63e3-4db0-8735-38ea85e2a74e":{}}}}}}},"name":"number/Adder","keywords":{"number":null,"addition":null,"sum":null},"iconId":"abac34e3-c832-4c7b-b045-62f82ebc3ddb","attributes":{"locked":true}},"c67401b8-a32e-4898-99f7-23940869944d":{"description":"","interface":{"inputs":{"0ad25c87-04a9-47ce-94c5-4b4af15d7e09":{"type":"{\"a\":number,\"b\":number}","name":"a & b"}},"outputs":{"f3bdd887-63e3-4db0-8735-38ea85e2a74e":{"type":"number","name":"sum"}}},"implementations":{"es6":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"0ad25c87-04a9-47ce-94c5-4b4af15d7e09":"outputs.sum(data.a + data.b, tag);"}},"es6-node":{"cleanupFunction":"","dependencies":{},"initFunction":"","inputFunctions":{"0ad25c87-04a9-47ce-94c5-4b4af15d7e09":"outputs.sum(data.a + data.b, tag);"}}},"name":"number/Adder/Internal","attributes":{"internal":true,"locked":true}},"147c702a-db38-4570-b875-ab166ae1319c":{"name":"#workspace/Uniswap v2 clone/Group 4/Group","interface":{"inputs":{"ab9f3927-d793-46eb-9813-48684812bd65":{"type":"any","name":"start"}},"outputs":{"6b7f4fea-9e9c-4026-9bf9-1405591400ca":{"type":"typeof `timestamp` of `timestamp getter`","name":"timestamp getter-timestamp"},"943705ad-e7cc-4633-a8cf-008f165bd16e":{"type":"typeof `data` of `expiration`","name":"expiration-data","description":"[Inherited from port `data` of `expiration`] \nSends store contents."}}},"implementations":{"cranq":{"nodes":{"f5c7f3cd-cd6d-40a3-b274-fa851f57dae2":{"coordinates":[3.5,43.5],"name":"expiration","prototype":"485b6519-9402-4e78-8599-47ad52c92b2f","params":{"543f8ad2-7755-44f6-bc9b-e6208c87b15a":"300"}},"97fe37d7-4afd-4eb6-a786-c397c76c496c":{"coordinates":[-3.5,-43.5],"name":"timestamp getter","prototype":"52636841-e2b9-4b13-ad5b-06eb8d1eb701"}},"connections":{},"forwards":{"inputs":{"ab9f3927-d793-46eb-9813-48684812bd65":{"97fe37d7-4afd-4eb6-a786-c397c76c496c":{"4181cd34-31ac-4d3b-8d19-3661105e6d1e":{}},"f5c7f3cd-cd6d-40a3-b274-fa851f57dae2":{"0b28df10-b056-4666-ae14-2357d747f7b9":{}}}},"outputs":{"6b7f4fea-9e9c-4026-9bf9-1405591400ca":{"97fe37d7-4afd-4eb6-a786-c397c76c496c":{"b57a2f23-7db9-4007-9c94-c66251abede3":{}}},"943705ad-e7cc-4633-a8cf-008f165bd16e":{"f5c7f3cd-cd6d-40a3-b274-fa851f57dae2":{"e7a0df14-dc8c-41bd-8aba-367fdb468ce3":{}}}}}}},"iconId":"11e997ab-33d0-473a-aa56-1e2fe4d30d5c","attributes":{"internal":true}},"52636841-e2b9-4b13-ad5b-06eb8d1eb701":{"implementations":{"es6":{"inputFunctions":{"4181cd34-31ac-4d3b-8d19-3661105e6d1e":"outputs.timestamp(+new Date(), tag);"}},"es6-node":{"inputFunctions":{"4181cd34-31ac-4d3b-8d19-3661105e6d1e":"outputs.timestamp(+new Date(), tag);"}}},"interface":{"inputs":{"4181cd34-31ac-4d3b-8d19-3661105e6d1e":{"type":"any","name":"get"}},"outputs":{"b57a2f23-7db9-4007-9c94-c66251abede3":{"type":"any","name":"timestamp"}}},"name":"time/Timestamp getter","description":"Gets current timestamp","attributes":{"locked":true}}},"resources":{"d6c7d254-d4ea-4185-a98a-29b8942d39cc":{"name":"icons/Source","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAHYAAAB2AH6XKZyAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMTZUMTA6MDQ6MjErMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTE2VDEwOjI3OjMyKzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTE2VDEwOjI3OjMyKzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpmMzRhY2FkMy1jYmIwLTRlN2YtOTE4Ni0yODc5YjFmN2NmMDMiIHhtcE1NOkRvY3VtZW50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"},"11e997ab-33d0-473a-aa56-1e2fe4d30d5c":{"name":"icons/State","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAsTAAALEwEAmpwYAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMDlUMTg6NTc6MTQrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTA5VDIwOjUzOjM3KzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTA5VDIwOjUzOjM3KzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo2YTE2NmZjNy0wZTZhLTQxMjUtYjA4NC04NjQ1MWVhOTU1MGQiIHhtcE1NOkRvY3VtZW50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"},"6e06ed83-301e-41ca-bae9-1257efb8e703":{"name":"icons/Sink","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAHYAAAB2AH6XKZyAAAFw2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMTZUMTA6MDQ6MjErMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTE2VDEwOjMyOjA3KzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTE2VDEwOjMyOjA3KzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDplNWU5MGZiNi1iNWEwLTRjNDgtYWM4Ny02NWY4YTgwNzc4NTMiIHhtcE1NOkRvY3VtZW50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"},"802b6352-2279-4681-84b8-6558e185fd36":{"name":"icons/Split","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAHYAAAB2AH6XKZyAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMTZUMTA6MDQ6MjErMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTE2VDEwOjI3OjM3KzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTE2VDEwOjI3OjM3KzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo2MjRlNWY1ZS00YzdmLTQ5YTktYWZkMC1iZmM1ZjZhNmY1ZTciIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6NjI0ZTVmNWUtNGM3Zi00OWE5LWFmZDAtYmZjNWY2YTZmNWU3IiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6NjI0ZTVmNWUtNGM3Zi00OWE5LWFmZDAtYmZjNWY2YTZmNWU3Ij4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo2MjRlNWY1ZS00YzdmLTQ5YTktYWZkMC1iZmM1ZjZhNmY1ZTciIHN0RXZ0OndoZW49IjIwMjItMDUtMTZUMTA6MDQ6MjErMDE6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMy4zIChNYWNpbnRvc2gpIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/Pqr5A88AAAPySURBVHic7dpbqJVFFAfw3zHNsgSzMk2CgqKCEMIyLSEK7SEoQqPI7kE99NBDREQRhEa9BD10E+q1ixGZ3UMJBAMl1KCkh6QeytAoO91Ij+LqYc6WfXbf952TZ5+Zw27/4YO9Z1jzX/Pf36xZs2YPRIT/M6aUdqA0+gKUdqA0+gKUdqA0+gKUdqA0+gKUdqCLmIY1+BobsXxMVhHRK88TMRKHI2LFaHYDPZQKf4mLOtr+wBLsqjPqpSWwt6JtJtZjVp1RLwnwJKpe5/Pwqpq59pIAm/FCTd+1WF3VMXXC3Bkf5uJsnD78jNXPb3FI2hE68Sh24O32xskUBJfiZizDBRPE8a+gOBkEuB6PSI7lwDdYhEHKxoBT8SY2yDd5UlB8rPWlVAxYiPcwrxD//taHEkvgEnyC2bmJh/EZrsYQ+QW4ENukBKUEvsel2NdqyLkETsA6o0/+ID6V3pLv8JO0tY0Fc6Vt7viKvgNYqW3yyHoYejaacSgi1kbEvHFwbGgY/64qm1yTPysiDjQ492tEXDNOjlUN4z9XZ5dLgJcanPsrIhZ2gWNrzfibI2JanV2OPOBE3NHQfy+2d4GnKp79gJs0xJAcAlyFGTV9W/Bal3jWdnwfxAqdQa8DVaqdjHNxXFfc4taGvqe7xAGv4DfciD14EbtHM+rMA+7HM9JrO9H4HXOkba8Y2t+ApXgeA5m4tys8eUbGgJXyTR5+zMhVi3YBqrKnicThzHyVaBdgY2buuZn5KtEuwDtS5MyFBSZBTbLqNHix5Nz0LnGswpU1fUuwtUs8pNPmddI2+K5UAmtGhjT4loY0+I0u8iyPiINtY++KiPmj2eUQYHakk14VjkTE5V3i2Vwx/raImN5kl2MN7sf7NX0DUl3wzC7wzKpoW2SUuJYrCK1WfWsD87FJSr/Hg7ozxT1ShluNDEug9bxVswxa+CUi7ouIqcc4/rSI2FEz9lBELK2yy1kTPANfGH3/3y0ti4+lm559xp40LcDnqpO6vVJBdk97Y+6i6DKp1ldq/98mbclHzyC5HdmE25RLgy/Dy+0NJX6J1yURhgpww+3aKlSlXsV1WIyvCvEfvYorfTk6HQ/jAZyWiXNQuhzZTXkBWjgJd0vX44tN3IXNEems8GGrYbII0I6ZuALnSCWzOcYuyBTcqfoPEqRb4adGtGRMhHI8DzYkWusjYqBkIjTROB87VRd0d0lL68/OjuIFiS5ijerJD+IGFZOntwTo/JMkKeit0nA/0EsCbKloexwfNVpNgsDVreeUiPhgOOD9HBEPVQW9Xg6CLczA3+rrDyPQiwL8J/RSDDgm9AUo7UBp9AUo7UBp9AUo7UBp/AMhEsL7H8bFCQAAAABJRU5ErkJggg=="},"7341443a-8a0a-4a83-b302-effdb497c0f3":{"name":"icons/Merge","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAHYAAAB2AH6XKZyAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMTZUMTA6MDQ6MjErMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTE2VDEwOjI3OjM5KzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTE2VDEwOjI3OjM5KzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDphNDkyODRlNS0yNDUxLTRkMzktODQ1Ni0xODRkZTEyYjhhOGMiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6YTQ5Mjg0ZTUtMjQ1MS00ZDM5LTg0NTYtMTg0ZGUxMmI4YThjIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6YTQ5Mjg0ZTUtMjQ1MS00ZDM5LTg0NTYtMTg0ZGUxMmI4YThjIj4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDphNDkyODRlNS0yNDUxLTRkMzktODQ1Ni0xODRkZTEyYjhhOGMiIHN0RXZ0OndoZW49IjIwMjItMDUtMTZUMTA6MDQ6MjErMDE6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMy4zIChNYWNpbnRvc2gpIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PlntJ/wAAANXSURBVHic7ZpPSBVRFMZ/76n01zCCiGgblBVGSUWLhFxEUfTXahG0KaKgCGsR1NZFYARBJQUhRSEktSikoBa2qIWiGVSLol1WRClKVuLztLgOzXvcmakZ3z3Cmw+GN3NnzjnffHfm3DvnvoyIUMrIahPQRiqANgFtpAJoE9BGKoA2AW2kAmgT0EYqgDYBbaQCaBPQRskLUF5wnAV2AsuBGQn8DgKfga9AL9CfwFdRUV6w/xDYVIQ4b4BHwFXgfRH8x4eIeNthKT5yInJXRJb64qpu/hyw3oHeWWAP0AM0MgVykJ/AoMO404ELwAOS5ZrEyMjfmuBKoBsoc8zhGbAVGHYcF8h/Al4CDcBHxxw2AG1AxnFcIP8J8GNuQr/zgAXAamAHUEf0DZ7GvBZxkQFOYDrxE3AReB5p5Sjb1opIZ8QI8VtEqhPEOGnxtyXKzuWQUyYizREitCXw32XxNyAii8PsXA5DOcxj3hxyTQNQHdP/gKWtCrgPVAYZaYzDZ4DOgHNZ4GBMv+cBW0JbBrQSlIMcvgL+rUbMrNCG1wn8tgT4FBE5a7MJGgVc4AlQH3DuEDAUw2clcAWYZjk3DmwDOvyNmgIcBy45jjkErAPeeg2ac/FuhZhzgHsTv4CuAK5nnB6WAOe8A00BVKa+ExjzdjQFWKQUtw9o8g40BVijEPM7sAv44TUU1gRdYnvIuQbi1SeqgFuYekMhcsA+4ENeq9JEaK2IjAdMWPoS+G0NmQg12mw0br5CRF6EEG2K6XdziM87QXYaAlwOITomEV9vIdvTAJ+9IjIzyM5lEqwAWoBjIdfcBt7F9D/b0vYNs84xEmjlqNfrRKQ7pOdFRH4m6H1E5KjFX32UnW0UKAMWYnosLmZhxvlVmJJY7T/YnCJ+74NZdBnFZPp+zHdGT5RR4cfQbszX1PwEROKgHTP0OYdfgBUYxVzPDTowwv9yHBfInwnux/3Nt2OSlMrNQ74AgXWzImAYOALsxby3avALEFSnm0yMAjeAGuAa9hqeU/hzQAa4CRyY5Bg5oAt4DFxHrw5gha0kthGzTphkGBwBvmD+JPEKtwuv/wXNmuCUgPr6vDZSAbQJaCMVQJuANlIBtAloIxVAm4A2UgG0CWgjFUCbgDZKXoA/ZGDs7sYrnfAAAAAASUVORK5CYII="},"abac34e3-c832-4c7b-b045-62f82ebc3ddb":{"name":"icons/Code","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAsTAAALEwEAmpwYAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMDlUMTg6NTc6MTQrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTA5VDIwOjU1OjI3KzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTA5VDIwOjU1OjI3KzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDozMzM5Njg3NC1jMTg5LTQyNGYtYjQyMi05YzA0ZDE0MTIyNDkiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MzMzOTY4NzQtYzE4OS00MjRmLWI0MjItOWMwNGQxNDEyMjQ5IiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MzMzOTY4NzQtYzE4OS00MjRmLWI0MjItOWMwNGQxNDEyMjQ5Ij4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDozMzM5Njg3NC1jMTg5LTQyNGYtYjQyMi05YzA0ZDE0MTIyNDkiIHN0RXZ0OndoZW49IjIwMjItMDUtMDlUMTg6NTc6MTQrMDE6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMy4zIChNYWNpbnRvc2gpIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PlVi5REAAAI3SURBVHic7Zu9jtNAFIW/kG43QQtUeQMk3mAjKEIKGt4O8QgIpaWhQjTJE2xBg0QFDVqKiO3QoWAsRWYT2zM3uR5njjSVnTPnfLHj34wkcc564B3AWwWAdwBvFQDeAbxVAHgH8FYB4B3AWwWAdwBvWQKYAc+AsaFnXeMwx8zK0ALABFgB34Eb4CswN/Ctax68b8JcqzB3miSljKmktf7XT0lXid674yp41rUOGaK9U7aAKfARuL5n2RNgmeBd1zJ41nUdMkxjjWMBHCp/aqVBMNzsPXaB5N3hGOV/S1oYlq/GInibQugS4FLS5xblXx6hfDWeS9o2ZNhIemgNoA/ljwIht/LmEHIsbwoh1/JmEHIubwIh9/LJEIZQPgnCUMpHQxhS+SgISJrI7/T2WKPtafMlkt4OrHwXCG9Gkm6BR3suFu+A18CnqEtNfy2AD8DFnuW/yk1R4P2B5Rf8I7g4TRxTNX37AO/Kj2D4QJvD4J2kZQ/KNY0Xaj4MrrVzGBwShE7l6wByh9C5/H0AcoUQVX4fgNwgRJc/BCAXCEnlmwD0HUJy+TYA+grBpHxbAH2DYFa+C4C+QDAt3xUAOvNHY10gZPNwNOZyeAu8AjYH1jnV+wGVNiHTtqtx7P2ANhBOpejyQHlFxiLcRNJqJ9Q3SXPD8tWYB+9KqzB3ku9IMvvLzAx4DHwB/liZ1jQGngK3wA8LQ0sAWarcFPUO4K0CwDuAtwoA7wDeKgC8A3irAPAO4K2zB/AXuGSbTyQBX2QAAAAASUVORK5CYII="},"88cb21a8-d088-476e-8a3a-fb62c6a5fd58":{"name":"icons/Read","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAsTAAALEwEAmpwYAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMTZUMTA6NTk6MDQrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTE2VDExOjU5OjIzKzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTE2VDExOjU5OjIzKzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpiNWY3ODJjYi04YTE2LTRmNTUtOGUwZC1kZGFiN2RlYTQyODMiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6YjVmNzgyY2ItOGExNi00ZjU1LThlMGQtZGRhYjdkZWE0MjgzIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6YjVmNzgyY2ItOGExNi00ZjU1LThlMGQtZGRhYjdkZWE0MjgzIj4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiNWY3ODJjYi04YTE2LTRmNTUtOGUwZC1kZGFiN2RlYTQyODMiIHN0RXZ0OndoZW49IjIwMjItMDUtMTZUMTA6NTk6MDQrMDE6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMy4zIChNYWNpbnRvc2gpIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PpY/5RwAAAM0SURBVHic7Zs9TxRBGMd/B4fNgQGMEFq10FiCBS9R0caXqI0agx/CxA+gPYkt30BjkM4XVBQLjYUWVgZDTJQKJXoQIcSEI4/F7Op57A4LO7MPJPNLrrh59ub5P/+dm9u9mS2JCAp0Aa+AI9H7GWAYWChaSEnBgArwBdjf0P4TOAD8KlJMU5HJMMVPsbF4gH3AS2BvkYKKNKANeA70W47pAyajYwuhKAMqwENgIMOxA8AzChoJRcwBbcBTshVfz1vgDLDsXFEdvkfAVs58I4WMBJ8jYLtnvhGvI8HXCMhz5hvxOhJ8GFABHgMnHPbZjxlNzk1wbUCW4n9bYquWmBcTXBqQpfhV4KYlfgNYscSdm+DKgKzFXwTeWY75AJyjQBNcGNCKucLbrPgLmEvdzXgNXGLzr8NklDsXLgwYxT7bx8VPb6HP6egzNhMGoty5cGHANUtsO8XHZDHBljsTPq8E8xQfk8WEXLgw4H5Cm4viY2wmJOXeGiKS99UqIuPyj68iMmQ5vlfS6bV8bijqO2Y8yp1Lfzm3g+Yn6yrQA3QCn4B1B/028gY4CBwGqsC8i05dGBAzjyNRFtaBjy47LPovsR1HMEBbgDbBAG0B2gQDtAVoEwzQFqBNMEBbgDbBAG0B2gQDtAVoEwzQFqBNMEBbgDbBAG0B2gQDtAVoU29AD3AUaPac07bO520NMKIZU2PP35aUpa1BB0tmaa9mEZlLWBabi2K+8g4mLa0hImMJYn6ISLtHMcdFZLEu32LU5itfe1RTI2MlEakCHQnD5Qow4XE4dmL2/4HZ8lL1mOsy8CChfbFMcvFgBPqkCtzznCMmrZaO8CugLUCbYIC2AG2CAcBaSszl7hFtWlLa15qA7ynBPk9iNDiW0v6tCZhNCV4HTnqRUyzDwEhKbLaM2eR8KiG4B7MH+C7wHqh5keePFsyZHyH9K/CoJCLdwGccbDzeZSwDh+I54I6yGA1GgYX4oaky5obktKqk4ngBnAVq8XVADXPHlGU//25nCnOnW4P/L4SWMLent7E/sbFbWQFuYZ5IWYob054b7MLMnucxe3O7SZ9JdyprmPltBniCufXe8Hj+Hzoe+SuK7Eu+AAAAAElFTkSuQmCC"},"89f4fde2-5391-4f4c-b55a-55ada280f89c":{"name":"icons/Write","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAsTAAALEwEAmpwYAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMTZUMTA6NTk6MDQrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTE2VDExOjU5OjM3KzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTE2VDExOjU5OjM3KzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo1ZDMxZGQ4OS01NTA2LTQ1NjktODk1Ny1iMzVhOGVhMjE4ZDgiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6NWQzMWRkODktNTUwNi00NTY5LTg5NTctYjM1YThlYTIxOGQ4IiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6NWQzMWRkODktNTUwNi00NTY5LTg5NTctYjM1YThlYTIxOGQ4Ij4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo1ZDMxZGQ4OS01NTA2LTQ1NjktODk1Ny1iMzVhOGVhMjE4ZDgiIHN0RXZ0OndoZW49IjIwMjItMDUtMTZUMTA6NTk6MDQrMDE6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMy4zIChNYWNpbnRvc2gpIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PsVemBAAAANQSURBVHic7Zu7axRRFIe/2TwaU5gEjAmkSyEIgkSrNEaD+GgVYgRB0aCyWFlrZeOjsUgESQJCFKJFChXxgX+AhWATCBaCIDGgCRgLzbLHYmZinOydTHbuvWfB+WBh956Ze3/ndx/ceWwgIiiwDbgNnIp+PwKuAj99CwmUDHgMnEiUPQFO+haiYcBO4AsQJMoF6AEWfIop+WwsooeNyROV9XjWomJAreSzxJygYUBDURigLUCbwgBtAdoUBmgL0KYwQFuANoUB2gK0KQzQFqBNYYC2AG0KA7QFaFMYoC1Am//egGZL9bQCh4EO4C3w2VK9SXqBQeA78BL4nbtGEcn76RWROfnLLxEZTTm+X8z0p5w3GtUdMxe1nUu/DQNmayRSFZGyRQPKUZ1JZhvBgBVDMiYTtmqAKXmJ2s6l38YiuGQoD4C7QDlH3eWoDtMDE1PbmbFhwFhKLI8JmyW/WdvZsDAFSiIykTKsk9MhyxRIG/YxE1Hb6msAIhKIyHgGE65kMGA0Q/KTNpK3acBWTLiVEr/hM3kRsf5+QEA4Ly+mzTrM8zotBjAFnAeqdamrge2tsACXgXspx9T7eNx68uDmWiCLCVvFSfLg9hWZEnAfOJeznkngAg6SB7dXg1XCXsszEqZwmDz4eUmq3pHgtOdjfNwPqGckOO/5NSzuA2zsGEUs7fC09gGbEQATwFlDfBo4g4+ejwV5NgDCafce2JMo/wDsxWPysZiYbmA30OS4zSphog8IL2eXou8+km8izLF7rURE2kRkZt0c/CQiAx7XBl+fgSi3mBkRaQtEZAy4lHDqG9AHLDvuEV9sBz4CnYny8RIwXOOETmDIsSifDLExeYDhEtBuOKnDnR7vmHJp/+8fjBQGaAvQpjBAW4A2JWDVELP14LQRaDGUr5aAr4bgPkdiNNhvKF8oAfOG4GnggBM5fhkERgyx+WbgGXCwRrCV8Bn8NPAOqDiR544Wwp4fwTwFngYi0kW4T27zpaxB+AH0xWvAHWUxGtwEFuMbIs3AC+CQqiR/vAaOApV4H1Ah/C/vGzVJ/nhF+B/lCvy7EVoGjgDXgRXvstyzAlwDjrHuPofpnuAOwtXzOLAL6MK8kjYqq4Tr2xzwHHgILCYP+gPSaBSX2hBihgAAAABJRU5ErkJggg=="},"6876e900-c9f1-44f9-a00a-83df8456d721":{"name":"icons/Device","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAsTAAALEwEAmpwYAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMTZUMDc6MTE6MjQrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTE2VDA5OjMxOjI1KzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTE2VDA5OjMxOjI1KzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpmMmQ5OTJiOC1lMWJhLTQ3NzUtYjczNi1hZDM0M2JiZDkxNGEiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6ZjJkOTkyYjgtZTFiYS00Nzc1LWI3MzYtYWQzNDNiYmQ5MTRhIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ZjJkOTkyYjgtZTFiYS00Nzc1LWI3MzYtYWQzNDNiYmQ5MTRhIj4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpmMmQ5OTJiOC1lMWJhLTQ3NzUtYjczNi1hZDM0M2JiZDkxNGEiIHN0RXZ0OndoZW49IjIwMjItMDUtMTZUMDc6MTE6MjQrMDE6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMy4zIChNYWNpbnRvc2gpIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PunBvcIAAAZXSURBVHic1ZtriJZFFMd/66XUVVsveUECE81bZWmlLlmarl21+hAVFUX1IQj7YBFERFJJZVGRdBOzqOgeZWKpkYGimGRpKltGbVIq5TVNTV3334fzWOuzM/M+73N5F//wftg5Z/4zc54zZ+bMzFZJohXQC/gKGBr9XQ9MAP6sdEeqWsEA1UADcGqsfCcwANhbyc60qWRj2OC/oOXgAXoAXwJdK9mhShqgC7AEGBvQOQ/4PNKtCCplgGpgAVCbQLcWWEyFPKESMaALsIhkg2+OlcBlwL7ce9QMRXtAOV8+jop4QpEekPbLx1GoJxTlAVm+fByFekIRBqgGFgIX58g5FvOm3I2QtwE6YktdaPD/pJSNxZbIjin65UXeBriPsNsfiHR8mBbp+FBbon7ZyNsAdQHZAWAKsCagszrSCRkh1EbZyNsAuzzlxwa/tER9RTohI/jaSIW8DfASNojmiA++KgGPzwiK2sgNeRtgMXA9lt4eBVZgaW6pL38MzY23NKq7IuKqj7gX59VZaJ10uBYblAtnARsS8owDrgPGA/2ATsAfwFpgPvA+sL8ki6RK/2rlx/AE9QdLWhLgOIatkm4txVfp8wBIFgN8qANWkWwl6Au8jsWMtj6l1jBACKH5OAr4BKgpk/MuYJZPeKJ4QAfgQ2yep8F04CqX4ETxgLuB/hm5n8QxFdqVQVCNzb3hQG/s8HILtvf/uQyeNB5wZ0DWgM31PVH/nF8aGIatQMuPK00QdftIelHSwUDEXS1pcsJVYFyAZ4hDf1BAf6WkzjH9ewL6s+L8pTp7qaTdAcI45ko6qQTnRYH6gx36Vwb0Rzv0qySt8+h/HNcPxYBrsby+JpGTGu7AIrV32aH8KdAzIPvOUSbgW49+r3iBzwDDgDcJD8SHy4HHU9QDdxDcE9Dv7ykf4ClvweUzwLNY0EuL6ZgRXSjXAzYHZB/Q8iNNxrbJLjTEC1wGGBWR+HAYWA9sD+i0Jd3BhcsDvge2efTPBn7CMscLgUewPMBn5EUtW2wZRB4LBJ0FknpFem0k3S7pkEd3h6R2Dv4JAf5BDn0kPRWokxTbJHWIc7s8YIzHepux7OvYDW4TMA+Y6dHvAQz0yHzwbYTyOAecgePM0WWAvh6CBS4C4N1Ao/0cZeXEgA7AG9hOMAsWAXNdgnJ2gj5kye7iaO4BI4HXsHmeBcuwg5SjLqHLA7Z6iKbidsUbAo1vcZSVMtgAbGp9TbbBHwGew7bH/jcHjoDzaCCQLJTUW/8HwVmSmjy62yW1dfBPDPAvk3Q0UUizviyX1Bgr3yzpebl3lS1+rsKRJRo+LGm9pF0l9F71NDqp5NDCaJL0YDO+kyX1l50m1XjaLMsASPosYycbJQ31cGcxwAFJN3p4U/18O8F7gb8zzD9hKbMLaV9/rMPS2XdS1nfCZ4B64BagMSVvO2zpudkh61Em1z7gIeB87MQ3X5RwkTqVnushNEmaqeNT5CkJ6+6U9ISknnm5u+uXRKmXpBck7U9jgQibJI2P+CYH9PbJcvab5Ni2FvEr52KkEzAJOxLrC/wF/IYdMc3BkpEQmoD3sBcfsz06AynveC0z8roZOgX4CJiYkWcttvt7BTiUkSsZcnSn9pLmpZgeLvwq6YpKTIEiSB+QdCQHIxyVdP+JaAAkjZCdFOeBaUUaoMjb4Uuwd8FZL18aI67lpRTToCgDtAG+Ac7NiW8dlh435cT3H4q6GruG8OAbgNuAztjWuA7zFh9GYOl4/ihobr0dmNNPyy4v4nWqJD0TqPfWiRIDqrCHTDUO2RrgAvyu3CbSOcch2w10z969lg3mjW74b5PmEJ7HTdgmyMfbLX233CjCAH0Cso0J6ofeCPkObFOjCAMcDMiS3DZ1DshCDyhToQgD+G5xIFmu4NNRCe5UKGofsBH33eBe7KTXd993Orbmu06NNgJn5tK7ZihqHzDfU94VOyka4pANI/wPUz7OTCjKAwZjwcx38XIEe0ewCls2xwBXA+0D+sOxi9B8UWCi8XJgU1MuZhfVzyKToe7YFx6UkWcTMJrwQ4nUKPKZ3C7MrXdm4NiB5QB78uiQC0W/E6zHtr5JNkBxbIjq/phrj2KoxEPJXzAXnkGyy5Z9wMNYYGzxpCVvVPq5fA9sWkwFzgBOi8p/B34APo1+WaZNWfgX3qHhWiiEy64AAAAASUVORK5CYII="},"cbb85c56-3c8f-4e5e-afdd-a9dd9e84385d":{"name":"icons/Transform","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAHYAAAB2AH6XKZyAAAGSmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMTBUMDY6MzM6NTMrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTEwVDA2OjM3KzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTEwVDA2OjM3KzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo0ODUzMDcwMC0wNGQwLTQ5MTUtYTUxMC05NWY0YjNkMzMyZjQiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6Yjg4ODkzZjYtYjE2NC00ZWUzLThiOTMtYzY1MGNiNmVhZDkwIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6Yjg4ODkzZjYtYjE2NC00ZWUzLThiOTMtYzY1MGNiNmVhZDkwIj4gPHBob3Rvc2hvcDpEb2N1bWVudEFuY2VzdG9ycz4gPHJkZjpCYWc+IDxyZGY6bGk+eG1wLmRpZDoyYzJhMGUxNi1lYWJhLTQ2NDUtYmU1Mi0xMzVkMmEyYmU3N2E8L3JkZjpsaT4gPC9yZGY6QmFnPiA8L3Bob3Rvc2hvcDpEb2N1bWVudEFuY2VzdG9ycz4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiODg4OTNmNi1iMTY0LTRlZTMtOGI5My1jNjUwY2I2ZWFkOTAiIHN0RXZ0OndoZW49IjIwMjItMDUtMTBUMDY6MzM6NTMrMDE6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMy4zIChNYWNpbnRvc2gpIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo0ODUzMDcwMC0wNGQwLTQ5MTUtYTUxMC05NWY0YjNkMzMyZjQiIHN0RXZ0OndoZW49IjIwMjItMDUtMTBUMDY6MzcrMDE6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMy4zIChNYWNpbnRvc2gpIiBzdEV2dDpjaGFuZ2VkPSIvIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PsF3OIYAAATFSURBVHic7ZtJaF1VGMd/r0nfK1SJUbTWCraCgpDUaVFU6LbE4lDopgXdKu5cKIJSpQXbVKziROsAT6op2KLWlLa6E7SiO1MriERUmpeIiIhCpub9XZz78Hlzzp2HXJI/HLg5wze970zf+VKTxHLGqrIFKBsrBihbgLKxYoCyBUiIOjAMTHrlANBIRElSFcuwFuO0pEZcWrWKboNTwDpL/afAg8BMVEJVnQKuX20b8DGwJiqhqhqgGdC2DfiQiGtCVadAA/gIGArocwbYAcwGEaqqB8xi5vpoQJ8h4CQh06GqBgCYA3YSbITQNcE1BerAPuAhYL2lvQ38BVwExoDPPUa/h4qdDFdj3HkrcCuwAegj+g/4E3Ab8PeiFsf+eMCyz4ZhXtKIpMEM9/vNko5JupRAHj++svFwMZ5IweiSpEOS1jpoRymXSXpZ2SjewYKNl2sKTADXxffU/2EMeAD4Oea46zGL1x0p+fuxAPT6K11z6GgGDDcDXwCbYoy5Efia7JUH+MZa63DBusw6kGYqdPCjpH4Hn+5ypaTxDPjZMC7pchvfpHO0IelmSdslvSdpOkSA4xFongihMS3pqKR7Jd3kyVCX9EnIuLOS1rj4ZrVaXyNpNESQXQHjd4WMPenx8HtpKuWzNACSapKeCRBmUvap0O+1ufC0R9vvgadDlI90Pc7SAJ3yToBQhyz9Dwf0bzp42OIBsZXPywANSecdgrV8fe+W2Z9tOC/j5jYeUwHKh7p9d8njLjALPIo5LvtR6/ruBd7AvhW3PRpzDh6uK+ySCYh8CbxuqW92fT+BOdfb8JZHw4Wmpe4M5uAVWXkg15hgj8xZYlLSRUnPe3VI2ijpH4cLTyn83NA5p7S8sl8J4oFSeTHBU8B2R9tu4FhRgpQRD9iNW/nPKFB5KD4k1gd8j/2iNQ0MAuNFClS0BxzEfcvcR8HKQ7EesAU4h93oF4DbgfmihOmgKA/oBY44+LWBRyhBeSjOAE+SfM/PFUVMgY3Ad8BaS9tvwC3An3kL4UIRHvAaduUBHqdE5SF/AyypPd+GPA3QB7zgaJsGHvO+e4D9QAvz1j/s1QWhEvkBRxxnfUl6qqvfQUv7KyG0M8sPyEv5LQq+56/u6mu72y9IuieAviseECsWIOUTD2gAb5Nuz18FHMbt1ks6P+BVYMDR9ibmNNiNEUffAUzAxIZmAP9Y+QFZun1N0h6Ha0rJg6J7VIGg6LWSToUIlCYsPippnW9MqWHxHknrZR4pRiTNhAjyQQSax0NozEh6X9KQjMF7sjCCS5i6zFbTCiEeBT9IusIlQFfpl3lGywOxn8aS5AfY8KukGxw8bGWTTPwwD1jzA1yXoRb2zJA4GAPuB36JOW4D5nn8zpT8/WhjOWG6tsE0V8QF4EXgLuIrDyY3YSvwkkcrK9h1crhikikwJ/NSPOCgmaQMyix88wnk8eOcjUdQktReTJKULYbXxlxjJ4Bv+S9J6o/0P5QVV7E4SaqfDJKkqpoo2UEdOAHcF9An8LmsynmCqZUHS9JQRbDsU2X3koHyUN01wPX/AhDzibyqHrDk8wPyRtNSlyg/oKqL4LOYbJOHvb/fBZ4jwpz3o6prQGao6hTIDCsGKFuAsrHsDfAv0M0GrV2jUH8AAAAASUVORK5CYII="},"5e431e82-f53c-441f-8721-f5b6e0257a4d":{"name":"icons/Time","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAsTAAALEwEAmpwYAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMDlUMTg6NTc6MTQrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTA5VDIwOjU1OjE3KzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTA5VDIwOjU1OjE3KzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDoxOWI4MDBkNS03OTg1LTRkOTktYjg4NS0xOTc2YzMxNTI5MDciIHhtcE1NOkRvY3VtZW50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"},"f7d13a1a-3ec0-4bdd-8d61-e449c79398da":{"name":"icons/Insert","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAsTAAALEwEAmpwYAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMTZUMTA6NTk6MDQrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTE2VDExOjU5OjI4KzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTE2VDExOjU5OjI4KzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDplN2NhNmNkZi0xNDBiLTRlNmUtOWIzZC1kN2UzZTFiMjY5OWUiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6ZTdjYTZjZGYtMTQwYi00ZTZlLTliM2QtZDdlM2UxYjI2OTllIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ZTdjYTZjZGYtMTQwYi00ZTZlLTliM2QtZDdlM2UxYjI2OTllIj4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDplN2NhNmNkZi0xNDBiLTRlNmUtOWIzZC1kN2UzZTFiMjY5OWUiIHN0RXZ0OndoZW49IjIwMjItMDUtMTZUMTA6NTk6MDQrMDE6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMy4zIChNYWNpbnRvc2gpIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PvxKTE4AAAItSURBVHic7dq9axRRFIbx3wxrbE2lGEXExg8U/CiC0cYi/gd2glhYqSAiGuwVC7EQwUawU2zENqQS7UwgUYKNAVGsBBNE1BA8Fms06KbYsJljdueBZdi5HHjuW8zMPfcWEVHgMs5hs97gA27jRhERV3A9WSiLkSIi3mFLtkkS70v0Z1sk0l9iLNsikbEiIrZiFDuzbSrmNYaLiIA+DOutt8Ao5hcD6FnKbIFs6gCyBbKpA8gWyKYOIFsgmzqAbIFs6gCyBbJp/LoO46y1uRiawwPcQ9sLmwZO4CGKznpVyjHswEi7hUVETGNXx5WqZx4bMdtOUYntq2GTQB8G2i0qMdF5lxTmMNNuUYkL+NxxnWr5gfP42m7hYkdoG05Zm2+BWTzC+EqK65ZYtkA2dQDZAtnUAWQLZFMHkC2QTR1AtkA2dQDZAtk0/vq/DodwALtbjK9VvmMKLzBpSets6QT34L5mAN3MM82V7xv+rAaP4wnWp2lVyxyO4FUREf14aQXtpDXOBAZLXNR7k6f5nDtZ4nC2SSKDRUR8woYWg2/xsVqfVWMAm1rcnxDLcyYidMnv2jJznOn5D6E6gGyBbOoAsgWyqQPIFsimDiBbIJs6gGyBbBpY0Lr1dbRil9Vk/zL3F4qImMLeKm3+Ix6XVniyoksYLyJiCE/13vPgC/aVeI5byTIZXMLvfsBV3NQ8bdXtfNOc/F3+PSQ1hNM4qLlP0E0bI5OaGyN3ML048BO+dj7YKkVm3AAAAABJRU5ErkJggg=="},"47baa0d3-adcc-4071-8ab3-768676771342":{"name":"icons/API","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAsTAAALEwEAmpwYAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMDlUMTg6NTc6MTQrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTA5VDIwOjU1OjEyKzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTA5VDIwOjU1OjEyKzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo0MTI2MGFjMS1jMmE0LTQ1MTMtYjc4Yy1kOGQ1ZDFlNzVlZDAiIHhtcE1NOkRvY3VtZW50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"},"c3fdd7fb-1ae3-400a-bf93-30e24b1ea004":{"name":"icons/Search","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAsTAAALEwEAmpwYAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMTZUMTA6NTk6MDQrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTE2VDExOjU5OjMxKzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTE2VDExOjU5OjMxKzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDplZGI4MDhmMS1hODkzLTQ4MjYtYjU5Zi03YmU2ZWM1ZWE2MmIiIHhtcE1NOkRvY3VtZW50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"},"d1c7639e-bdd6-4846-b494-1c303a532da5":{"name":"icons/Loop","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFw2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMDlUMTg6NTc6MTQrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTEwVDA2OjI4OjU0KzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTEwVDA2OjI4OjU0KzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpiNDk5YjljMy1kYzZlLTRmYTQtOWUyZi1lMDNhZWIwMTQ1YzYiIHhtcE1NOkRvY3VtZW50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"},"2c4a8b8d-1580-4a5f-ad00-77936a3e914d":{"name":"icons/Tag","type":"icon","lightness":"light","iconData":"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAAsTAAALEwEAmpwYAAAE9GlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuOWNjYzRkZTkzLCAyMDIyLzAzLzE0LTE0OjA3OjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjMuMyAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjItMDUtMTZUMTA6NTk6MDQrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDIyLTA1LTE2VDExOjU5OjQwKzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTA1LTE2VDExOjU5OjQwKzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo4MGJlYTRlOC1iNzczLTQzZWEtOTIzOC1kN2M4YWViZDVhY2IiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6ODBiZWE0ZTgtYjc3My00M2VhLTkyMzgtZDdjOGFlYmQ1YWNiIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ODBiZWE0ZTgtYjc3My00M2VhLTkyMzgtZDdjOGFlYmQ1YWNiIj4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo4MGJlYTRlOC1iNzczLTQzZWEtOTIzOC1kN2M4YWViZDVhY2IiIHN0RXZ0OndoZW49IjIwMjItMDUtMTZUMTA6NTk6MDQrMDE6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMy4zIChNYWNpbnRvc2gpIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PtTX644AAANuSURBVHic5Zu/axRBFMc/mxxo/oAUaidYaJFGwaiNgo12CSlsFYygXKysrEQiohZKQIuQQ0REwUL/A4mIEAuJqDGVTWy0EBSSgJd8LfYOzvNud3Z2dnbu7sHA/ph9895n3rzZmb2LJNEiR4Bp4CCwH6jgTlaAa8AzhzrziyQk7ZB0W1Jdxcq2pGqjzSBK8+BOkV63ybakGdeO2JZI0lFgERj2GXjAZWDOY5sdZQg4j1/nASLgHlD13O5/MkSc8MqQICBEkv7QOds/Bl47aOMEcCbhfrnDISFZTTtKNJGk+6EmxiEfjIFLwIOEOhFwF5jxYM8/4gMABAzBFwAIFIJPABAgBBcAKsA+YMSwflAQ8gAYBZ4Av4EF4BfwingRlSbhQLCcBkclfWupu9hyvCHpUK9MkbYRMAfs7nJvJ/AQs6V0+ZFgEQEVSespvSZJYxl6orRIsImAvZglvANZ+oGSIsEGwBpQN6j3NaPeUiDYAFgH3rRd+9h2/gNYttDtHYJtErwAbLSc/2y7fxHYtNTtFYItgFXiDdT3bde/A1PA8zxG4ROCxSzQPiOMSZqQNC5pxHGWLnx2yAvARxmStGAAwWq3OWkIHMf/YqmTbBPvW9YS6thvr0naSiC70OiBsqOgsEhA0ucUpX0NAUlTjYcGEkLzYNoAQi0gCM5mh9aTgYTQfmHgIHS6OFAQuikdGAhJSgcCQprSqgGEXpwiz5oC6FcIm5IOmwLoVwhLkqIsSvsRwumsSnsRQi3B1nkbpb0GoSJpuYudKzbr/TniX3Qooc45YJ4w9hPqwNMu93bl+TLUaxA6yXDe8OqF4RBJetvFtlUXDYQO4WaCXY9cNRIqhNkUmyZdNhba2uF6ii1fJFVcNxpKJKT1fF3SScn8VbiXIKQ5L0lXmvWL6oGyhkNa2EvSrdZnigxD3xAyO180AJ8QrJz3AcAHBGvnfQEoEkIu530CKAJCbud9A3AJwYnzZQBwAcGZ82UBQGYvSzXFmxnNZyIlL2yaMpvFlkhKWtIXKlXiHzVECXU+EG9m1IFJYDxF5w3gaiYrSoqALJFgKpl6vlnKBoDMckKaGI/5EAHkjQSrng8NAIo/V21mcLyullVdPwBA8eeqdwbOf1JjPZ+3lDkLdJMIOAVMAMeAPcR/7V0DloAXwEtgy0VjfwHz67gEPQVBaQAAAABJRU5ErkJggg=="}},"rootPrototypeId":"8ba260f1-ec04-4711-86f5-0b1c88cb4f85"}